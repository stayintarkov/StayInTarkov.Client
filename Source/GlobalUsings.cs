global using AbstractGetBossLogic = ABossLogic;
global using MonoBehaviour14 = AbsolutDecals.DecalProjector;
global using PositiveX = AbsolutDecals.DecalProjector.ProjectionDirections;
global using Unbaked = AbsolutDecals.DecalProjector.ProjectorState;
global using Unsuccess = AbsolutDecals.DecalSystem.BakeResult;
global using MonoBehaviour15 = AbsolutDecals.DecalTester;
global using GScriptableObject17 = AbstractMaterialBumpedSpecularSMap;
global using GScriptableObject18 = AbstractMaterialSpeedVertPaintShaderSolid;
global using UIElement4 = AchievementsSystem.AchievementIconView;
global using GMonoBehaviour6 = ActionTrigger;
global using GMonoBehaviour21 = AdditionalNavmeshBlock;
global using GMonoBehaviour333 = AdvancedLight;
global using Point2 = AdvancedLight.LightTypeEnum;
global using Diffuse = AdvancedLight.ShadingTypeEnum;
global using ProfileDataContainer = AggressorStats;
global using GMonoBehaviour199 = AGSMachineryBones;
global using GBossToFollow = AIBossPlayer;
global using GCreateOrFind2 = AICalculationsInfo;
global using EndHoldPosition = AICoreActionEndStruct;
global using CorePointInGame = AICorePoint;
global using GMonoBehaviour33 = AICorePointHolder;
global using CreateOrFind = AICoversData;
global using GScriptableObject = AIDebugSettings;
global using CreateOfFind = AIDoorsHolder;
global using FirearmController1 = AIFirearmController;
global using CanThrowGrenade2 = AIGreanageThrowData;
global using Ang5 = AIGreandeAng;
global using GMonoBehaviour31 = AIManualPointInfo;
global using GMonoBehaviour36 = AIManualPointsHolder;
global using GRegular1 = AimingType;
global using GAiming1 = AimStatus;
global using FindPlace = AIPlaceInfo;
global using AIPlaceInfoLogic1 = AIPlaceInfoHalloweenCircle;
global using GMonoBehaviour37 = AIPlaceInfoHolder;
global using GMonoBehaviour61 = AIPlaceInfoLogic;
global using AIPlaceInfoLogic2 = AIPlaceInfoLogicAllEnemy;
global using AIPlaceInfoLogic3 = AIPlaceInfoLogicBoar;
global using AIPlaceInfoLogic4 = AIPlaceInfoLogicExUsecAttack;
global using AIPlaceInfoLogic5 = AIPlaceInfoLogicKolontay;
global using AIPlaceInfoLogic6 = AIPlaceInfoLogicZryachiy;
global using AIPlaceInfo1 = AIPlaceInfoTagillaAmbush;
global using Nearest = AIPlaceInfoTagillaAmbush.EPointSearchType;
global using AIPlaceInfo2 = AIPlaceWithPoint;
global using LookAt = AIRequestStage;
global using SilencedGun = AISoundType;
global using GMonoBehaviour38 = AIStationaryController;
global using GetTester = AITester;
global using GCreateOrFind = AITriangleData;
global using GMonoBehaviour41 = AIVoxelesData;
global using GMonoBehaviour337 = AlarmRotateLight;
global using GMonoBehaviour349 = AlwaysUp;
global using OnRenderObjectConnector1 = AmbientHighlight;
global using Characters = AmbientHighlight.StencilType;
global using OnRenderObjectConnector2 = AmbientLight;
global using GNightVision1 = AmbientType;
global using MonoBehaviour400 = AmplifyImpostors.AmplifyImpostor;
global using ScriptableObject46 = AmplifyImpostors.AmplifyImpostorAsset;
global using ScriptableObject47 = AmplifyImpostors.AmplifyImpostorBakePreset;
global using Automatic1 = AmplifyImpostors.CutMode;
global using AlbedoAlpha = AmplifyImpostors.DeferredBuffers;
global using RelativeToPrefab = AmplifyImpostors.FolderMode;
global using Spherical = AmplifyImpostors.ImpostorType;
global using DoNothing1 = AmplifyImpostors.LODReplacement;
global using OutputToggle = AmplifyImpostors.OverrideMask;
global using Legacy = AmplifyImpostors.PresetPipeline;
global using Standard2 = AmplifyImpostors.RenderingMaps;
global using None72 = AmplifyImpostors.RenderPipelineInUse;
global using RGBA = AmplifyImpostors.TextureChannels;
global using None73 = AmplifyImpostors.TextureCompression;
global using Clone7 = AmplifyImpostors.TextureOutput;
global using Full1 = AmplifyImpostors.TextureScale;
global using None71 = AmplifyMotion.ObjectType;
global using GMonoBehaviour3 = AmplifyMotionCamera;
global using GFirstInstance = AmplifyMotionEffect;
global using FirstInstance = AmplifyMotionEffectBase;
global using AmplifyMotionObjectBase1 = AmplifyMotionObject;
global using GMonoBehaviour4 = AmplifyMotionObjectBase;
global using Curve = AmplifyMotionObjectBase.MinMaxCurveState;
global using GMonoBehaviour5 = AmplifyMotionPostProcess;
global using GMonoBehaviour328 = AnalyticSource;
global using Authority1 = AnimationAuthority;
global using AnimatorEventParameter = AnimationEventSystem.AnimationEventParameter;
global using Cloneable2 = AnimationEventSystem.AnimationEventsContainer;
global using OnEnter = AnimationEventSystem.AnimationEventsContainer.EUpdateType;
global using EmitOnAnimatorUpdate = AnimationEventSystem.AnimationEventsEmitter.EEmitType;
global using StateBehaviour2 = AnimationEventSystem.AnimationEventsStateBehaviour;
global using ScriptableObject27 = AnimationEventSystem.AnimatorControllerStaticData;
global using None9 = AnimationEventSystem.EAnimationEventParamType;
global using Equal = AnimationEventSystem.EEventConditionModes;
global using Float = AnimationEventSystem.EEventConditionParamTypes;
global using Cloneable3 = AnimationEventSystem.EventCondition;
global using IntEqual = AnimationEventSystem.EventCondition.EConditionType;
global using GetLActionSetupById = AnimationEventSystem.LActionSetup;
global using GMonoBehaviour15 = AnimationSnatcher;
global using SnatcherPair1 = AnimationSnatcher.HierarchySnatcherPair;
global using Local1 = AnimationSnatcher.SnatcherPair.ECopyMode;
global using ScriptableObject25 = AnimationSystem.RootMotionTable.CharacterClipsKeeper;
global using ScriptableObject26 = AnimationSystem.RootMotionTable.RootMotionBlendTable;
global using GMonoBehaviour127 = AnimatorDefaultStateCache;
global using GMonoBehaviour200 = AnimatorEventReceiver;
global using GScriptableObject8 = AnimatorPose;
global using GMonoBehaviour75 = AnimatorRootMotionAccess;
global using GMonoBehaviour288 = AnticheatMipMapChecker;
global using BaseLight1 = AreaLight;
global using X1024 = AreaLight.TextureSize;
global using GMonoBehaviour283 = AreaLightManager;
global using AbstractMonoBehaviour = AReserveWayAction;
global using GMonoBehaviour270 = ArmorDummy;
global using BulletSoundPlayer1 = ArmorHitSoundPlayer;
global using BodyPartCollider1 = ArmorPlateCollider;
global using GShoot1 = AttackFromCoverType;
global using AbstractMonoBehaviour3 = Audio.AmbientSubsystem.AbstractAmbientSoundPlayer;
global using AbstractAmbientSoundPlayer1 = Audio.AmbientSubsystem.AmbientSoundPlayer;
global using MonoBehaviour38 = Audio.AmbientSubsystem.AmbientSoundPlayerGroup;
global using MonoBehaviour39 = Audio.AmbientSubsystem.AmbientSoundPlayerGroupController;
global using None4 = Audio.AmbientSubsystem.Data.EDayTimeBlendState;
global using SeasonSoundStorage = Audio.AmbientSubsystem.Data.PrecipitationSoundStorage;
global using ScriptableObject13 = Audio.AmbientSubsystem.Data.PrecipitationSoundStorageSO;
global using SoundContainerBase1 = Audio.AmbientSubsystem.Data.SeasonSurfaceSetContainer;
global using MonoBehaviour40 = Audio.AmbientSubsystem.DayTimeAmbientBlender;
global using None3 = Audio.AmbientSubsystem.EDayTime;
global using MonoBehaviour41 = Audio.AmbientSubsystem.EnvironmentAmbientSoundBlender;
global using GJobParallelFor2 = Audio.AmbientSubsystem.EnvironmentAmbientSoundBlender.Struct168;
global using GJobParallelFor3 = Audio.AmbientSubsystem.EnvironmentAmbientSoundBlender.Struct169;
global using AbstractAmbientSoundPlayer2 = Audio.AmbientSubsystem.LoopAmbientSoundPlayer;
global using MonoBehaviour42 = Audio.AmbientSubsystem.PrecipitationAmbientBlender;
global using ScriptableObject12 = Audio.AmbientSubsystem.ReverbPresets;
global using AbstractAmbientSoundPlayer3 = Audio.AmbientSubsystem.SeasonAmbientSoundPlayer;
global using MonoBehaviour43 = Audio.AmbientSubsystem.WindAmbientBlender;
global using SoundBankContainerBase1 = Audio.Data.BtrDriverSoundBankContainer;
global using None1 = Audio.Data.EAudioMovementState;
global using None2 = Audio.Data.EBtrDriverPhraseTrigger;
global using ScriptableObject11 = Audio.Data.SoundBankWithSettings;
global using MonoBehaviour36 = Audio.DebugTools.DebugDrawer;
global using MonoBehaviour37 = Audio.DebugTools.SoundOcclusionDebugger;
global using AbstractMonoBehaviour1 = Audio.SpatialSystem.AudioFilter;
global using ScriptableObject10 = Audio.SpatialSystem.AudioRoutesBakeData;
global using MonoBehaviour33 = Audio.SpatialSystem.AudioTriggerArea;
global using AbstractMonoBehaviour2 = Audio.SpatialSystem.BaseSpatialAudioSource;
global using None = Audio.SpatialSystem.EAudioRoomTypeMask;
global using BaseSpatialAudioSource1 = Audio.SpatialSystem.MetaSpatialAudioSource;
global using BaseSpatialAudioSource2 = Audio.SpatialSystem.OculusSpatialAudioSource;
global using MonoBehaviour34 = Audio.SpatialSystem.SpatialAudioCrossSceneGroup;
global using MonoBehaviour35 = Audio.SpatialSystem.SpatialAudioPortal;
global using Closed = Audio.SpatialSystem.SpatialAudioPortal.PortalState;
global using Opening = Audio.SpatialSystem.SpatialAudioPortal.PortalType;
global using AudioFilter1 = Audio.SpatialSystem.SpatialHighPassFilter;
global using AudioFilter2 = Audio.SpatialSystem.SpatialLowPassFilter;
global using MonoBehaviour30 = Audio.Vehicles.BTR.BtrDoorSoundHandler;
global using MonoBehaviour31 = Audio.Vehicles.BTR.BtrSoundController;
global using ScriptableObject9 = Audio.Vehicles.BTR.VehicleMovementSoundContainer;
global using MonoBehaviour32 = Audio.Vehicles.BTR.VehicleRotationSoundPlayer;
global using MonoBehaviour26 = Audio.Vehicles.BtrTurretSoundPlayerController;
global using Stopped1 = Audio.Vehicles.EVehicleMovementStatus;
global using MonoBehaviour27 = Audio.Vehicles.SoundSuspensionController;
global using MonoBehaviour28 = Audio.Vehicles.SoundSuspensionImpactSoundPlayer;
global using MonoBehaviour29 = Audio.Vehicles.VehicleMovementSoundContext;
global using SerializableEnumDictionary1 = Audio.Weapons.Data.AimingSounds;
global using ScriptableObject8 = Audio.Weapons.Data.WeaponAimingSoundsSO;
global using GMonoBehaviour184 = AudioSourceCulling;
global using GMonoBehaviour185 = AudioTester;
global using GStateBehaviour = Authority;
global using GMonoBehaviour205 = AutoFoldableSight;
global using GMonoBehaviour77 = AutoPopper;
global using GScriptableObject19 = AutumnMaterialBD2S;
global using AbstractMaterialBumpedSpecularSMap1 = AutumnMaterialBumpedSpecularSMap;
global using GScriptableObject20 = AutumnMaterialFoliage;
global using GScriptableObject21 = AutumnMaterialRavine01;
global using GScriptableObject22 = AutumnMaterialRavine02;
global using GScriptableObject23 = AutumnMaterialRavine08;
global using GScriptableObject24 = AutumnMaterialSpeedTree8;
global using GScriptableObject25 = AutumnMaterialSpeedTreeEft;
global using AbstractMaterialSpeedVertPaintShaderSolid1 = AutumnMaterialSpeedVertPaintShaderSolid;
global using GScriptableObject26 = AutumnMaterialStub;
global using GScriptableObject27 = AutumnMaterialSwamp;
global using GVaultingRestrictions = BackendConfigSettingsClass.AutoMoveRestrictions;
global using GBaseMoveSettings = BackendConfigSettingsClass.ClimbSettings;
global using GetSettings = BackendConfigSettingsClass.FenceLoyaltyLevel;
global using BackendConfigSettingsClassEliteSlots = BackendConfigSettingsClass.GClass1322.GClass1324;
global using Revolver = BackendConfigSettingsClass.GClass1335;
global using GPistol1 = BackendConfigSettingsClass.GClass1336;
global using GAssault = BackendConfigSettingsClass.GClass1337;
global using Shotgun = BackendConfigSettingsClass.GClass1338;
global using Sniper = BackendConfigSettingsClass.GClass1339;
global using GBuffSettings = BackendConfigSettingsClass.GClass1354;
global using GetArmorClass = BackendConfigSettingsClass.GClass1373.GClass1374;
global using MasteringGroup = BackendConfigSettingsClass.GClass1375;
global using Restriction = BackendConfigSettingsClass.GClass1378;
global using MalfSettings = BackendConfigSettingsClass.GClass1379;
global using OverheatSettings = BackendConfigSettingsClass.GClass1380;
global using Preset4 = BackendConfigSettingsClass.GClass1389.GClass1390;
global using GridSettings1 = BackendConfigSettingsClass.GridSettings;
global using VaultingRestrictions = BackendConfigSettingsClass.MoveRestrictions;
global using MovesSettings1 = BackendConfigSettingsClass.MovesSettings;
global using BackendConfigSettingsClassVaultingSettings = BackendConfigSettingsClass.VaultingGlobalSettings;
global using BaseMoveSettings = BackendConfigSettingsClass.VaultSettings;
global using Starting = BackendStatus;
global using GetPresetFromCollider = BallisticPreset;
global using GMonoBehaviour112 = BallisticRayscastTest;
global using GMonoBehaviour78 = BaseBallistic;
global using GetSurfaceSound = BaseBallistic.ESurfaceSound;
global using GAbstractMonoBehaviour6 = BaseFracture;
global using UpdateInEditorSystemComponent1 = BaseLight;
global using GMonoBehaviour206 = BaseSoundPlayer;
global using GMonoBehaviour154 = Basics;
global using BattlEyeClientRequestHandler = BattleeyePatchClass;
global using GMonoBehaviour236 = BattleStanceNotch;
global using GMonoBehaviour237 = BattleUINoiseLevel;
global using MonoBehaviourSingleton1 = BetterAudio;
global using Gunshots = BetterAudio.AudioSourceGroupType;
global using AbstractPlayAtPoint = BetterSource;
global using Playing = BetterSource.EPlayBackState;
global using Free = BezierSplineTools.BezierControlPointMode;
global using MonoBehaviour107 = BezierSplineTools.BezierCurve;
global using MonoBehaviour108 = BezierSplineTools.BezierSpline;
global using MonoBehaviour109 = BezierSplineTools.Line;
global using MonoBehaviour110 = BezierSplineTools.SplineDecorator;
global using MonoBehaviour111 = BezierSplineTools.SplineWalker;
global using Once1 = BezierSplineTools.SplineWalkerMode;
global using AddText = BillboardText;
global using ComponentSystem1 = BirdCurveBrainSystem;
global using Unknown1 = BitPacking.BitPackingTag;
global using Reading = BitPacking.EBitStreamMode;
global using GMonoBehaviour291 = BloodOnScreen;
global using Posteffect1 = BloodOnScreenOld;
global using GMonoBehaviour293 = BlurTextureCommandBuffer;
global using GBallisticCollider = BodyPartCollider;
global using GObserverToPlayerBridge = BodyPartCollider.ObserverBridge;
global using ObserverToPlayerBridge = BodyPartCollider.PlayerBridge;
global using Body1 = BodyPartType;
global using GMonoBehaviour163 = BoidController;
global using BaseBrain6 = BossKnightBrainClass;
global using GMonoBehaviour58 = BossLocationSpawnSubData;
global using BossToFollow = BotBoss;
global using GMonoBehaviour42 = BotCoverBounds;
global using GCoversData = BotCoversData;
global using GBotController = BotCoverSearchInfo;
global using GScriptableObject3 = BotCurvSettings;
global using LootWeapon = BotDeadBodyWork.ELookState;
global using GMonoBehaviour238 = BotDebugDropdownMenu;
global using GMonoBehaviour239 = BotDebugMenuItemTemplate;
global using Impossible = BotDifficulty;
global using DogFight = BotDogFightStatus;
global using GCreateOrFind1 = BotDoorsController;
global using GCreate10 = BotEnemiesController;
global using GCreate11 = BotEnemyChooser;
global using GMonoBehaviour86 = BotEventDebug;
global using GCreate7 = BotFollower;
global using GMonoBehaviour240 = BotGroupInfo;
global using GMonoBehaviour241 = BotInfoDataPanel;
global using GMonoBehaviour242 = BotInfoIcon;
global using GMonoBehaviour243 = BotInfoIconsPanel;
global using GMonoBehaviour244 = BotInfoNew;
global using HoldOrCover = BotLogicDecision;
global using GMonoBehaviour245 = BotMainUI;
global using UnknownMalfunction = BotMalfunctionData.EInnerMalfunctionState;
global using GAbstractCreate3 = BotMover;
global using GAbstractMonoBehaviour = BotPointOfInterest;
global using GMonoBehaviour246 = BotProfilesInfo;
global using GCreate12 = BotRandomPlanItemDropper;
global using GAbstractCreate2 = BotReload;
global using MagReload = BotReload.EReloadType;
global using SuppressionFire = BotRequestType;
global using GCreate9 = BotSearchData;
global using GMonoBehaviour54 = BotServerControl;
global using GGetSettings1 = BotSettingsComponents;
global using GetGroupAndSetEnemies = BotsGroup;
global using Attack = BotsGroup.BotCurrentTactic;
global using Paused = BotStandByType;
global using GLeft12 = BotTiltType;
global using GMonoBehaviour247 = BotView;
global using GetClosestZone = BotZone;
global using GMonoBehaviour178 = BotZoneDebug;
global using GMonoBehaviour248 = BotZoneDebugInfo;
global using GGetClosest1 = BotZoneEntrance;
global using GMonoBehaviour44 = BotZoneEntranceInfo;
global using Groups = BotZoneGroupsDictionary;
global using GMonoBehaviour66 = BotZoneNavMeshCutter;
global using GMonoBehaviour45 = BotZoneTestObjects;
global using GMonoBehaviour113 = BouncingObject;
global using GMonoBehaviour114 = BouncingObjectLauncher;
global using BaseFracture1 = BoxFracture;
global using GScriptableObject12 = BreathParameters;
global using GMonoBehaviour182 = BrokenDoor;
global using GMonoBehaviour7 = BrushBehaviour;
global using IReadJson = Bsg.GameSettings.IGameSetting;
global using MonoBehaviour11 = BSG.CameraEffects.NightVision;
global using MonoBehaviour12 = BSG.CameraEffects.TextureMask;
global using GMonoBehaviour289 = BTRExhaustSmokeController;
global using GMonoBehaviour290 = BTRExhaustSmokeVisual;
global using GetBulletAtPosition = BulletClass;
global using GMonoBehaviour165 = BulletSimulator;
global using GMonoBehaviour189 = BulletSoundPlayer;
global using GMonoBehaviour190 = BulletSoundPlayersController;
global using BundleLock1 = BundleLock;
global using FPSCamera = CameraClass;
global using GMonoBehaviour268 = CameraLightSwitcher;
global using GMonoBehaviour265 = CameraPixelPerfect;
global using GMonoBehaviour383 = Cannon;
global using GAlignedItemLabels = CategoryLabels;
global using FirstOnly = CategoryLabels.ChartCategoryLabelOptions;
global using K506 = CC_Vintage.Filter;
global using Self = Chain.ESpeaker;
global using GMonoBehaviour139 = CharacterControllerSpawner;
global using Impostor = CharacterControllerSpawner.ControllerType;
global using JointSpawner1 = CharacterJointSpawner;
global using GMonoBehaviour11 = CharacterTest;
global using AbstractItemLabelsBase = ChartAndGraph.AlignedItemLabels;
global using AbstractMonoBehaviour34 = ChartAndGraph.AnyChart;
global using MonoBehaviour399 = ChartAndGraph.Axis.AxisGenerator;
global using Image1 = ChartAndGraph.Axis.CanvasAxisGenerator;
global using AbstractChartSettingItemBase = ChartAndGraph.AxisBase;
global using AbstractAnyChart = ChartAndGraph.AxisChart;
global using Date = ChartAndGraph.AxisFormat;
global using SmoothPathGenerator1 = ChartAndGraph.BoxPathGenerator;
global using MaskableGraphic1 = ChartAndGraph.CanvasLines;
global using GetLine = ChartAndGraph.CanvasLines.Struct1087;
global using MonoBehaviour391 = ChartAndGraph.CharItemEffectController;
global using MInstance = ChartAndGraph.ChartAdvancedSettings;
global using Standard1 = ChartAndGraph.ChartDivisionAligment;
global using InternalSettings = ChartAndGraph.ChartDivisionInfo;
global using TotalDivisions = ChartAndGraph.ChartDivisionInfo.DivisionMessure;
global using MonoBehaviour395 = ChartAndGraph.ChartItem;
global using AbstractLockHoverObject = ChartAndGraph.ChartItemEffect;
global using MonoBehaviour392 = ChartAndGraph.ChartItemEvents;
global using UnityEvent = ChartAndGraph.ChartItemEvents.Event;
global using ChartItemEffect1 = ChartAndGraph.ChartItemGrowEffect;
global using AbstractChartItemEffect = ChartAndGraph.ChartItemLerpEffect;
global using MonoBehaviour393 = ChartAndGraph.ChartItemMaterialLerpEffect;
global using ChartItemLerpEffect1 = ChartAndGraph.ChartItemTextBlend;
global using ChartDivisionInfo1 = ChartAndGraph.ChartMainDivisionInfo;
global using MonoBehaviour394 = ChartAndGraph.ChartMaterialController;
global using Horizontal1 = ChartAndGraph.ChartOrientation;
global using AbstractMonoBehaviour36 = ChartAndGraph.ChartSettingItemBase;
global using ChartDivisionInfo2 = ChartAndGraph.ChartSubDivisionInfo;
global using SmoothPathGenerator2 = ChartAndGraph.CylinderPathGenerator;
global using SmoothPathGenerator3 = ChartAndGraph.FillPathGenerator;
global using GraphChartBase1 = ChartAndGraph.GraphChart;
global using AbstractAxisChart = ChartAndGraph.GraphChartBase;
global using InternalGraphData = ChartAndGraph.GraphData;
global using Center1 = ChartAndGraph.GroupLabelAlignment;
global using AxisBase1 = ChartAndGraph.HorizontalAxis;
global using MonoBehaviour398 = ChartAndGraph.InfoBox;
global using AlignedItemLabels1 = ChartAndGraph.ItemLabels;
global using AbstractChartSettingItemBase1 = ChartAndGraph.ItemLabelsBase;
global using PathGenerator1 = ChartAndGraph.LineRendererPathGenerator;
global using AbstractMonoBehaviour37 = ChartAndGraph.PathGenerator;
global using MonoBehaviour390 = ChartAndGraph.SensitivityControl;
global using AbstractPathGenerator = ChartAndGraph.SmoothPathGenerator;
global using MonoBehaviour396 = ChartAndGraph.TextController;
global using MonoBehaviour397 = ChartAndGraph.TextDirection;
global using InternalSettings1 = ChartAndGraph.TextFormatting;
global using AxisBase2 = ChartAndGraph.VerticalAxis;
global using GraphChartBase2 = ChartAndGraph.WorldSpaceGraphChart;
global using RemoteProcedureAttribute1 = ChatShared.ChatRPC;
global using KickUserFromDialog = ChatShared.EMessageParamsAction;
global using UserMessage = ChatShared.EMessageType;
global using MessageHeader = ChatShared.EViewRule;
global using FindOrCreate1 = ChatShared.UpdatableChatMember;
global using GCreate15 = CheatShotLogVisualizer;
global using BotPointOfInterest1 = ChristmasTreePoI;
global using GMonoBehaviour294 = ChromaticAberration;
global using GMonoBehaviour295 = CirclePacker;
global using GMovementState6 = Class1166;
global using AbstractConnectionHandler = Class1743;
global using SpawnSystem = Class2245;
global using GSpawnPointCollider = Class2245.Class2246;
global using BotRequest2 = Class245;
global using BotRequest8 = Class246;
global using Stopping = Class261.EBackEndCoreState;
global using BackendServerConnection = Class264;
global using TradingBackend = Class265;
global using InventoryWarning1 = Class265.InventoryWarning;
global using TarkovRequest = Class269;
global using TarkovRequestTransportHttp = Class270;
global using PooledObjectPolicy1 = Class270.Class271;
global using TarkovRequestTransportWS = Class278;
global using GInit1 = Class3178;
global using GInit2 = Class3179;
global using GMotionState = Class3239;
global using GMotionState1 = Class3240;
global using GMotionState2 = Class3241;
global using GMotionState3 = Class3242;
global using GLeft4 = Class623.XAlignment;
global using GCenter = Class623.YAlignment;
global using Enum1 = Class624.EState;
global using GNext = Class844;
global using Disconnect = Class844.EType;
global using Make = Class846;
global using FromData = Class847;
global using GFromData = Class848;
global using AdvAssaultTarget = Class95;
global using SimpleTarget = Class96;
global using ObdolbosFight = Class97;
global using GLeaveMap = Class98;
global using Pursuit = Class99;
global using ReadClassQuaternion = ClassQuaternion;
global using ReadClassTransformSync = ClassTransformSync;
global using ReadClassVector3 = ClassVector3;
global using GClientGameWorld = ClientLocalGameWorld;
global using GClientGameWorld1 = ClientNetworkGameWorld;
global using GMonoBehaviour417 = CloudsController;
global using CloudsControllerBlur = CloudsController.CloudShadows.ECommandBufferVariant;
global using GMonoBehaviour115 = ColliderExtrusion;
global using GMonoBehaviour347 = CollimatorSight;
global using GMonoBehaviour253 = ColorBlinker;
global using GMonoBehaviour367 = ColorDetailInstancing;
global using MonoBehaviour118 = CommonAssets.Scripts.AlternativePropBone;
global using Quiet = CommonAssets.Scripts.Audio.ELoudnessType;
global using Create6 = CommonAssets.Scripts.Game.EndByExitTrigerScenario;
global using UnityScheduller = Communications.ChatClient;
global using Create4 = Communications.ChatController;
global using GMonoBehaviour201 = CompassArrow;
global using JointSpawner2 = ConfigurableJointSpawner;
global using GMonoBehaviour384 = ConvexHull;
global using GMonoBehaviour99 = CorpseRagdollTest;
global using GStay = CoverLevel;
global using GetDefault = CoverPointCreatorPreset;
global using GScriptableObject1 = CoverPointCreatorPresetCollection;
global using GCreate4 = CoverPointMaster;
global using GetCoverSearchData = CoverSearchData;
global using GMonoBehaviour179 = CoverSearchDebug;
global using BotZoneDebugPointsGroup1 = CoverSearchDebugPointsGroup;
global using SearchRunToCover = CoverSearchType;
global using Shoot = CoverShootType;
global using GWall = CoverType;
global using GMonoBehaviour413 = CreateDepthTexture;
global using GMonoBehaviour399 = CubeMapper;
global using CullingObject2 = CullingAdvancedLightObject;
global using CullingObject3 = CullingLightObject;
global using CullingLightObject2 = CullingLightObjectInverse;
global using GMonoBehaviour425 = CullingManager;
global using GMonoBehaviour426 = CullingObject;
global using HalloweenEffect1 = CultistSignEffect;
global using GMonoBehaviour194 = CurveRotator;
global using Effector = CustomEffector;
global using GMonoBehaviour296 = CustomGlobalFog;
global using Lighten = CustomGlobalFog.BlendModes;
global using GMonoBehaviour334 = CustomLight;
global using FindPoint = CustomNavigationPoint;
global using GMonoBehaviour155 = CustomPluginExampleBrain;
global using GMonoBehaviour208 = CustomStaticBatching;
global using TextMeshProUGUI = CustomTextMeshProUGUI;
global using Cloneable = Cutscene.AnimationEvent;
global using ScriptableObject6 = Cutscene.AnimatorStateTimelineData;
global using BakedData1 = Cutscene.BakedDataWithCurves;
global using MonoBehaviour21 = Cutscene.BaseCutsceneTrigger;
global using MonoBehaviour23 = Cutscene.BlendingDirector;
global using MonoBehaviour24 = Cutscene.CutsceneDirectorBlender;
global using MonoBehaviour22 = Cutscene.CutsceneFakePlayerSteps;
global using BaseCutsceneTrigger1 = Cutscene.InteractiveObjectCutsceneTrigger;
global using BaseCutsceneTrigger2 = Cutscene.LighthouseKeeperExitCutsceneTrigger;
global using ScriptableObject7 = Cutscene.LipSyncBackedDataRandomVariants;
global using GetPlayer1 = Cutscene.LipSyncPlayer;
global using GScriptableObject4 = CutsceneTriggerStartInfoSO;
global using GetPlayerStartInfo = CutsceneTriggerStartInfoSO.StartPlayerValues;
global using MonoBehaviour17 = CW2.AdditiveMeshBaker;
global using MonoBehaviour18 = CW2.Animations.PhysicsSimulator;
global using MousePosX = CW2.Animations.PhysicsSimulator.UnityValueDevice.Values;
global using Clamp = CW2.Animations.PhysicsSimulator.Val.OperationType;
global using PositionVelocity = CW2.Animations.PhysicsSimulator.Val.TargetType;
global using GetOverDamage = DamageInfo;
global using GMonoBehaviour20 = DangerPoint;
global using GMonoBehaviour235 = DataSenderControl;
global using GMonoBehaviour297 = DeathFade;
global using GMonoBehaviour46 = DebugAIMonobeh;
global using GScriptableObject2 = DebugBotData;
global using GShoot2 = DebugBotDesition;
global using GRifle = DebugBotProfileChooser;
global using GAmbush3 = DebugBotTactic;
global using GMonoBehaviour22 = DebugCoverResultDrawler;
global using GMonoBehaviour23 = DebugCoverSystemTester;
global using NotUse = DebugLook;
global using GMonoBehaviour25 = DebugMoveObject;
global using GMonoBehaviour249 = DebugPanelHeaths;
global using GMonoBehaviour250 = DebugPlayerAIData;
global using GMonoBehaviour195 = DebugRecoilGraph;
global using GMonoBehaviour18 = DebugShootPractice;
global using GMonoBehaviour186 = DebugSoundOcclusion;
global using GoToStationary = DebugStationaryActionType;
global using GMonoBehaviour251 = DebugTextPanelWithManualLayout;
global using GMonoBehaviour26 = DebugTrainStarter;
global using GMonoBehaviour350 = DecalSystem;
global using StateBehaviour1 = DefaultNamespace.LayerWeightStateController;
global using GMonoBehaviour298 = DeferredDecalMeshHelper;
global using MonoBehaviour13 = DeferredDecals.DeferredDecalRenderer;
global using GetDecal = DeferredDecals.DeferredDecalRenderer.SingleDecal;
global using GMonoBehaviour414 = DepthPhotograper;
global using ImageEffectBase = DesaturateEffect;
global using GMonoBehaviour83 = DestroyObjectOnServer;
global using GMonoBehaviour304 = DirectionalLightActivator;
global using Raycast = DirectionCalculationType;
global using DisablerCullingObjectBase1 = DisablerCullingObject;
global using AbstractUpdateInEditorSystemComponent = DisablerCullingObjectBase;
global using DisablerCullingObjectBase2 = DisablerTerrainCullingObject;
global using NetworkBehaviour1 = Dissonance.Integrations.UNet_HLAPI.HlapiPlayer;
global using GMonoBehaviour317 = DistantShadow;
global using QUARTER = DistantShadow.ResolutionState;
global using GMonoBehaviour305 = DistortCameraFX;
global using GMonoBehaviour306 = DistortRenderer;
global using GMonoBehaviour307 = Dithering;
global using Loaded = Diz.DependencyManager.ELoadState;
global using MonoBehaviour388 = Diz.DependencyManager.SystemTester;
global using MonoBehaviour389 = Diz.DependencyManager.TestLoadable;
global using General = Diz.Jobs.EJobPriority;
global using MonoBehaviour385 = Diz.Jobs.JobScheduler;
global using MonoBehaviour386 = Diz.Jobs.Utils;
global using AbstractSkip = Diz.LanguageExtensions.Error;
global using MonoBehaviour387 = Diz.Resources.EasyAssets;
global using AbstractMonoBehaviour33 = Diz.Skinning.AbstractSkin;
global using MonoBehaviour382 = Diz.Skinning.PluggableBone;
global using MonoBehaviour383 = Diz.Skinning.Skeleton;
global using AbstractSkin2 = Diz.Skinning.Skin;
global using MonoBehaviour384 = Diz.Utils.AsyncWorker;
global using WantClose = DoorActionType;
global using GetHandle = DoorHandle;
global using GMonoBehaviour156 = DoTweenUGUI;
global using GMonoBehaviour157 = DragTarget;
global using GMonoBehaviour219 = DressItem;
global using AReserveWayAction1 = DropItemAndHealReservWay;
global using AReserveWayAction2 = DropItemReservWay;
global using Slider1 = DurabilitySlider;
global using AnalyticSource1 = DynamicAnalyticSource;
global using GMonoBehaviour299 = DynamicDeferredDecalRenderer;
global using GMonoBehaviour329 = DynamicFakeGI;
global using StencilShadow1 = DynamicStencilShadow;
global using Rare = EAchievementRarity;
global using NavMesh1 = EAICalcSystem;
global using ParachuteStartOpen = EAirdropFallingStage;
global using LookSensor1 = EAITaskGroupType;
global using NetCalcAIPos = EAITester;
global using EasyBundle1 = EasyBundle;
global using GMonoBehaviour90 = EasySuspension;
global using CanNotSetPortal = EAudioPortalError;
global using Chest = EBodyPart;
global using HeadCommon = EBodyPartColliderType;
global using ShallGoClose = EBotAssaultAreaStatus;
global using PairLogic = EBotEnemyCause;
global using Tilt = EBotFriendAction;
global using Christmas = EBotGameEvent;
global using TurnTo = EBotHeadDirection;
global using BattleState = EBotInfoMode;
global using Clap = EBotPairActionType;
global using Fight = EBotRequestMode;
global using PlayerPosition = EBotSearchPoint;
global using Anyway = EBotsSpawnMode;
global using StopPaid = EBtrState;
global using HumanLCollarbone = ECharacterWeaponBones;
global using ShootAndHide = ECheckSHootHide;
global using CantHide = ECoverCheckCause;
global using Distances = ECoverPatrolControls;
global using NoSnipePatrol = ECoverPointSpecial;
global using SimpleLook = EDeadBodyWorkWay;
global using NavGraphPoint = EDebugAIMonobeh;
global using GClosed = EDebugPortalStatus;
global using Fabric = EDecalTextureType;
global using HaveTargetLogic = EDecisionMethod;
global using GHide3 = EDisplayMode;
global using MonoBehaviour19 = Editor_Tools.BallisticCalculatorTool.BallisticCalculatorTrajectoryDrawer;
global using GMonoBehaviour429 = EditorScreenshoter;
global using NotVisible = EEnemyPartVisibleType;
global using GScriptableObject13 = EffectorPose;
global using GMonoBehaviour359 = EffectsController;
global using GMonoBehaviour360 = EffectsCurveData;
global using GMonoBehaviour310 = EffectsPrewarm;
global using AbstractMonoBehaviour18 = EFT.AbstractApplication;
global using AbstractMonoBehaviour20 = EFT.AbstractGame;
global using AbstractSession1 = EFT.AbstractGameSession;
global using MessageBase1 = EFT.AbstractGameSession.Class895;
global using AbstractNetworkBehaviour = EFT.AbstractSession;
global using UIElement252 = EFT.Achievements.AchievementView;
global using MonoBehaviour238 = EFT.Airdrop.AirdropPoint;
global using ScriptableObject40 = EFT.Airdrop.AirdropSounds;
global using Supply1 = EFT.Airdrop.EAirdropType;
global using MonoBehaviour239 = EFT.Airdrop.FlarePatronSound;
global using MonoBehaviour373 = EFT.Animals.Bird;
global using MonoBehaviour374 = EFT.Animals.BirdBoidBrain;
global using MonoBehaviour375 = EFT.Animals.BirdBoidsSpawner;
global using MonoBehaviour376 = EFT.Animals.BirdsSpawner;
global using WeaponMachinery1 = EFT.Animations.AGSMachinery;
global using Effector1 = EFT.Animations.BreathEffector;
global using Breathing = EFT.Animations.EProceduralAnimationMask;
global using Effector2 = EFT.Animations.HandShakeEffector;
global using RecoilShotEffect1 = EFT.Animations.NewRecoil.NewRecoilShotEffect;
global using RotationRecoilProcessBase1 = EFT.Animations.NewRotationRecoilProcess;
global using GLeft8 = EFT.Animations.NewRotationRecoilProcess.ReturnTrajectorySideType;
global using RecoilShotEffect = EFT.Animations.OldRecoilShotEffect;
global using RotationRecoilProcessBase2 = EFT.Animations.OldRotationRecoilProcess;
global using MonoBehaviour246 = EFT.Animations.OneOffWeaponSettings;
global using MonoBehaviour247 = EFT.Animations.PlayerSpring;
global using MonoBehaviour248 = EFT.Animations.ProceduralWeaponAnimation;
global using RecoilProcessBase1 = EFT.Animations.RotationRecoilProcessBase;
global using CameraRotation = EFT.Animations.Target;
global using WeaponMachinery2 = EFT.Animations.UtesMachinery;
global using AbstractMonoBehaviour23 = EFT.Animations.WeaponMachinery;
global using SpawnShellInTheWorld = EFT.AssetsManager.AmmoPoolObject;
global using MonoBehaviour308 = EFT.AssetsManager.AssetPoolObject;
global using PlayerPoolObject1 = EFT.AssetsManager.ObservedPlayerPoolObject;
global using AssetPoolObject2 = EFT.AssetsManager.PlayerPoolObject;
global using Parent1 = EFT.AssetsManager.PlayerRigidbodySleepHierarchy;
global using MonoBehaviour307 = EFT.AssetsManager.PoolContainerObject;
global using AbstractMonoBehaviour31 = EFT.AssetsManager.PoolSafeMonoBehaviour;
global using AssetPoolObject3 = EFT.AssetsManager.WeaponModPoolObject;
global using MonoBehaviour164 = EFT.AudioArray;
global using ScriptableObject30 = EFT.AudioGroupPreset;
global using MonoBehaviour165 = EFT.AudioListenerConsistencyManager;
global using ScriptableObject31 = EFT.AudioSequence;
global using GetSequenceSettings = EFT.AudioSequence.GStruct232;
global using UnityWebRequestHttps = EFT.BackEnd.EDiagnosisSource;
global using MonoBehaviour305 = EFT.Ballistics.BallisticCalculatorPrewarmer;
global using BaseBallistic2 = EFT.Ballistics.BallisticCollider;
global using BallisticCollider2 = EFT.Ballistics.BallisticColliderComposer;
global using Create16 = EFT.Ballistics.BallisticsCalculator;
global using Asphalt1 = EFT.Ballistics.MaterialType;
global using GetSchemeForItem = EFT.BarterScheme;
global using AbstractGetNewStateFabric = EFT.BaseMovementState;
global using MonoBehaviour156 = EFT.BeltDetachablePart;
global using MonoBehaviour157 = EFT.BeltDetachablePartSpawner;
global using FindFireport = EFT.BifacialTransform;
global using GetFirstFollower = EFT.BotOwner;
global using AsOnline2 = EFT.Bots.EBossType;
global using AsOnline1 = EFT.Bots.EBotAmount;
global using AsOnline = EFT.Bots.EBotDifficulty;
global using FindBotControllerEditorOnly = EFT.BotsController;
global using None62 = EFT.BufferZone.BufferAccessStatusType;
global using MonoBehaviour274 = EFT.BufferZone.BufferInnerZone;
global using MonoBehaviour275 = EFT.BufferZone.BufferOuterBattleZone;
global using MonoBehaviour276 = EFT.BufferZone.BufferZoneContainer;
global using MonoBehaviour277 = EFT.BufferZone.BufferZoneDataReciever;
global using Availability = EFT.BufferZone.EBufferZoneData;
global using Custom = EFT.Builds.EEquipmentBuildType;
global using AbstractApplication2 = EFT.BundlesLoadApplication;
global using MonoBehaviour270 = EFT.CameraControl.CameraLodBiasController;
global using Spectator = EFT.CameraControl.ECameraType;
global using MonoBehaviour271 = EFT.CameraControl.OpticComponentUpdater;
global using GetOpticSight = EFT.CameraControl.OpticSight;
global using SightStatus = EFT.CameraControl.OpticSight.GStruct382;
global using Create15 = EFT.CameraControl.PlayerCameraController;
global using EmptyHandsController1 = EFT.ClientEmptyHandsController;
global using FirearmController2 = EFT.ClientFirearmController;
global using AbstractGameWorld = EFT.ClientGameWorld;
global using GrenadeController1 = EFT.ClientGrenadeController;
global using MonoBehaviour199 = EFT.ClientItems.ClientSpecItems.RadioTransmitterView;
global using KnifeController2 = EFT.ClientKnifeController;
global using MedsController1 = EFT.ClientMedsController;
global using NetworkPlayer1 = EFT.ClientPlayer;
global using PlayerVoipController = EFT.ClientPlayer.Class1424;
global using PlayerOwnerInventoryController2 = EFT.ClientPlayer.Control0;
global using IGetDataSender = EFT.ClientPlayer.GInterface163;
global using PortableRangeFinderController1 = EFT.ClientPortableRangeFinderController;
global using QuickGrenadeThrowController1 = EFT.ClientQuickGrenadeThrowController;
global using QuickKnifeKickController1 = EFT.ClientQuickKnifeKickController;
global using RadioTransmitterController1 = EFT.ClientRadioTransmitterController;
global using UsableItemController3 = EFT.ClientUsableItemController;
global using World3 = EFT.ClientWorld;
global using None38 = EFT.Communications.EHideoutNotificationType;
global using Long = EFT.Communications.ENotificationDurationType;
global using Alert1 = EFT.Communications.ENotificationIconType;
global using None39 = EFT.Communications.ENotificationRequirements;
global using ChannelDeleted1 = EFT.Communications.ENotificationType;
global using ProfileUnlock = EFT.Communications.ProfileChangeEvent.EAuxiliaryTypes;
global using MonoBehaviour227 = EFT.Console.Commands.CutsceneCommands;
global using AbstractApplication1 = EFT.CorpseRagdollTestApplication;
global using LootItem1 = EFT.Counters.CounterTag;
global using Undefined2 = EFT.Counters.CounterValueType;
global using BossHelp = EFT.Counters.EFenceStandingSource;
global using Clone1 = EFT.DamageStats;
global using Regular = EFT.DamageStats.EDamageResult;
global using ApplicationLifecycle = EFT.DataProviding.EDataLifeTime;
global using MonoBehaviour265 = EFT.Development.RadioTransmitterDebug;
global using ScriptableObject35 = EFT.DistanceBlendOptions;
global using Right2 = EFT.EAmmoBeltSpawnDirection;
global using NotSet = EFT.EAreaType;
global using Working = EFT.EAudioSequenceType;
global using None18 = EFT.EBackendErrorCode;
global using Chat = EFT.EBanType;
global using Body5 = EFT.EBodyModelPart;
global using EnergyRegeneration = EFT.EBonusType;
global using NonActive = EFT.EBotState;
global using ToDestPoint = EFT.EBotSteering;
global using None26 = EFT.EBuffId;
global using Rare2 = EFT.EBuffRarity;
global using Shell9Mm = EFT.ECaliber;
global using Epsilon = EFT.ECantRotate;
global using Succeeded = EFT.ECaptchaResult;
global using Usec4 = EFT.EChatMemberSide;
global using Undefined1 = EFT.EDamageType;
global using Unknown2 = EFT.EDisconnectionCode;
global using Unknown4 = EFT.EDriveType;
global using RandomEnvironmentUiType = EFT.EEnvironmentUIType;
global using NotStarted1 = EFT.EEventState;
global using None17 = EFT.EEventType;
global using Create12 = EFT.EftGamePlayerOwner;
global using Create11 = EFT.EftNetworkGame;
global using None20 = EFT.EHandsControllerType;
global using Start = EFT.EInteractionStage;
global using Open = EFT.EInteractionType;
global using NotReady = EFT.EMatchingStatus;
global using GroupPlayer1 = EFT.EMatchingType;
global using None21 = EFT.EMovementDirection;
global using MonoBehaviour146 = EFT.EndByTimerScenario;
global using None15 = EFT.ENetLogsLevel;
global using MonoBehaviour163 = EFT.EntryPoint;
global using MonoBehaviour268 = EFT.EnvironmentEffect.DryPlane;
global using EnvironmentManagerBase1 = EFT.EnvironmentEffect.EnvironmentManager;
global using MonoBehaviour269 = EFT.EnvironmentEffect.EnvironmentSwitcherTrigger;
global using Check = EFT.EnvironmentEffect.IndoorTrigger;
global using MonoBehaviour267 = EFT.EnvironmentEffect.TriggerGroup;
global using Idle2 = EFT.EOperationQueueStatus;
global using Started4 = EFT.EOperationStatus;
global using None24 = EFT.EPhysicalCondition;
global using Outside = EFT.EPlayerBtrState;
global using ToPlayerGroup = EFT.EPlayerGroup;
global using Prone2 = EFT.EPlayerPose;
global using Usec1 = EFT.EPlayerSide;
global using None25 = EFT.EPlayerSideMask;
global using SamePlace = EFT.EPlayersSpawnPlace;
global using FirstPerson = EFT.EPointOfView;
global using Linear = EFT.EProbabilityFunctionType;
global using Free1 = EFT.EProfileStatus;
global using Online1 = EFT.ERaidMode;
global using WeaponSpread = EFT.ERepairBuffType;
global using MeleeWeapon = EFT.ERepairStrategyType;
global using None29 = EFT.EReportType;
global using Init = EFT.ESessionOperationStatus;
global using Unknown3 = EFT.EShotType;
global using Savage2 = EFT.ESideType;
global using Physical1 = EFT.ESkillClass;
global using Endurance1 = EFT.ESkillId;
global using None28 = EFT.EStringCase;
global using None27 = EFT.ESubtitlesSource;
global using Usec2 = EFT.ETaskPlayerSide;
global using None16 = EFT.ETraceCode;
global using ExUsecLoyalty = EFT.ETraderServiceType;
global using Update = EFT.EUpdateQueue;
global using Ready2 = EFT.EVoipControllerStatus;
global using Survived = EFT.ExitStatus;
global using PlayerOwner1 = EFT.ExtendedPlayerOwner;
global using Throwable1 = EFT.FlareCartridge;
global using MonoBehaviour171 = EFT.ForceMuteVoIPToggler;
global using ReturnFoundPoints = EFT.Game.Spawning.ActionIfNotEnoughPoints;
global using Player5 = EFT.Game.Spawning.ESpawnCategory;
global using None61 = EFT.Game.Spawning.ESpawnCategoryMask;
global using IGetSpawnColliderParams = EFT.Game.Spawning.ISpawnColliderParams;
global using IFindSpawnPointInPosition = EFT.Game.Spawning.ISpawnPoint;
global using SpawnColliderParams = EFT.Game.Spawning.SpawnBoxParams;
global using PositionPoint1 = EFT.Game.Spawning.SpawnPoint;
global using Create2 = EFT.Game.Spawning.SpawnPointMarker;
global using CreateSpawnPointParams = EFT.Game.Spawning.SpawnPointParams;
global using SpawnColliderParams1 = EFT.Game.Spawning.SpawnSphereParams;
global using CreateDebug = EFT.GameDateTime;
global using Create1 = EFT.GamePerson;
global using AbstractPlayerOwner = EFT.GamePlayerOwner;
global using Stopped2 = EFT.GameStatus;
global using MonoBehaviour141 = EFT.GameWorld;
global using GError1 = EFT.GameWorld.GClass3284;
global using GError2 = EFT.GameWorld.GClass3285;
global using GError3 = EFT.GameWorld.GClass3286;
global using GError4 = EFT.GameWorld.GClass3287;
global using GError5 = EFT.GameWorld.GClass3288;
global using GError6 = EFT.GameWorld.GClass3289;
global using GError7 = EFT.GameWorld.GClass3290;
global using GError8 = EFT.GameWorld.GClass3291;
global using GError9 = EFT.GameWorld.GClass3292;
global using GError10 = EFT.GameWorld.GClass3293;
global using GError11 = EFT.GameWorld.GClass3294;
global using Create7 = EFT.GameWorldUnityTickListener;
global using MonoBehaviour150 = EFT.GizmosDebugGraph;
global using AbstractMonoBehaviour25 = EFT.GlobalEvents.BaseEventFilter;
global using BaseSyncEvent1 = EFT.GlobalEvents.BaseReconnectEvent;
global using BaseSyncEvent2 = EFT.GlobalEvents.BtrIncomingToDestinationGlobalEvent;
global using BaseSyncEvent3 = EFT.GlobalEvents.BtrNotificationInteractionMessageEvent;
global using BaseSyncEvent4 = EFT.GlobalEvents.BtrPauseMoveEvent;
global using BaseSyncEvent5 = EFT.GlobalEvents.BtrReadyToDepartureEvent;
global using BaseSyncEvent6 = EFT.GlobalEvents.BtrServicePurchaseEvent;
global using BaseEventFilter1 = EFT.GlobalEvents.DoorInteractingEventFilter;
global using BaseSyncEvent7 = EFT.GlobalEvents.HalloweenSummonStartedEvent;
global using BaseSyncEvent8 = EFT.GlobalEvents.HalloweenSyncExitsEvent;
global using BaseSyncEvent9 = EFT.GlobalEvents.HalloweenSyncStateEvent;
global using BaseSyncEvent10 = EFT.GlobalEvents.InteractiveObjectInteractionResultEvent;
global using BaseEventFilter2 = EFT.GlobalEvents.InteractWithKeeperZoneEventFilter;
global using BaseEventFilter3 = EFT.GlobalEvents.LighthouseKeeperDialogEventFilter;
global using MonoBehaviour255 = EFT.GlobalEvents.NPCGlobalEventsReacting;
global using BaseEventFilter4 = EFT.GlobalEvents.PlayerInteractionWithBufferZoneEventFilter;
global using BaseSyncEvent12 = EFT.GlobalEvents.SeasonsReconnectEvent;
global using BaseSyncEvent13 = EFT.GlobalEvents.StormStartedEvent;
global using BaseSyncEvent11 = EFT.GlobalEvents.SyncClientEventState;
global using AddGrenade = EFT.Grenade;
global using Throwable3 = EFT.GrenadeCartridge;
global using MonoBehaviour161 = EFT.HalloweenEventVisual;
global using MonoBehaviour162 = EFT.HalloweenVisualContainer;
global using UIElement27 = EFT.HandBook.EntitiesPanel;
global using UIElement28 = EFT.HandBook.EntityIcon;
global using UIElement29 = EFT.HandBook.EntityListElement;
global using BrowseCategoriesPanel1 = EFT.HandBook.HandbookCategoriesPanel;
global using CategoryView2 = EFT.HandBook.HandbookCategoryView;
global using CloneAsCategory = EFT.HandBook.HandbookData;
global using UIElement30 = EFT.HandBook.HandbookItemPreview;
global using AbstractEffect = EFT.HealthSystem.ActiveHealthController.GClass2427;
global using None51 = EFT.HealthSystem.EEffectState;
global using None52 = EFT.HealthSystem.EHealthFactorType;
global using HealthRate = EFT.HealthSystem.EStimulatorBuffType;
global using ActiveHealthController1 = EFT.HealthSystem.PlayerHealthController;
global using GetBodyPartHealth = EFT.HealthSystem.ValueStruct;
global using InputTree1 = EFT.Hideout.AirFilteringUnitBehaviour;
global using ParentAreaData = EFT.Hideout.AreaData;
global using UIElement12 = EFT.Hideout.AreaDetails;
global using UIElement10 = EFT.Hideout.AreaIcon;
global using MonoBehaviour201 = EFT.Hideout.AreaLevelAudio;
global using ButtonFeedback1 = EFT.Hideout.AreaPanel;
global using Requirement1 = EFT.Hideout.AreaRequirement;
global using AreaIcon1 = EFT.Hideout.AreaRequirementIcon;
global using AreaPanel1 = EFT.Hideout.AreaRequirementPanel;
global using EventSystemHandler2 = EFT.Hideout.AreasController;
global using UIScreen1 = EFT.Hideout.AreaScreenSubstrate;
global using UIInputNode1 = EFT.Hideout.AreasPanel;
global using ScrollRect1 = EFT.Hideout.AreasScrollRect;
global using Deserialize2 = EFT.Hideout.AreaTemplate;
global using AreaPanel2 = EFT.Hideout.AreaWorldPanel;
global using InteractiveAmbianceObject1 = EFT.Hideout.AudioAmbiance;
global using GAudioPlaybackSettings2 = EFT.Hideout.AudioAmbiance.ContinuingPlaybackSettings;
global using AudioPlaybackSettings = EFT.Hideout.AudioAmbiance.MuteSettings;
global using GAudioPlaybackSettings1 = EFT.Hideout.AudioAmbiance.PlaybackSettings;
global using GAudioPlaybackSettings = EFT.Hideout.AudioAmbiance.SimpleAudioSettings;
global using Requirement7 = EFT.Hideout.BodyPartBuffRequirement;
global using UIElement9 = EFT.Hideout.BonusPanel;
global using ComplementaryButton1 = EFT.Hideout.ChangeLightButton;
global using UIElement17 = EFT.Hideout.ChangeLightPanel;
global using AmbianceObject1 = EFT.Hideout.ColorAmbiance;
global using UIElement22 = EFT.Hideout.ComplementaryButton;
global using UIElement13 = EFT.Hideout.DetailsPanel;
global using Idle3 = EFT.Hideout.EAreaActivityType;
global using NotSet1 = EFT.Hideout.EAreaStatus;
global using GrayedOut = EFT.Hideout.EButtonDisplayStatus;
global using FreeSpace = EFT.Hideout.ECameraMoveType;
global using BottomRightToLeft = EFT.Hideout.EContextPriorDirection;
global using Added = EFT.Hideout.EDetailsChangeType;
global using Fuel = EFT.Hideout.EDetailsType;
global using None35 = EFT.Hideout.EGeneratorStatus;
global using NotSet2 = EFT.Hideout.ELevelType;
global using Candles = EFT.Hideout.ELightingLevel;
global using None34 = EFT.Hideout.ELightStatus;
global using Description = EFT.Hideout.EPanelType;
global using Active2 = EFT.Hideout.EProductionState;
global using ShrinkingCircle = EFT.Hideout.EQteType;
global using Item1 = EFT.Hideout.ERequirementType;
global using ProduceViewBase1 = EFT.Hideout.FarmingView;
global using Requirement6 = EFT.Hideout.HealthRequirement;
global using Area = EFT.Hideout.HideoutArea;
global using MonoBehaviour203 = EFT.Hideout.HideoutAreaDefaultLevel;
global using UIScreen2 = EFT.Hideout.HideoutAreaQTEOverlay;
global using MonoBehaviour204 = EFT.Hideout.HideoutAreaTrigger;
global using MonoBehaviour205 = EFT.Hideout.HideoutAudioBackground;
global using MonoBehaviour208 = EFT.Hideout.HideoutCamera;
global using UIElement18 = EFT.Hideout.HideoutCameraController;
global using MonoBehaviour209 = EFT.Hideout.HideoutCameraFlashlight;
global using InteractableObject1 = EFT.Hideout.HideoutInteractionTrigger;
global using UIElement8 = EFT.Hideout.HideoutItemViewFactory;
global using UIScreen3 = EFT.Hideout.HideoutLoadingScreen;
global using UIElement19 = EFT.Hideout.HideoutProductionRequirementView;
global using UIScreen4 = EFT.Hideout.HideoutScreenOverlay;
global using EftAsyncScreen1 = EFT.Hideout.HideoutScreenRear;
global using AbstractPanel1 = EFT.Hideout.ImprovementPanel;
global using UIElement7 = EFT.Hideout.ImprovementView;
global using Requirement2 = EFT.Hideout.ItemRequirement;
global using UIElement14 = EFT.Hideout.ItemRequirementPanel;
global using AmbianceAffectedShader1 = EFT.Hideout.MultiObjectAmbiance.AffectedMultiShaders;
global using LoopedAmbianceAffectedObject1 = EFT.Hideout.MultiObjectAmbiance.AmbianceAffectedShader;
global using UIScreen5 = EFT.Hideout.PveGameModeLoadingScreen;
global using AbstractMonoBehaviour22 = EFT.Hideout.QTEAction;
global using UIElement20 = EFT.Hideout.QTEController;
global using FinishEffect = EFT.Hideout.QteData.EQteEffectType;
global using GExit = EFT.Hideout.QteEffect.EQteResultType;
global using QteEffectSkill = EFT.Hideout.QteEffect.EQteRewardType;
global using Requirement5 = EFT.Hideout.QuestRequirement;
global using RelatedData2 = EFT.Hideout.RelatedBonuses;
global using RelatedData4 = EFT.Hideout.RelatedBoost;
global using RelatedData3 = EFT.Hideout.RelatedConstructionTime;
global using RelatedData5 = EFT.Hideout.RelatedFuelSupply;
global using RelatedData7 = EFT.Hideout.RelatedImprovement;
global using RelatedData8 = EFT.Hideout.RelatedInteractions;
global using RelatedData6 = EFT.Hideout.RelatedProduction;
global using RelatedData1 = EFT.Hideout.RelatedRequirements;
global using UIElement11 = EFT.Hideout.RequirementFulfilledStatus;
global using Requirement3 = EFT.Hideout.ResourceRequirement;
global using UIElement21 = EFT.Hideout.SelectItemContextMenu;
global using MonoBehaviour213 = EFT.Hideout.ShootingRange.FoldingPopperTarget;
global using MonoBehaviour214 = EFT.Hideout.ShootingRange.FoldingTarget;
global using None37 = EFT.Hideout.ShootingRange.FoldingTargetState;
global using BallisticCollider1 = EFT.Hideout.ShootingRange.HideoutTargetBallisticCollider;
global using AbstractInteractableObject = EFT.Hideout.ShootingRange.InteractiveShootingRange;
global using MonoBehaviour215 = EFT.Hideout.ShootingRange.PaperTarget;
global using InteractiveShootingRange1 = EFT.Hideout.ShootingRange.PaperTargetControl;
global using MonoBehaviour216 = EFT.Hideout.ShootingRange.PopperTarget;
global using InteractiveShootingRange2 = EFT.Hideout.ShootingRange.PopperTargetControl;
global using MonoBehaviour217 = EFT.Hideout.ShootingRange.PopperTargets;
global using MonoBehaviour218 = EFT.Hideout.ShootingRange.RailTarget;
global using GLeft7 = EFT.Hideout.ShootingRange.RailTarget.HorizontalDirection;
global using GMedium1 = EFT.Hideout.ShootingRange.RailTarget.MovementSpeed;
global using GHorizontal = EFT.Hideout.ShootingRange.RailTarget.MovementType;
global using Backward = EFT.Hideout.ShootingRange.RailTarget.VerticalDirection;
global using InteractiveShootingRange3 = EFT.Hideout.ShootingRange.RailTargetControl;
global using MonoBehaviour219 = EFT.Hideout.ShootingRange.RailTargets;
global using MonoBehaviour212 = EFT.Hideout.ShootingRange.SharedTargetControl;
global using MonoBehaviour210 = EFT.Hideout.ShootingRange.ShootingAreaTrigger;
global using MonoBehaviour211 = EFT.Hideout.ShootingRange.ShootingScoreInterface;
global using None36 = EFT.Hideout.ShootingRange.TargetColliderType;
global using InteractiveShootingRange4 = EFT.Hideout.ShootingRange.Turnstile;
global using QTEAction1 = EFT.Hideout.ShrinkingCircleQTE;
global using Requirement4 = EFT.Hideout.SkillRequirement;
global using UIElement15 = EFT.Hideout.SkillRequirementPanel;
global using Deserialize3 = EFT.Hideout.Stage;
global using MonoBehaviour207 = EFT.Hideout.StashItemSpawner;
global using ItemRequirement1 = EFT.Hideout.ToolRequirement;
global using UIElement16 = EFT.Hideout.TraderRequirementPanel;
global using MonoBehaviour206 = EFT.Hideout.VideocardInstaller;
global using BaseLocalGame1 = EFT.HideoutGame;
global using LocalPlayer1 = EFT.HideoutPlayer;
global using EftGamePlayerOwner1 = EFT.HideoutPlayerOwner;
global using MonoBehaviour169 = EFT.HitReactionCharacter;
global using MonoBehaviour172 = EFT.IgnorePlayerInputZone;
global using None22 = EFT.IKSettings;
global using MonoBehaviour230 = EFT.Impostors.AmplifyImpostorsArrayElement;
global using DistantShadow1 = EFT.Impostors.EImpostorsShadowMode;
global using LoadingBundles = EFT.InitLevelStage;
global using Clone3 = EFT.InputSystem.AxisGroup;
global using MoveX = EFT.InputSystem.EAxis;
global using GetCommand = EFT.InputSystem.ECommand;
global using ShouldLockCursor = EFT.InputSystem.ECursorResult;
global using None32 = EFT.InputSystem.EGameKey;
global using None31 = EFT.InputSystem.EKeyPress;
global using InputNode3 = EFT.InputSystem.EmptyInputNode;
global using Release = EFT.InputSystem.EPressType;
global using Create13 = EFT.InputSystem.InputManager;
global using InputNodeAbstract1 = EFT.InputSystem.InputNode;
global using TranslateCommand = EFT.InputSystem.InputNode.ETranslateResult;
global using AbstractMonoBehaviour21 = EFT.InputSystem.InputNodeAbstract;
global using Clone4 = EFT.InputSystem.InputSource;
global using InputNodeAbstract2 = EFT.InputSystem.InputTree;
global using Clone5 = EFT.InputSystem.KeyGroup;
global using InputMethod = EFT.InputSystem.MouseAxisUpdateType;
global using InputNode4 = EFT.InputSystem.UIInputRoot;
global using InteractableObject6 = EFT.Interactive.Appliance;
global using DamageTrigger1 = EFT.Interactive.BarbedWire;
global using AbstractMonoBehaviour29 = EFT.Interactive.BaseRestrictableZone;
global using MonoBehaviour292 = EFT.Interactive.BeaconPlacer;
global using MonoBehaviour294 = EFT.Interactive.BetterPropagationGroups;
global using GetVolumeByPosition = EFT.Interactive.BetterPropagationVolume;
global using AbstractMonoBehaviour27 = EFT.Interactive.BorderZone;
global using MonoBehaviour301 = EFT.Interactive.BrokenWindowPieceCollider;
global using MonoBehaviour302 = EFT.Interactive.BrokenWindowPieceTemplate;
global using Switch2 = EFT.Interactive.BufferGates;
global using Switch1 = EFT.Interactive.BufferGateSwitcher;
global using MonoBehaviour281 = EFT.Interactive.CandleSwitcher;
global using ExfiltrationSubscriber1 = EFT.Interactive.CarExtraction;
global using MonoBehaviour304 = EFT.Interactive.ColliderReporter;
global using MonoBehaviour282 = EFT.Interactive.CommonTransportee;
global using CreateCorpse = EFT.Interactive.Corpse;
global using AbstractMonoBehaviour28 = EFT.Interactive.DamageTrigger;
global using WorldInteractiveObject1 = EFT.Interactive.Door;
global using MonoBehaviour300 = EFT.Interactive.DoorAmbuent;
global using Door1 = EFT.Interactive.DoorSwitch;
global using None65 = EFT.Interactive.EDoorState;
global using NotPresent = EFT.Interactive.EExfiltrationStatus;
global using Individual = EFT.Interactive.EExfiltrationType;
global using MayNotSpawn = EFT.Interactive.ELootableContainerSpawnType;
global using FullySelected = EFT.Interactive.ENodeStatus;
global using None63 = EFT.Interactive.ERequirementState;
global using None64 = EFT.Interactive.ESpecificInteractionContext;
global using Self1 = EFT.Interactive.EVolumeRelations;
global using Self2 = EFT.Interactive.EVolumeRelationsMask;
global using ExfiltrationSubscriber2 = EFT.Interactive.ExfiltrationDoor;
global using MonoBehaviour279 = EFT.Interactive.ExfiltrationPoint;
global using ExfiltrationRequirement2 = EFT.Interactive.ExfiltrationRequirement;
global using MonoBehaviour280 = EFT.Interactive.ExfiltrationSubscriber;
global using TriggerWithId1 = EFT.Interactive.ExperienceTrigger;
global using DamageTrigger2 = EFT.Interactive.FlameDamageTrigger;
global using MonoBehaviour284 = EFT.Interactive.FlareShootDetectorZone;
global using Green = EFT.Interactive.GarlandSwitcher.ELightType;
global using OnOff = EFT.Interactive.GarlandSwitcher.EPatternType;
global using Turnable2 = EFT.Interactive.GasLamp;
global using Flicker1 = EFT.Interactive.GasLamp.FlickerSounds;
global using MonoBehaviour289 = EFT.Interactive.GroupLootPoint;
global using ICreateRequirement = EFT.Interactive.IExfiltrationRequirement;
global using DamageTrigger3 = EFT.Interactive.InstantKillTrigger;
global using AbstractPoolSafeMonoBehaviour = EFT.Interactive.InteractableObject;
global using Door2 = EFT.Interactive.KeycardDoor;
global using Turnable1 = EFT.Interactive.LampController;
global using BaseRestrictableZone1 = EFT.Interactive.LighthouseTraderZone;
global using WorldInteractiveObject2 = EFT.Interactive.LootableContainer;
global using MonoBehaviour285 = EFT.Interactive.LootableContainersGroup;
global using MonoBehaviour299 = EFT.Interactive.LootGun;
global using CreateLootWithRigidbody = EFT.Interactive.LootItem;
global using MonoBehaviour290 = EFT.Interactive.LootPoint;
global using LootSets = EFT.Interactive.LootPointMode;
global using AsLootPointParameters = EFT.Interactive.LootPointParameters;
global using MonoBehaviour291 = EFT.Interactive.LootPointViewer;
global using MaterialData1 = EFT.Interactive.MaterialColor;
global using MaterialData2 = EFT.Interactive.MaterialEmission;
global using BorderZone1 = EFT.Interactive.Minefield;
global using MonoBehaviour296 = EFT.Interactive.MinefieldView;
global using InteractableObject3 = EFT.Interactive.NoPowerTip;
global using Corpse1 = EFT.Interactive.ObservedCorpse;
global using LootItem3 = EFT.Interactive.ObservedLootItem;
global using MonoBehaviour293 = EFT.Interactive.ObstacleCollider;
global using MonoBehaviour297 = EFT.Interactive.PhotoSensorGroup;
global using TriggerWithId2 = EFT.Interactive.PlaceItemTrigger;
global using DamageTrigger4 = EFT.Interactive.PlatformImpactTrigger;
global using MonoBehaviour286 = EFT.Interactive.PlayersWithImmuneToSniperFireCollector;
global using MonoBehaviour283 = EFT.Interactive.ProxyTransportee;
global using TriggerWithId3 = EFT.Interactive.QuestTrigger;
global using ExfiltrationPoint1 = EFT.Interactive.ScavExfiltrationPoint;
global using ScavExfiltrationPoint1 = EFT.Interactive.SharedExfiltrationPoint;
global using Door3 = EFT.Interactive.SlidingDoor;
global using BorderZone2 = EFT.Interactive.SniperFiringZone;
global using MonoBehaviour298 = EFT.Interactive.SniperImitator;
global using FindStationaryWeapon = EFT.Interactive.StationaryWeapon;
global using UtesSit = EFT.Interactive.StationaryWeapon.EStationaryAnimationType;
global using PreviousSwitch = EFT.Interactive.Switch;
global using ExfiltrationRequirement1 = EFT.Interactive.TransferItemRequirement;
global using MonoBehaviour287 = EFT.Interactive.TreeInteractive;
global using MonoBehaviour288 = EFT.Interactive.TriggerWithId;
global using WorldInteractiveObject4 = EFT.Interactive.Trunk;
global using AbstractMonoBehaviour30 = EFT.Interactive.Turnable;
global using MonoBehaviour278 = EFT.Interactive.WindowBreaker;
global using Square90 = EFT.Interactive.WindowBreaker.RotationAngle;
global using MonoBehaviour303 = EFT.Interactive.WindowBreakerManager;
global using ScriptableObject41 = EFT.Interactive.WindowBreakingConfig;
global using GenerateMeshPice = EFT.Interactive.WindowBreakingConfig.GClass2994;
global using CutPolygon = EFT.Interactive.WindowBreakingConfig.Polygon;
global using FindDoor = EFT.Interactive.WorldInteractiveObject;
global using XNegative = EFT.Interactive.WorldInteractiveObject.EDoorAxis;
global using Pull = EFT.Interactive.WorldInteractiveObject.EInteractionAction;
global using ViewTarget = EFT.Interactive.WorldInteractiveObject.ERotationInterpolationMode;
global using GetStatusInfo = EFT.Interactive.WorldInteractiveObject.GStruct385;
global using GetInteractionParameters = EFT.Interactive.WorldInteractiveObject.GStruct386;
global using ContainerCollection1 = EFT.InventoryLogic.AmmoBox;
global using ItemTemplate2 = EFT.InventoryLogic.AmmoBoxTemplate;
global using GetAmmoTemplate = EFT.InventoryLogic.AmmoTemplate;
global using Bullet1 = EFT.InventoryLogic.AmmoType;
global using Both = EFT.InventoryLogic.ArmorHolderComponent.EArmorPlateFiltering;
global using CommandWithItem = EFT.InventoryLogic.BackendInventoryInteraction.ExamineCommand;
global using Begin1 = EFT.InventoryLogic.CommandStatus;
global using ArmorComponent1 = EFT.InventoryLogic.CompositeArmorComponent;
global using AbstractItem = EFT.InventoryLogic.ContainerCollection;
global using UHMWPE = EFT.InventoryLogic.EArmorMaterial;
global using None55 = EFT.InventoryLogic.EArmorType;
global using ItemV = EFT.InventoryLogic.EBoundItem;
global using None58 = EFT.InventoryLogic.ECommandResult;
global using GetCurrencyTypeByName = EFT.InventoryLogic.ECurrencyType;
global using HeavyBleeding4 = EFT.InventoryLogic.EDamageEffectType;
global using None56 = EFT.InventoryLogic.EDeafStrength;
global using Usec5 = EFT.InventoryLogic.EDogtagExchangeSide;
global using Merge2 = EFT.InventoryLogic.EHighlightScope;
global using Special1 = EFT.InventoryLogic.EItemAttributeDisplayType;
global using Undefined3 = EFT.InventoryLogic.EItemAttributeId;
global using None57 = EFT.InventoryLogic.EItemAttributeLabelVariations;
global using Inspect = EFT.InventoryLogic.EItemInfoButton;
global using WeaponSkill = EFT.InventoryLogic.EItemViewComponent;
global using Handbook1 = EFT.InventoryLogic.EItemViewType;
global using Silencer = EFT.InventoryLogic.EMuzzleType;
global using Profile1 = EFT.InventoryLogic.EOwnerType;
global using InheritFromItem = EFT.InventoryLogic.EParentMergeType;
global using Stash1 = EFT.InventoryLogic.EPlayerItems;
global using GetPutOnBackpack = EFT.InventoryLogic.EquipmentPenaltyComponent;
global using FirstPrimaryWeapon = EFT.InventoryLogic.EquipmentSlot;
global using PrimaryWeapon = EFT.InventoryLogic.EquipmentType;
global using None60 = EFT.InventoryLogic.ETargetContainer;
global using NeverExecuted = EFT.InventoryLogic.ETrasactionState;
global using Chamber0 = EFT.InventoryLogic.EWeaponModType;
global using CalculateExtraSize = EFT.InventoryLogic.ExtraSize;
global using GetFoldable = EFT.InventoryLogic.FoldableComponent;
global using RelativeComponent = EFT.InventoryLogic.FoodDrinkComponent;
global using StimulatorBuffsComponent1 = EFT.InventoryLogic.HealthEffectsComponent;
global using IGetContainer = EFT.InventoryLogic.IContainer;
global using IFindLootOrContainer = EFT.InventoryLogic.IItemOwner;
global using DeserializeInventory = EFT.InventoryLogic.Inventory;
global using FindItem = EFT.InventoryLogic.Item;
global using AbstractGetLocation = EFT.InventoryLogic.ItemAddress;
global using Parent = EFT.InventoryLogic.ItemTemplate;
global using Weapon4 = EFT.InventoryLogic.ItemType;
global using GetKey1 = EFT.InventoryLogic.KeyComponent;
global using GInventoryError2 = EFT.InventoryLogic.LockableComponent.GClass3304;
global using ReadEFTInventoryLogicMapMarker = EFT.InventoryLogic.MapMarker;
global using Loot1 = EFT.InventoryLogic.MapMarkerType;
global using RelativeComponent2 = EFT.InventoryLogic.MedKitComponent;
global using TogglableComponentContainer = EFT.InventoryLogic.NightVisionComponent;
global using Item12 = EFT.InventoryLogic.NodeType;
global using FindRadioTransmitter = EFT.InventoryLogic.RadioTransmitterRecodableComponent;
global using Rare3 = EFT.InventoryLogic.RarenessType;
global using RelativeComponent3 = EFT.InventoryLogic.RepairableComponent;
global using RelativeComponent5 = EFT.InventoryLogic.ResourceComponent;
global using Unsearched = EFT.InventoryLogic.SearchedState;
global using StimulatorBuffsComponent2 = EFT.InventoryLogic.SideEffectComponent;
global using GetSlot = EFT.InventoryLogic.Slot;
global using GInventoryError24 = EFT.InventoryLogic.Slot.GClass3326;
global using GInventoryError25 = EFT.InventoryLogic.Slot.GClass3327;
global using GInventoryError26 = EFT.InventoryLogic.Slot.GClass3328;
global using GInventoryError27 = EFT.InventoryLogic.Slot.GClass3329;
global using GInventoryError28 = EFT.InventoryLogic.Slot.GClass3330;
global using GInventoryError29 = EFT.InventoryLogic.Slot.GClass3331;
global using GInventoryError30 = EFT.InventoryLogic.Slot.GClass3332;
global using GInventoryError31 = EFT.InventoryLogic.Slot.GClass3333;
global using GInventoryError32 = EFT.InventoryLogic.Slot.GClass3334;
global using GInventoryError33 = EFT.InventoryLogic.Slot.GClass3335;
global using GInventoryError34 = EFT.InventoryLogic.Slot.GClass3336;
global using GInventoryError35 = EFT.InventoryLogic.Slot.GClass3337;
global using GInventoryError36 = EFT.InventoryLogic.Slot.GClass3338;
global using Deserialize5 = EFT.InventoryLogic.StackSlot;
global using TogglableComponentContainer2 = EFT.InventoryLogic.ThermalVisionComponent;
global using Fusion = EFT.InventoryLogic.ThermalVisionComponent.SelectablePalette;
global using Sonar = EFT.InventoryLogic.ThrowWeapType;
global using TogglableComponent2 = EFT.InventoryLogic.TogglableComponent;
global using GetCurrentWeapon = EFT.InventoryLogic.Weapon;
global using Fullauto = EFT.InventoryLogic.Weapon.EFireMode;
global using Durability = EFT.InventoryLogic.Weapon.EMalfunctionSource;
global using GMisfire = EFT.InventoryLogic.Weapon.EMalfunctionState;
global using ExternalMagazine = EFT.InventoryLogic.Weapon.EReloadMode;
global using IPlayer1 = EFT.IPlayer;
global using ScriptableObject37 = EFT.ItemGameSounds.ItemDropSounds;
global using UIElement5 = EFT.ItemRequirementsPanel;
global using None53 = EFT.KcpNetwork.NetworkChannel;
global using None54 = EFT.KcpNetwork.NetworkMessageType;
global using MonoBehaviour152 = EFT.KnifeCollider;
global using DisableAnimLeftStance = EFT.LeftStanceController.ELeftStanceBodyActionType;
global using MonoBehaviour173 = EFT.LighthouseKeeperZone;
global using BotGame = EFT.LocalGame;
global using StatsLooting = EFT.LocalizationKey;
global using Player12 = EFT.LocalPlayer;
global using MonoBehaviour149 = EFT.LocationExportInfo;
global using WeaponModPoolObject1 = EFT.MagazineInHandsVisualController;
global using World2 = EFT.MessageFromClientType;
global using World1 = EFT.MessageFromServerType;
global using ReadMongoId = EFT.MongoID;
global using Create10 = EFT.MovementContext;
global using ScriptableObject32 = EFT.MovementSounds;
global using BaseMovementState1 = EFT.MovementState;
global using MovingPlatform1 = EFT.MovingPlatforms.Carriage;
global using LegacyBySelfRoute = EFT.MovingPlatforms.Carriage.CarriageMoveType;
global using MovingPlatform2 = EFT.MovingPlatforms.Locomotive;
global using NotStarted = EFT.MovingPlatforms.Locomotive.ETravelState;
global using AbstractGetPlatformAtPosition = EFT.MovingPlatforms.MovingPlatform;
global using ITransportee = EFT.MovingPlatforms.MovingPlatform.GInterface363;
global using InputNode1 = EFT.MultilePlayerOwner;
global using MonoBehaviour174 = EFT.MuteSpeechToggler;
global using AbstractGameSession1 = EFT.NetworkGameSession;
global using None49 = EFT.NetworkPackets.EHandsTypePacket;
global using None50 = EFT.NetworkPackets.EHitSpecial;
global using Lamp1 = EFT.NetworkPackets.EHitType;
global using Speed1 = EFT.NetworkPackets.SyncPositionReason;
global using AbstractPlayer = EFT.NetworkPlayer;
global using MoveStart = EFT.NetworkPlayer.EMovementCommand;
global using GError18 = EFT.NetworkPlayer.GClass3302;
global using AbstractMonoBehaviour24 = EFT.NextObservedPlayer.BaseAnimationHandsController;
global using MonoBehaviour250 = EFT.NextObservedPlayer.CommandMessageAutoSenderCoroutineController;
global using None47 = EFT.NextObservedPlayer.CommandMessageType;
global using BaseAnimationHandsController1 = EFT.NextObservedPlayer.EmptyAnimationHandsController;
global using BaseAnimationHandsController2 = EFT.NextObservedPlayer.FirearmAnimationHandsController;
global using BaseAnimationHandsController3 = EFT.NextObservedPlayer.GrenadeAnimationHandsController;
global using None48 = EFT.NextObservedPlayer.GrenadeAttackVariation;
global using BaseAnimationHandsController4 = EFT.NextObservedPlayer.KnifeAnimationHandsController;
global using BaseAnimationHandsController5 = EFT.NextObservedPlayer.MedsAnimationHandsController;
global using MonoBehaviour251 = EFT.NextObservedPlayer.ObservedPlayerAudioController;
global using MonoBehaviour252 = EFT.NextObservedPlayer.ObservedPlayerMovementContext;
global using GetObservedPlayerByProfileID = EFT.NextObservedPlayer.ObservedPlayerView;
global using MonoBehaviour254 = EFT.NextObservedPlayer.ObservedPlayerVoIP;
global using BaseAnimationHandsController6 = EFT.NextObservedPlayer.QuickUseItemAnimationHandsController;
global using BaseAnimationHandsController7 = EFT.NextObservedPlayer.UsableItemAnimationHandsController;
global using MonoBehaviour249 = EFT.NextObserver.ObservedPlayerScene.ObservedPlayerSceneController;
global using MonoBehaviour144 = EFT.NonWavesSpawnScenario;
global using MonoBehaviour221 = EFT.NPC.AnimationIntRandomizerByTimer;
global using MonoBehaviour222 = EFT.NPC.AnimatorByEventsToggler;
global using MonoBehaviour223 = EFT.NPC.NPCAdditionalSoundPlayer;
global using MonoBehaviour224 = EFT.NPC.NPCAnimationsEventReceiver;
global using MonoBehaviour225 = EFT.NPC.NPCFootStepsSoundPlayer;
global using MonoBehaviour226 = EFT.NPC.NPCReactionController;
global using Waiting = EFT.NPC.NPCReactionController.EProcessQueueState;
global using MonoBehaviour220 = EFT.NPC.TestKeepersAnimButtons;
global using MonoBehaviour170 = EFT.ObjectFollower;
global using Critical = EFT.PacketPriority;
global using MonoBehaviour176 = EFT.ParticleIntensityFromAnimator;
global using MonoBehaviour183 = EFT.Particles.BasicParticleSystemMediator;
global using ScriptableObject29 = EFT.PhraseSounds;
global using MonoBehaviour180 = EFT.PhraseTestScene;
global using MonoBehaviour181 = EFT.PhraseTestView;
global using GetPlayer = EFT.Player;
global using GAbstractMonoBehaviour7 = EFT.Player.AbstractHandsController;
global using Succeed = EFT.Player.AbstractProcess.Confirmation;
global using AbstractItemHandsController = EFT.Player.BaseGrenadeController;
global using GAbstractItemHandsController = EFT.Player.BaseKnifeController;
global using Creating = EFT.Player.Class1078.InternalState;
global using Thirdperson = EFT.Player.EAnimatorMask;
global using Slash = EFT.Player.EKickType;
global using Armor = EFT.Player.EMouseSensitivityModifier;
global using ItemHandsController1 = EFT.Player.EmptyHandsController;
global using Ready = EFT.Player.EOperationState;
global using Scheduled = EFT.Player.EProcessStatus;
global using GBarbedWire = EFT.Player.ESpeedLimit;
global using NotAvailable = EFT.Player.EVoipState;
global using ItemHandsController2 = EFT.Player.FirearmController;
global using InsertMagResult = EFT.Player.FirearmController.GClass1587;
global using ReloadExternalMagResult = EFT.Player.FirearmController.GClass1588;
global using ReloadMultiBarrelResult = EFT.Player.FirearmController.GClass1590;
global using ReloadSingleBarrelResult = EFT.Player.FirearmController.GClass1591;
global using AbstractFirearmActioner = EFT.Player.FirearmController.GClass1595;
global using ExamineWeapon = EFT.Player.FirearmController.GClass1620.EUtilityType;
global using AbstractNextOperation = EFT.Player.GClass1594;
global using GError14 = EFT.Player.GClass3297;
global using GError15 = EFT.Player.GClass3299;
global using GError16 = EFT.Player.GClass3300;
global using GError17 = EFT.Player.GClass3301;
global using BaseGrenadeController1 = EFT.Player.GrenadeController;
global using Idling = EFT.Player.GrenadeController.Class1045.EThrowState;
global using KHitInfo = EFT.Player.GStruct136;
global using AbstractHandsController1 = EFT.Player.ItemHandsController;
global using BaseKnifeController1 = EFT.Player.KnifeController;
global using NormalLean = EFT.Player.LeanType;
global using ItemHandsController4 = EFT.Player.MedsController;
global using AbstractPlayerInventoryController = EFT.Player.PlayerOwnerInventoryController;
global using BaseGrenadeController2 = EFT.Player.QuickGrenadeThrowController;
global using BaseKnifeController2 = EFT.Player.QuickKnifeKickController;
global using ItemHandsController3 = EFT.Player.QuickUseItemController;
global using PlayerOwnerInventoryController1 = EFT.Player.SinglePlayerInventoryController;
global using ItemHandsController5 = EFT.Player.UsableItemController;
global using Rifle = EFT.PlayerAnimator.EWeaponAnimationType;
global using MonoBehaviour177 = EFT.PlayerBody;
global using GetSlotViewByItem = EFT.PlayerBody.GClass1873;
global using MonoBehaviour175 = EFT.PlayerCameraFovChanger;
global using InputNode2 = EFT.PlayerOwner;
global using PlayerSpiritBase1 = EFT.PlayerSpirit;
global using AbstractAssetPoolObject = EFT.PlayerSpiritBase;
global using MonoBehaviour158 = EFT.PlayerSpiritBones;
global using Crouch = EFT.PlayerSpiritBones.PoseType;
global using GetVisualEquipmentState = EFT.PlayerVisualRepresentation;
global using UsableItemController1 = EFT.PortableRangeFinderController;
global using MonoBehaviour184 = EFT.PostEffects.OpticCullingMask;
global using ThrowableSettings2 = EFT.PrefabSettings.FlareCartridgeSettings;
global using LightFlare = EFT.PrefabSettings.FlareColorType;
global using Light1 = EFT.PrefabSettings.FlareEventType;
global using ChooseProfile = EFT.Profile;
global using Lightkeeper = EFT.Profile.ETraderServiceSource;
global using TraderInfo1 = EFT.Profile.FenceTraderInfo;
global using ProfileHealth = EFT.Profile.GClass1767;
global using RestoreInfo = EFT.Profile.GClass1767.GClass1768;
global using UIElement23 = EFT.ProfileEditor.UI.DressItemPanel;
global using UIElement24 = EFT.ProfileEditor.UI.EquipmentItemPanel;
global using UIElement25 = EFT.ProfileEditor.UI.ProfileButton;
global using UIElement26 = EFT.ProfileEditor.UI.ProfileEditorRightPanel;
global using AbstractGetCondition = EFT.Quests.Condition;
global using ConditionOneTarget1 = EFT.Quests.ConditionCompleteCondition;
global using Condition1 = EFT.Quests.ConditionCounterCreator;
global using Condition2 = EFT.Quests.ConditionEquipment;
global using ConditionOneTarget2 = EFT.Quests.ConditionExamineItem;
global using Condition3 = EFT.Quests.ConditionExitName;
global using Condition4 = EFT.Quests.ConditionExitStatus;
global using ConditionOneTarget3 = EFT.Quests.ConditionExperience;
global using ConditionItem1 = EFT.Quests.ConditionFindItem;
global using ConditionItem2 = EFT.Quests.ConditionHandoverItem;
global using GItem = EFT.Quests.ConditionHandoverItem.ETagHandoverTypes;
global using Condition5 = EFT.Quests.ConditionHealth;
global using Condition6 = EFT.Quests.ConditionHealthBuff;
global using Condition7 = EFT.Quests.ConditionHealthEffect;
global using Condition8 = EFT.Quests.ConditionHit;
global using GTarget84 = EFT.Quests.ConditionHit.EHitTagTypes;
global using Condition9 = EFT.Quests.ConditionInZone;
global using ConditionMultipleTargets1 = EFT.Quests.ConditionItem;
global using ConditionHit1 = EFT.Quests.ConditionKills;
global using Condition10 = EFT.Quests.ConditionLaunchFlare;
global using ConditionZone1 = EFT.Quests.ConditionLeaveItemAtLocation;
global using Condition11 = EFT.Quests.ConditionLevel;
global using Condition12 = EFT.Quests.ConditionLocation;
global using AbstractCondition = EFT.Quests.ConditionMultipleTargets;
global using AbstractCondition1 = EFT.Quests.ConditionOneTarget;
global using ConditionZone2 = EFT.Quests.ConditionPlaceBeacon;
global using ConditionOneTarget4 = EFT.Quests.ConditionQuest;
global using Condition13 = EFT.Quests.ConditionQuestTime;
global using ConditionMultipleTargets2 = EFT.Quests.ConditionSellItemToTrader;
global using ConditionHit2 = EFT.Quests.ConditionShots;
global using ConditionOneTarget5 = EFT.Quests.ConditionSkill;
global using ConditionOneTarget6 = EFT.Quests.ConditionStatistic;
global using Condition14 = EFT.Quests.ConditionTime;
global using ConditionOneTarget7 = EFT.Quests.ConditionTraderLoyalty;
global using ConditionOneTarget8 = EFT.Quests.ConditionTraderStanding;
global using Condition15 = EFT.Quests.ConditionUseItem;
global using ConditionOneTarget9 = EFT.Quests.ConditionVisitPlace;
global using ConditionItem3 = EFT.Quests.ConditionWeaponAssembly;
global using ConditionMultipleTargets3 = EFT.Quests.ConditionZone;
global using MoreOrEqual = EFT.Quests.ECompareMethod;
global using PickUp1 = EFT.Quests.EQuestIconType;
global using Locked1 = EFT.Quests.EQuestStatus;
global using Experience1 = EFT.Quests.ERewardType;
global using UsableItemController2 = EFT.RadioTransmitterController;
global using NotInitialized1 = EFT.RadioTransmitterStatus;
global using Clone = EFT.RaidSettings;
global using UIElement6 = EFT.RequiredItem;
global using ReadEFTResourceKey = EFT.ResourceKey;
global using Ammo1 = EFT.ResourceType;
global using MonoBehaviour153 = EFT.RestSettings;
global using MonoBehaviour182 = EFT.SceneCameraFollow;
global using ReadEFTSceneResourceKey = EFT.SceneResourceKey;
global using ScriptableObject28 = EFT.ScenesPreset;
global using GSceneResource = EFT.ScenesPreset.Guid;
global using MonoBehaviour178 = EFT.SDModeController;
global using AbstractUIElement = EFT.ServiceView;
global using GetAspectRatio = EFT.Settings.Graphics.AspectRatio;
global using None30 = EFT.Settings.Graphics.EAntialiasingMode;
global using Quality1 = EFT.Settings.Graphics.EDLSSMode;
global using Quality3 = EFT.Settings.Graphics.EFSR2Mode;
global using UltraQuality = EFT.Settings.Graphics.EFSRMode;
global using OnAndBoost = EFT.Settings.Graphics.ENvidiaReflexMode;
global using DownX05 = EFT.Settings.Graphics.ESamplingMode;
global using FastestPerformance1 = EFT.Settings.Graphics.ESSAOMode;
global using Medium4 = EFT.Settings.Graphics.ESSRMode;
global using BouncingObject1 = EFT.Shell;
global using MonoBehaviour154 = EFT.ShellExtractionData;
global using Deserialize1 = EFT.SkillManager;
global using Elite = EFT.SkillManager.EBuffType;
global using BuffInfo = EFT.SkillManager.GClass1782;
global using PerLevel = EFT.SkillManager.GClass1785;
global using NoWearEliteRepair = EFT.SkillManager.GClass1789;
global using SkillAction = EFT.SkillManager.GClass1791;
global using Movement = EFT.SkillManager.GStruct229;
global using GetSoundBank = EFT.SoundBank;
global using MonoBehaviour166 = EFT.SoundController;
global using ScriptableObject33 = EFT.Sounds;
global using BotOnServer = EFT.SpawnedInstance;
global using MonoBehaviour159 = EFT.SpeakerManager;
global using MonoBehaviour228 = EFT.SpeedTree.SpeedTreeWindStatistic;
global using MonoBehaviour229 = EFT.SpeedTree.TreeWind;
global using MonoBehaviour160 = EFT.StaticManager;
global using MonoBehaviour167 = EFT.SubtitlesEventFire;
global using MonoBehaviour143 = EFT.SubWorld;
global using BasePriceSource = EFT.SupplyData;
global using GetSurfaceSet = EFT.SurfaceSet;
global using SynchronizableObject2 = EFT.SynchronizableObjects.AirdropSynchronizableObject;
global using SynchronizableObject3 = EFT.SynchronizableObjects.AirplaneSynchronizableObject;
global using TakeFromPool = EFT.SynchronizableObjects.SynchronizableObject;
global using AirDrop1 = EFT.SynchronizableObjects.SynchronizableObjectType;
global using MonoBehaviour236 = EFT.SynchronizableObjects.SyncObjectCollisionChecker;
global using MonoBehaviour155 = EFT.TacticalRangeFinderController;
global using FourDigits = EFT.TacticalRangeFinderController.DistanceOutputFormat;
global using CommonClientApplication1 = EFT.TarkovApplication;
global using HideoutController = EFT.TarkovApplication.GClass1826;
global using MonoBehaviour185 = EFT.Test.CPUOverload;
global using MonoBehaviour179 = EFT.TestEffect;
global using MonoBehaviour168 = EFT.ToggleAudioSourceByEvent;
global using ExchangeRateDTO1 = EFT.TraderAssortment;
global using Player4 = EFT.Trading.EDialogSide;
global using Accepted = EFT.Trading.EQuestActionType;
global using Accepted1 = EFT.Trading.EServiceActionType;
global using None40 = EFT.Trading.ETraderDialogType;
global using MonoBehaviour147 = EFT.TrafficCollectScenario;
global using TaskLabelsTooltip1 = EFT.UI.AchievementGlobalProgressTooltip;
global using BaseNotificationView1 = EFT.UI.AchievementNotificationView;
global using ObjectiveView1 = EFT.UI.AchievementObjectiveView;
global using ConditionalObjectivesView1 = EFT.UI.AchievementsObjectivesView;
global using UIElement31 = EFT.UI.AchievementsScreen;
global using BaseSortPanel1 = EFT.UI.AchievementsSortPanel;
global using UIInputNode6 = EFT.UI.ActionPanel;
global using UIElement44 = EFT.UI.AmmoCountPanel;
global using UIInputNode4 = EFT.UI.AmmoSelector;
global using SpawnObject = EFT.UI.AnimatedToggle;
global using UIElement33 = EFT.UI.AssembleModPanel;
global using UIElement45 = EFT.UI.AzimuthPanel;
global using DialogWindow1 = EFT.UI.BanTimeWindow;
global using UIElement128 = EFT.UI.BarterSchemePanel;
global using AbstractInteractableElement = EFT.UI.BaseDropDownBox;
global using AbstractUIElement1 = EFT.UI.BaseGroupPanel;
global using CreateView = EFT.UI.BaseNotificationView;
global using AbstractUIElement3 = EFT.UI.BaseUiWindow;
global using UIElement34 = EFT.UI.BattleStancePanel;
global using TimerPanel1 = EFT.UI.BattleTimer.CustomTimerPanel;
global using FindEp = EFT.UI.BattleTimer.EMainTimerState;
global using TimerPanel2 = EFT.UI.BattleTimer.ExitTimerPanel;
global using NotVisited = EFT.UI.BattleTimer.ExitTimerPanel.EVisitedStatus;
global using TimerPanel3 = EFT.UI.BattleTimer.MainTimerPanel;
global using UIElement172 = EFT.UI.BattleTimer.TimerPanel;
global using BattleUIPanel1 = EFT.UI.BattleUIBtrSeatsCount;
global using MonoBehaviour313 = EFT.UI.BattleUIComponentAnimation;
global using UIElement35 = EFT.UI.BattleUIMalfunctionGlow;
global using Examined = EFT.UI.BattleUIMalfunctionGlow.GlowType;
global using UIElement36 = EFT.UI.BattleUIPanel;
global using BattleUIPanel2 = EFT.UI.BattleUIPanelDeath;
global using BattleUIPanel3 = EFT.UI.BattleUIPanelExitTrigger;
global using BattleUIPanel4 = EFT.UI.BattleUIPanelExtraction;
global using BattleUIPanel5 = EFT.UI.BattleUIPmcCount;
global using UIElement37 = EFT.UI.BattleUiVoipPanel;
global using UIElement40 = EFT.UI.BodyPartImage;
global using UIElement143 = EFT.UI.BrowseCategoriesPanel;
global using BuffThumb1 = EFT.UI.BuffIcon;
global using BuffThumb2 = EFT.UI.BuffPanel;
global using UIElement103 = EFT.UI.BuffThumb;
global using UIElement221 = EFT.UI.Builds.AmmoPresetView;
global using BuildListView1 = EFT.UI.Builds.EquipmentBuildListView;
global using UIElement222 = EFT.UI.Builds.MagPresetEditor;
global using UIElement223 = EFT.UI.Builds.MagPresetsListView;
global using BrowseCategoriesPanel3 = EFT.UI.BuildsCategoriesPanel;
global using InteractableElement1 = EFT.UI.ButtonFeedback;
global using MonoBehaviour315 = EFT.UI.ButtonSoundAnother;
global using MonoBehaviour316 = EFT.UI.ButtonWithHint;
global using MonoBehaviour354 = EFT.UI.CameraImage;
global using MonoBehaviour355 = EFT.UI.CameraViewporter;
global using ShowCaptchaHandler = EFT.UI.CaptchaHandler;
global using HandoverSelectItemsWindow1 = EFT.UI.CaptchaWindow;
global using UIElement83 = EFT.UI.CardSelectionPanel;
global using ButtonFeedback2 = EFT.UI.ChangeGameModeButton;
global using UIElement41 = EFT.UI.CharacterHealthPanel;
global using CompactCharacteristicPanel1 = EFT.UI.CharacteristicPanel;
global using UIElement85 = EFT.UI.CharacteristicsPanel;
global using MonoBehaviour317 = EFT.UI.CharacterSelectionStartScreen;
global using MessageView1 = EFT.UI.Chat.AttachmentMessageView;
global using UIElement189 = EFT.UI.Chat.ChatCreateDialoguePanel;
global using UIElement190 = EFT.UI.Chat.ChatFriendsListElement;
global using UIElement197 = EFT.UI.Chat.ChatFriendsListPanel;
global using UIElement198 = EFT.UI.Chat.ChatFriendsPanel;
global using UIElement199 = EFT.UI.Chat.ChatFriendsRequestsPanel;
global using UIElement191 = EFT.UI.Chat.ChatInvitePlayersPanel;
global using UIElement192 = EFT.UI.Chat.ChatMember;
global using UIElement193 = EFT.UI.Chat.ChatMembersPanel;
global using UIElement194 = EFT.UI.Chat.ChatMessageSendBlock;
global using UIScreen8 = EFT.UI.Chat.ChatScreen;
global using UIElement196 = EFT.UI.Chat.DialoguesContainer;
global using Trader = EFT.UI.Chat.DialoguesContainer.EDialogType;
global using UIElement195 = EFT.UI.Chat.DialogueView;
global using LeaveDialogue = EFT.UI.Chat.EDialogueInteractionButton;
global using StartDialogue = EFT.UI.Chat.EFriendInteractionButton;
global using SetMessageResponse = EFT.UI.Chat.EMessageContextInteraction;
global using YourMessage = EFT.UI.Chat.EMessageViewType;
global using UIElement200 = EFT.UI.Chat.FriendsInvitationView;
global using UIElement201 = EFT.UI.Chat.GlobalChatButton;
global using UIElement202 = EFT.UI.Chat.MessageFork;
global using UIElement204 = EFT.UI.Chat.MessagesContainer;
global using UIElement203 = EFT.UI.Chat.MessageView;
global using UIElement205 = EFT.UI.Chat.ProfileEventView;
global using UIElement42 = EFT.UI.ChatSpecialIcon;
global using ScriptableObject42 = EFT.UI.ChatSpecialIconSettings;
global using GetDataByMemberCategory = EFT.UI.ChatSpecialIconSettings.IconsData;
global using MonoBehaviour353 = EFT.UI.ClickableUIText;
global using MonoBehaviour342 = EFT.UI.ClickTrigger;
global using UIElement43 = EFT.UI.ClientWatermark;
global using UIElement145 = EFT.UI.ClothingItem;
global using PurchaseAvailable = EFT.UI.ClothingItem.EClothingItemState;
global using UIElement57 = EFT.UI.ClothingRequirements;
global using MonoBehaviour324 = EFT.UI.ColorView;
global using CompactCharacteristicPanel2 = EFT.UI.CompactCharacteristicDropdownPanel;
global using UIElement67 = EFT.UI.CompactCharacteristicPanel;
global using UIElement71 = EFT.UI.ConditionCharacteristicsSlider;
global using MonoBehaviour310 = EFT.UI.ConsoleAutoCompleteItem;
global using MonoBehaviour311 = EFT.UI.ConsoleAutoCompletePanel;
global using UIInputNode3 = EFT.UI.ConsoleScreen;
global using UIElement56 = EFT.UI.ContainersPanel;
global using SimpleContextMenuButton1 = EFT.UI.ContextMenuButton;
global using Tooltip1 = EFT.UI.CustomizationOfferTooltip;
global using ButtonFeedback3 = EFT.UI.DefaultUIButton;
global using UIElement46 = EFT.UI.DefaultUiButtonNewStyle;
global using Hover1 = EFT.UI.DefaultUiButtonNewStyle.EButtonState;
global using MessageWindow1 = EFT.UI.DelayTypeWindow;
global using UIElement60 = EFT.UI.DisplayMoneyPanel;
global using UIElement61 = EFT.UI.DisplayMoneyPanelTMPText;
global using StaticGridItemView1 = EFT.UI.DragAndDrop.AssembleBuildItemView;
global using GridView1 = EFT.UI.DragAndDrop.AutoResizableGridView;
global using AbstractStaticGridItemView = EFT.UI.DragAndDrop.BaseSelectableItemView;
global using MonoBehaviour365 = EFT.UI.DragAndDrop.BindPanel;
global using QuickSlotView1 = EFT.UI.DragAndDrop.BoundItemView;
global using QuickSlotView2 = EFT.UI.DragAndDrop.BoundSlotView;
global using Create18 = EFT.UI.DragAndDrop.CaptchaGridItemView;
global using UIElement185 = EFT.UI.DragAndDrop.ComplexStashPanel;
global using AbstractCreateGrids = EFT.UI.DragAndDrop.ContainedGridsView;
global using Create19 = EFT.UI.DragAndDrop.DraggedItemView;
global using Create20 = EFT.UI.DragAndDrop.DropdownSelectableItemView;
global using Unlocked = EFT.UI.DragAndDrop.EModLockedState;
global using UIElement187 = EFT.UI.DragAndDrop.EmptyItemView;
global using Person = EFT.UI.DragAndDrop.ETradingItemViewType;
global using Player8 = EFT.UI.DragAndDrop.ETradingSide;
global using ContainedGridsView1 = EFT.UI.DragAndDrop.GeneratedGridsView;
global using Create3 = EFT.UI.DragAndDrop.GridItemView;
global using OneValue = EFT.UI.DragAndDrop.GridItemView.EItemValueFormat;
global using MonoBehaviour368 = EFT.UI.DragAndDrop.GridSortPanel;
global using MonoBehaviour366 = EFT.UI.DragAndDrop.GridView;
global using Create21 = EFT.UI.DragAndDrop.HideoutItemView;
global using AbstractCreateItemViewKernel = EFT.UI.DragAndDrop.ItemView;
global using MonoBehaviour369 = EFT.UI.DragAndDrop.ItemViewFactory;
global using Create22 = EFT.UI.DragAndDrop.ModdingSelectableItemView;
global using SlotView1 = EFT.UI.DragAndDrop.ModSlotView;
global using Create23 = EFT.UI.DragAndDrop.QuestItemView;
global using UIElement188 = EFT.UI.DragAndDrop.QuestItemViewPanel;
global using Quest = EFT.UI.DragAndDrop.QuestItemViewPanel.EPanelViewType;
global using Create24 = EFT.UI.DragAndDrop.QuickSlotItemView;
global using AbstractUIInputNode1 = EFT.UI.DragAndDrop.QuickSlotView;
global using Create25 = EFT.UI.DragAndDrop.RagfairNewOfferItemView;
global using StaticGridItemView4 = EFT.UI.DragAndDrop.RagfairOfferItemView;
global using Create26 = EFT.UI.DragAndDrop.RagfairSelectableItemView;
global using MonoBehaviour367 = EFT.UI.DragAndDrop.SearchableItemView;
global using SlotView2 = EFT.UI.DragAndDrop.SearchableSlotView;
global using MonoBehaviour371 = EFT.UI.DragAndDrop.SearchableView;
global using Create27 = EFT.UI.DragAndDrop.SelectableItemView;
global using NewSelectableSlotItemView = EFT.UI.DragAndDrop.SelectableSlotItemView;
global using Create = EFT.UI.DragAndDrop.SlotItemView;
global using GetSlotView = EFT.UI.DragAndDrop.SlotView;
global using ButtonFeedback7 = EFT.UI.DragAndDrop.SlotViewHeader;
global using AbstractGridItemView = EFT.UI.DragAndDrop.StaticGridItemView;
global using AbstractSlotItemView = EFT.UI.DragAndDrop.StaticSlotItemView;
global using ContainedGridsView2 = EFT.UI.DragAndDrop.TemplatedGridsView;
global using Create28 = EFT.UI.DragAndDrop.TextOnlySelectableSlotItemView;
global using GridView2 = EFT.UI.DragAndDrop.TradingGridView;
global using Create29 = EFT.UI.DragAndDrop.TradingItemView;
global using Create30 = EFT.UI.DragAndDrop.TradingPlayerItemView;
global using GridView3 = EFT.UI.DragAndDrop.TradingTableGridView;
global using MonoBehaviour343 = EFT.UI.DragTrigger;
global using BaseDropDownBox1 = EFT.UI.DropDownBox;
global using BaseDropDownBox2 = EFT.UI.DropDownBoxNewStyle;
global using UIElement116 = EFT.UI.DropdownItemSelector;
global using CharacteristicPanel1 = EFT.UI.DurabilityPanel;
global using DynamicScroll1 = EFT.UI.DynamicReparentScroll;
global using MonoBehaviour340 = EFT.UI.DynamicScroll;
global using UIElement142 = EFT.UI.DynamicScrollElement;
global using UnlockPercentRarity = EFT.UI.EAchievementsSortType;
global using Bottom1 = EFT.UI.EArrangement;
global using Highlighted = EFT.UI.EButtonAnimationState;
global using InsuranceCharismaDiscount = EFT.UI.ECharismaDiscountType;
global using Accept1 = EFT.UI.ECloseState;
global using Idle4 = EFT.UI.ECursorType;
global using ItemObserveScreen1 = EFT.UI.EditBuildScreen;
global using PointerClickHandler8 = EFT.UI.EditTagWindow;
global using ArenaWin = EFT.UI.EEndGameSoundType;
global using UIElement47 = EFT.UI.EffectIcon;
global using UIElement48 = EFT.UI.EffectsPanel;
global using AccountSideSelectionScreen1 = EFT.UI.EftAccountSideSelectionScreen;
global using BattleUIScreen1 = EFT.UI.EftBattleUIScreen;
global using LoginScreen1 = EFT.UI.EftLoginScreen;
global using SetNicknameScreen1 = EFT.UI.EftSetNicknameScreen;
global using ValidateDeviceIdScreen1 = EFT.UI.EftValidateDeviceIdScreen;
global using WelcomeScreen1 = EFT.UI.EftWelcomeScreen;
global using Drop1 = EFT.UI.EInventorySoundType;
global using Unchanged = EFT.UI.EInventoryTab;
global using ScavengerInventoryScreen1 = EFT.UI.EItemUiContextType;
global using MainMenu1 = EFT.UI.EMenuType;
global using None68 = EFT.UI.EMoveDirection;
global using ButtonFeedback5 = EFT.UI.EmptyMemberView;
global using WrongSymbol = EFT.UI.ENicknameError;
global using MonoBehaviour321 = EFT.UI.EnvironmentLabCameraAnimator;
global using GetEnvironmentData = EFT.UI.EnvironmentUI.EnvironmentData;
global using MonoBehaviour322 = EFT.UI.EnvironmentUIRoot;
global using MarkerCreate = EFT.UI.EPocketMapContextInteractions;
global using Trader4 = EFT.UI.EQuestsSortType;
global using EquipmentTab1 = EFT.UI.EquipmentBuildGear;
global using UIElement104 = EFT.UI.EquipmentBuildPanel;
global using UIElement105 = EFT.UI.EquipmentTab;
global using BrokenItem = EFT.UI.ERepairStatusWarning;
global using OkButton = EFT.UI.ErrorScreen.EButtonType;
global using None67 = EFT.UI.EShadingType;
global using DeclinedRequest = EFT.UI.ESocialNetworkSoundType;
global using CommonStats = EFT.UI.EStatGroupId;
global using BackpackClose = EFT.UI.EUISoundType;
global using Numbers = EFT.UI.EValidationType;
global using UIElement68 = EFT.UI.ExamineCharacteristicPanel;
global using UIElement95 = EFT.UI.ExperienceArticleView;
global using UIElement96 = EFT.UI.ExperienceSectionView;
global using UIElement54 = EFT.UI.ExtractionTimersPanel;
global using UIElement63 = EFT.UI.FilterButton;
global using UIElement64 = EFT.UI.FilterPanel;
global using GAmmo = EFT.UI.FilterPanel.EFilterItemType;
global using MonoBehaviour344 = EFT.UI.FloatSlider;
global using ItemSelectionCell1 = EFT.UI.FuelSelectionCell;
global using MonoBehaviour312 = EFT.UI.GamePauseControl;
global using GesturesBindAlignment1 = EFT.UI.Gestures.GestureAudioBindAlignment;
global using AbstractCreateNewPhrase = EFT.UI.Gestures.GestureBaseItem;
global using GesturesBindAlignment2 = EFT.UI.Gestures.GestureItemBindAlignment;
global using CreatePhraseGroup = EFT.UI.Gestures.GesturesAudioItem;
global using GestureBaseItem1 = EFT.UI.Gestures.GesturesAudioSubItem;
global using AbstractMonoBehaviour32 = EFT.UI.Gestures.GesturesBindAlignment;
global using GestureBaseItem2 = EFT.UI.Gestures.GesturesBindItem;
global using UIElement213 = EFT.UI.Gestures.GesturesBindPanel;
global using UIInputNode11 = EFT.UI.Gestures.GesturesDropdownPanel;
global using UIInputNode12 = EFT.UI.Gestures.GesturesMenu;
global using GestureBaseItem3 = EFT.UI.Gestures.GesturesMenuItem;
global using UIElement214 = EFT.UI.Gestures.GesturesQuickPanel;
global using UIElement215 = EFT.UI.Gestures.GesturesVoipPanel;
global using UIElement38 = EFT.UI.GesturesQuickPanelItem;
global using MonoBehaviour320 = EFT.UI.GridViewMagnifier;
global using PointerClickHandler9 = EFT.UI.GridWindow;
global using ButtonFeedback6 = EFT.UI.GroupMemberView;
global using BaseGroupPanel1 = EFT.UI.GroupPanel;
global using MonoBehaviour323 = EFT.UI.GUISounds;
global using FilterPanel1 = EFT.UI.HandbookFilterPanel;
global using PaginationWindow1 = EFT.UI.HandoverHideoutAreaStashItemsWindow;
global using AbstractMessageWindow = EFT.UI.HandoverItemsWindow;
global using Create17 = EFT.UI.HandoverItemView;
global using HandoverSelectItemsWindow2 = EFT.UI.HandoverQuestItemsWindow;
global using AbstractHandoverItemsWindow = EFT.UI.HandoverSelectItemsWindow;
global using UIInputNode5 = EFT.UI.HealingLimbSelector;
global using UIElement32 = EFT.UI.HealingLimbView;
global using UIElement206 = EFT.UI.Health.BodyPartView;
global using HealthParameterPanel1 = EFT.UI.Health.BuffableHealthParameterPanel;
global using UIElement207 = EFT.UI.Health.DamageIcon;
global using UIElement208 = EFT.UI.Health.DamagePanel;
global using UIElement209 = EFT.UI.Health.HealthBarButton;
global using MonoBehaviour372 = EFT.UI.Health.HealthParameterPanel;
global using UIElement210 = EFT.UI.Health.HealthParametersPanel;
global using UIElement211 = EFT.UI.Health.InventoryScreenHealthPanel;
global using HealthTreatmentView1 = EFT.UI.HealthTreatmentEffectView;
global using HealthTreatmentView2 = EFT.UI.HealthTreatmentFactorView;
global using ServiceView1 = EFT.UI.HealthTreatmentServiceView;
global using AbstractUIElement2 = EFT.UI.HealthTreatmentView;
global using FilterTab1 = EFT.UI.HierarchyFilterTab;
global using GetOrCreateTooltip = EFT.UI.HoverTooltipArea;
global using HoverTooltipArea1 = EFT.UI.HoverTooltipAreaClick;
global using MonoBehaviour345 = EFT.UI.HoverTrigger;
global using PointerClickHandler10 = EFT.UI.InfoWindow;
global using Create31 = EFT.UI.Insurance.InsuranceItemView;
global using InsuranceSlotView1 = EFT.UI.Insurance.InsuranceSearchableSlotView;
global using SlotItemView1 = EFT.UI.Insurance.InsuranceSlotItemView;
global using SlotView3 = EFT.UI.Insurance.InsuranceSlotView;
global using PointerClickHandler35 = EFT.UI.Insurance.InsuranceWindow;
global using UIElement217 = EFT.UI.Insurance.InsuredItemPanel;
global using UIElement218 = EFT.UI.Insurance.InsuredItemsScreen;
global using UIElement216 = EFT.UI.Insurance.InsurerParametersPanel;
global using UIElement220 = EFT.UI.Insurance.ItemsToInsureScreen;
global using UIElement219 = EFT.UI.Insurance.ItemToInsurePanel;
global using UIElement75 = EFT.UI.InteractableElement;
global using UIElement49 = EFT.UI.InteractionButton;
global using UIElement76 = EFT.UI.InteractionButtonsContainer;
global using MonoBehaviour346 = EFT.UI.IntSlider;
global using UIElement77 = EFT.UI.InventoryClothingSelectionPanel;
global using UIElement159 = EFT.UI.InventoryPlayerModelWithStatsWindow;
global using UIInputNode7 = EFT.UI.InventoryScreenQuickAccessPanel;
global using UIElement106 = EFT.UI.ItemIconView;
global using UIElement69 = EFT.UI.ItemInfoWindowLabels;
global using UIElement129 = EFT.UI.ItemOnGrid;
global using UIElement65 = EFT.UI.ItemSelectionCell;
global using ISelectionHandler = EFT.UI.ItemSelectionCell.GInterface381;
global using UIElement78 = EFT.UI.ItemsListWindow;
global using UIElement107 = EFT.UI.ItemsPanel;
global using Gear = EFT.UI.ItemsPanel.EItemsTab;
global using UIElement70 = EFT.UI.ItemSpecificationPanel;
global using GSlot1 = EFT.UI.ItemSpecificationPanel.Class2005;
global using SimpleTooltip1 = EFT.UI.ItemTooltip;
global using UIInputNode8 = EFT.UI.ItemUiContext;
global using PointerEnterHandler6 = EFT.UI.ItemViewAnimation;
global using ItemIconView2 = EFT.UI.ItemWideView;
global using MonoBehaviour347 = EFT.UI.JittingController;
global using GetNoteView = EFT.UI.JournalNote;
global using UIElement84 = EFT.UI.KeyCardItem;
global using UIBehaviour1 = EFT.UI.LayoutElementTranslator;
global using MonoBehaviour318 = EFT.UI.LoadingIndicator;
global using UIElement79 = EFT.UI.LocalizationButtonCap;
global using UIElement50 = EFT.UI.LocalizedText;
global using UIElement80 = EFT.UI.LocationButton;
global using UIElement81 = EFT.UI.LocationInfoPanel;
global using UIElement82 = EFT.UI.LocationWarningPanel;
global using UIElement225 = EFT.UI.Map.EntryPointView;
global using UIElement226 = EFT.UI.Map.ExtractionPointView;
global using Load1 = EFT.UI.Map.MapPoints;
global using UIElement227 = EFT.UI.Map.MapPointsManager;
global using UIElement224 = EFT.UI.Map.MapScreen;
global using SimplePocketMap1 = EFT.UI.Map.PocketMap;
global using UIElement228 = EFT.UI.Map.SelectEntryPointPanel;
global using UIElement229 = EFT.UI.Map.SimplePocketMap;
global using MonoBehaviour327 = EFT.UI.MapMarkerWindow;
global using MonoBehaviour309 = EFT.UI.MapZoomer;
global using CharacteristicPanel2 = EFT.UI.MasteringCharacteristicPanel;
global using ItemIconView1 = EFT.UI.MasteringIcon;
global using MasteringContainer1 = EFT.UI.MasteringList;
global using UIElement109 = EFT.UI.MasteringPanel;
global using UIElement110 = EFT.UI.MasteringScreen;
global using Tooltip3 = EFT.UI.MasteringTooltip;
global using AbstractUIElement6 = EFT.UI.Matchmaker.AbstractGroupPlayerPanel;
global using UIElement174 = EFT.UI.Matchmaker.ComradeView;
global using BaseUiWindow2 = EFT.UI.Matchmaker.CoopSettingsWindow;
global using NoBlock = EFT.UI.Matchmaker.ECoopBlock;
global using AbstractGroupPlayerPanel1 = EFT.UI.Matchmaker.GroupPlayerPanel;
global using UIElement175 = EFT.UI.Matchmaker.GroupPlayersList;
global using UIElement181 = EFT.UI.Matchmaker.LocationConditionsPanel;
global using UIElement182 = EFT.UI.Matchmaker.LocationConditionsPanelFactory;
global using UIElement183 = EFT.UI.Matchmaker.LocationPath;
global using UIElement173 = EFT.UI.Matchmaker.MatchmakerBanner;
global using UIElement184 = EFT.UI.Matchmaker.MatchmakerBannersPanel;
global using UIElement176 = EFT.UI.Matchmaker.MatchMakerGroupPreview;
global using MatchmakerEftScreen1 = EFT.UI.Matchmaker.MatchmakerInsuranceScreen;
global using Insured = EFT.UI.Matchmaker.MatchmakerInsuranceScreen.EInsuranceTab;
global using UIElement177 = EFT.UI.Matchmaker.MatchMakerPlayerPreview;
global using MonoBehaviour364 = EFT.UI.Matchmaker.MatchmakerRaidSettingView;
global using ScavNotReadySolo = EFT.UI.Matchmaker.MatchMakerSideSelectionScreen.EScavLockReason;
global using TimeHasComeScreenController = EFT.UI.Matchmaker.MatchmakerTimeHasCome.GClass3183;
global using UIElement178 = EFT.UI.Matchmaker.PlayersRaidReadyPanel;
global using UIElement179 = EFT.UI.Matchmaker.RaidReadyList;
global using UIElement180 = EFT.UI.Matchmaker.RaidReadyPlayerPanel;
global using BaseUiWindow3 = EFT.UI.Matchmaker.RaidSettingsWindow;
global using UIInputNode9 = EFT.UI.MenuTaskBar;
global using UIScreen6 = EFT.UI.MerchantsList;
global using UIElement160 = EFT.UI.MultiLineRow;
global using Tooltip5 = EFT.UI.MultiLineTooltip;
global using Graphic1 = EFT.UI.NonDrawingGraphic;
global using UIElement111 = EFT.UI.NotesTask;
global using UIElement112 = EFT.UI.NotesTaskDescription;
global using UIElement113 = EFT.UI.NotesTaskDescriptionShort;
global using MonoBehaviour328 = EFT.UI.NoteWindow;
global using UIElement87 = EFT.UI.NotifierView;
global using IProfileChangeHandler = EFT.UI.NotifierView.GInterface387;
global using BaseUiWindow1 = EFT.UI.OpenBuildWindow;
global using UIElement88 = EFT.UI.OperationQueueIndicator;
global using UIElement51 = EFT.UI.OpticCratePanel;
global using UIElement114 = EFT.UI.OverallScreen;
global using UIElement115 = EFT.UI.OverallStatsPanel;
global using AbstractHandoverItemsWindow1 = EFT.UI.PaginationWindow;
global using GLeft10 = EFT.UI.PixelPerfectSpriteScaler.EScaleSide;
global using UIElement89 = EFT.UI.PlayerExperiencePanel;
global using MonoBehaviour329 = EFT.UI.PlayerLevelPanel;
global using UIElement52 = EFT.UI.PlayerModelView;
global using MonoBehaviour330 = EFT.UI.PlayerNamePanel;
global using UIElement156 = EFT.UI.PlayerProfilePreview;
global using FullBody = EFT.UI.PlayerProfilePreview.ECameraViewType;
global using ScriptableObject44 = EFT.UI.PocketMapConfig;
global using GetMarkerView = EFT.UI.PocketMapMarker;
global using MonoBehaviour336 = EFT.UI.PocketMapMarkerManager;
global using MonoBehaviour337 = EFT.UI.PocketMapTile;
global using UIElement130 = EFT.UI.PriceRow;
global using SimpleTooltip2 = EFT.UI.PriceTooltip;
global using UIElement90 = EFT.UI.ProgressSpinner;
global using UIElement131 = EFT.UI.QuestListItem;
global using UIElement132 = EFT.UI.QuestProgressView;
global using UIElement133 = EFT.UI.QuestRequirementsView;
global using MonoBehaviour339 = EFT.UI.QuestRequirementView;
global using UIElement134 = EFT.UI.QuestRewardList;
global using UIElement136 = EFT.UI.QuestsListView;
global using UIElement137 = EFT.UI.QuestsScreen;
global using UIElement135 = EFT.UI.QuestView;
global using UIElement91 = EFT.UI.QueueScreen;
global using UIElement237 = EFT.UI.Ragfair.AddOfferWindow;
global using TooLittle = EFT.UI.Ragfair.AddOfferWindow.EAddOfferWarning;
global using UIElement230 = EFT.UI.Ragfair.CancellableFilterPanel;
global using UIElement231 = EFT.UI.Ragfair.CancellableFiltersPanel;
global using NodeBaseView1 = EFT.UI.Ragfair.CategoryView;
global using UIElement235 = EFT.UI.Ragfair.CombinedView;
global using Ragfair2 = EFT.UI.Ragfair.EExchangeableWindowType;
global using OfferId = EFT.UI.Ragfair.EFilterType;
global using AnyOwnerType = EFT.UI.Ragfair.EOfferOwnerType;
global using OfferData = EFT.UI.Ragfair.ERagFairOfferDataType;
global using Priority = EFT.UI.Ragfair.ESortType;
global using AllOffers = EFT.UI.Ragfair.EViewListType;
global using OpenBuild = EFT.UI.Ragfair.EWindowType;
global using UIElement233 = EFT.UI.Ragfair.FiltersPanel;
global using HandoverSelectItemsWindow4 = EFT.UI.Ragfair.HandoverExchangeableItemsWindow;
global using MessageWindow2 = EFT.UI.Ragfair.HandoverRagfairMoneyWindow;
global using Deserialize8 = EFT.UI.Ragfair.HandoverRequirement;
global using UIElement248 = EFT.UI.Ragfair.HandoverRequirementBarterIcon;
global using UIElement238 = EFT.UI.Ragfair.ItemMarketPricesPanel;
global using UIElement239 = EFT.UI.Ragfair.MassPurchasePanel;
global using UIElement234 = EFT.UI.Ragfair.MerchantInfoView;
global using CategoryView1 = EFT.UI.Ragfair.NodeBaseView;
global using Deserialize9 = EFT.UI.Ragfair.Offer;
global using Merchant = EFT.UI.Ragfair.Offer.GClass3210;
global using UIElement240 = EFT.UI.Ragfair.OfferItemDescription;
global using UIElement241 = EFT.UI.Ragfair.OfferItemPrice;
global using UIElement249 = EFT.UI.Ragfair.OfferItemPriceBarter;
global using UIElement245 = EFT.UI.Ragfair.OffersUpdatePanel;
global using UIElement242 = EFT.UI.Ragfair.OfferView;
global using UIElement243 = EFT.UI.Ragfair.OfferViewList;
global using UIElement244 = EFT.UI.Ragfair.OfferViewResourceCounter;
global using UIElement246 = EFT.UI.Ragfair.PageButton;
global using UIElement247 = EFT.UI.Ragfair.RagfairAvailabilityWarning;
global using FilterButton1 = EFT.UI.Ragfair.RagfairFilterButton;
global using UIElement232 = EFT.UI.Ragfair.RagfairFilterWindow;
global using InfinityOverflow = EFT.UI.Ragfair.RagfairFilterWindow.EManageInputFieldType;
global using UIScreen9 = EFT.UI.Ragfair.RagfairScreen;
global using UIElement250 = EFT.UI.Ragfair.RenewOfferWindow;
global using UIElement251 = EFT.UI.Ragfair.RequirementView;
global using NodeBaseView2 = EFT.UI.Ragfair.SubcategoryView;
global using BrowseCategoriesPanel2 = EFT.UI.RagfairCategoriesPanel;
global using UIElement39 = EFT.UI.RaidStartIntro;
global using UIElement144 = EFT.UI.RankPanel;
global using UIElement74 = EFT.UI.RepairerParametersPanel;
global using UIElement72 = EFT.UI.RepairWarningStatus;
global using UIElement73 = EFT.UI.RepairWarningStatusPanel;
global using PointerClickHandler11 = EFT.UI.RepairWindow;
global using UIElement93 = EFT.UI.ReportPanel;
global using UIElement58 = EFT.UI.RequiredSkillOrLevel;
global using UIElement92 = EFT.UI.ResizeTooltip;
global using ItemSelectionCell2 = EFT.UI.ResourceSelectionCell;
global using MonoBehaviour331 = EFT.UI.ScreenPositionAnchor;
global using RelativeByHeight = EFT.UI.ScreenPositionAnchor.EAnchorType;
global using None69 = EFT.UI.Screens.EEftScreenType;
global using None70 = EFT.UI.Screens.EScreenOrder;
global using Temporary = EFT.UI.Screens.EScreenState;
global using LastState = EFT.UI.Screens.EShadingStateSwitcher;
global using LastState1 = EFT.UI.Screens.EStateSwitcher;
global using UIScreen7 = EFT.UI.Screens.PostFXPreviewScreen;
global using AbstractUIInputNode = EFT.UI.Screens.UIScreen;
global using MonoBehaviour338 = EFT.UI.ScreenScaleLocker;
global using MonoBehaviour348 = EFT.UI.ScrollTrigger;
global using UIElement66 = EFT.UI.SelectingItemView;
global using UIElement157 = EFT.UI.SelectSlider;
global using HandoverSelectItemsWindow3 = EFT.UI.SelectWeaponBodyWindow;
global using UIElement146 = EFT.UI.ServiceListItem;
global using UIElement138 = EFT.UI.ServicesListView;
global using UIElement147 = EFT.UI.ServicesScreen;
global using UIElement169 = EFT.UI.SessionEnd.KillListVictim;
global using MonoBehaviour361 = EFT.UI.SessionEnd.SessionExperiencePanel;
global using StatGroup = EFT.UI.SessionEnd.SessionResultStatistics.GClass3125;
global using MonoBehaviour360 = EFT.UI.Settings.CommandAxisPair;
global using UIElement168 = EFT.UI.Settings.CommandKeyPair;
global using SettingsTab1 = EFT.UI.Settings.ControlSettingsTab;
global using WhiteToRed = EFT.UI.Settings.EHealthColorScheme;
global using Autohide = EFT.UI.Settings.EVisibilityMode;
global using SettingsTab2 = EFT.UI.Settings.GameSettingsTab;
global using SettingsTab3 = EFT.UI.Settings.GraphicsSettingsTab;
global using SettingsTab4 = EFT.UI.Settings.PostFXSettingsTab;
global using AbstractUIElement4 = EFT.UI.Settings.SettingControl;
global using SettingControl1 = EFT.UI.Settings.SettingDropDown;
global using SettingControl2 = EFT.UI.Settings.SettingFloatSlider;
global using SettingControl3 = EFT.UI.Settings.SettingSelectSlider;
global using Game = EFT.UI.Settings.SettingsScreen.ESettingsGroup;
global using GScreenController = EFT.UI.Settings.SettingsScreen.GClass3160;
global using CopyFromManager = EFT.UI.Settings.SettingsScreen.GClass3160.GClass3121;
global using AbstractUIElement5 = EFT.UI.Settings.SettingsTab;
global using SettingControl4 = EFT.UI.Settings.SettingToggle;
global using SettingsTab5 = EFT.UI.Settings.SoundSettingsTab;
global using SubMenuTemplate = EFT.UI.SimpleContextMenu;
global using UIElement62 = EFT.UI.SimpleContextMenuButton;
global using UIElement99 = EFT.UI.SimpleStashPanel;
global using Tooltip2 = EFT.UI.SimpleTooltip;
global using UIElement117 = EFT.UI.SkillBuffIcon;
global using UIElement118 = EFT.UI.SkillClassIcon;
global using UIElement119 = EFT.UI.SkillIcon;
global using UIElement120 = EFT.UI.SkillLevelPanel;
global using SkillContainer1 = EFT.UI.SkillList;
global using UIElement121 = EFT.UI.SkillPanel;
global using UIElement122 = EFT.UI.SkillRequirementIcon;
global using UIElement59 = EFT.UI.SkillsAndLevelsRequirementsPanel;
global using UIElement123 = EFT.UI.SkillsAndMasteringScreen;
global using UIElement124 = EFT.UI.SkillsScreen;
global using Tooltip4 = EFT.UI.SkillTooltip;
global using MonoBehaviour332 = EFT.UI.SplashScreen;
global using UIElement100 = EFT.UI.SplashScreenPanel;
global using MonoBehaviour333 = EFT.UI.SplitDialog;
global using UIElement53 = EFT.UI.SpriteAnimationPlayer;
global using EffectIcon1 = EFT.UI.StackedEffectIcon;
global using UIElement139 = EFT.UI.StashRowsRewardView;
global using UIElement101 = EFT.UI.StatGroupView;
global using ScriptableObject43 = EFT.UI.StaticIcons;
global using GSerializationCallbackReceiver1 = EFT.UI.StaticIcons.EffectSprites;
global using UIElement94 = EFT.UI.StatisticsSpawn;
global using SameColumn = EFT.UI.StatisticsSpawn.EStatGroupLayoutType;
global using Overall = EFT.UI.StatisticsSpawn.EStatisticsType;
global using UIElement102 = EFT.UI.StatItemView;
global using MonoBehaviour319 = EFT.UI.StatsListElement;
global using UIElement140 = EFT.UI.StatView;
global using MonoBehaviour349 = EFT.UI.StepSlider;
global using MonoBehaviour326 = EFT.UI.StretchArea;
global using GBottom = EFT.UI.StretchArea.EStretchAreaType;
global using UIElement161 = EFT.UI.SubtitlesView;
global using ServiceView2 = EFT.UI.TacticalClothingView;
global using MonoBehaviour325 = EFT.UI.TagColorsPanel;
global using TaskLabelsTooltip2 = EFT.UI.TaskConditionsTooltip;
global using AbstractTooltip = EFT.UI.TaskLabelsTooltip;
global using TaskLabelsTooltip3 = EFT.UI.TaskRewardsTooltip;
global using UIElement126 = EFT.UI.TasksScreen;
global using UIElement162 = EFT.UI.ToggleButton;
global using UIElement127 = EFT.UI.Tooltip;
global using UIElement148 = EFT.UI.TradeItemType;
global using UIElement149 = EFT.UI.TraderAvatar;
global using UIElement150 = EFT.UI.TraderDealScreen;
global using Purchase = EFT.UI.TraderDealScreen.ETraderMode;
global using UIElement163 = EFT.UI.TraderDialogBubble;
global using UIElement164 = EFT.UI.TraderDialogHistoryView;
global using ShowDialogScreen = EFT.UI.TraderDialogScreen.GClass3153;
global using UIElement165 = EFT.UI.TraderDialogWindow;
global using UIElement166 = EFT.UI.TraderDialogWindowOptionRow;
global using UIElement151 = EFT.UI.TraderHoverPanel;
global using UIElement152 = EFT.UI.TraderPanel;
global using UIElement125 = EFT.UI.TraderRequirementIcon;
global using UIElement141 = EFT.UI.TraderRewardView;
global using MonoBehaviour341 = EFT.UI.TraderTooltip;
global using UIElement153 = EFT.UI.TradingPlayerPanel;
global using ItemOnGrid1 = EFT.UI.TradingRequisitePanel;
global using Merchants = EFT.UI.TradingScreen.ETradingScreenTab;
global using UIElement154 = EFT.UI.TradingTable;
global using UIElement155 = EFT.UI.TransferItemsPanel;
global using MonoBehaviour356 = EFT.UI.Tutorial.KeyBannerGenerator;
global using GetKeyBindingBanner = EFT.UI.Tutorial.KeyBindingBannerView;
global using MonoBehaviour358 = EFT.UI.Tutorial.KeyBindingView;
global using MonoBehaviour359 = EFT.UI.Tutorial.KeyView;
global using PointerEnterHandler8 = EFT.UI.TweenAnimatedButton;
global using UISpawner1 = EFT.UI.UIAnimatedToggleSpawner;
global using UIElement158 = EFT.UI.UICanvasScaler;
global using EventSystemHandler46 = EFT.UI.UIDragComponent;
global using Showable = EFT.UI.UIElement;
global using MonoBehaviour352 = EFT.UI.UiElementBlocker;
global using MonoBehaviour350 = EFT.UI.UIEventSystem;
global using AbstractInputNode = EFT.UI.UIInputNode;
global using MonoBehaviour351 = EFT.UI.UIJittingStabilizer;
global using MonoBehaviour314 = EFT.UI.UIPointer;
global using ButtonFeedback4 = EFT.UI.UISpawnableToggle;
global using UIInputNode2 = EFT.UI.UnknownErrorScreen;
global using UIElement55 = EFT.UI.UsingPanel;
global using UIElement167 = EFT.UI.Utilities.LightScroller.LightScroller;
global using Always = EFT.UI.Utilities.LightScroller.LightScroller.EScrollbarVisibilityEnum;
global using GVertical1 = EFT.UI.Utilities.LightScroller.LightScroller.EScrollDirection;
global using Straight = EFT.UI.Utilities.LightScroller.LightScroller.EScrollOrder;
global using EnvironmentUIRoot1 = EFT.UI.VideoEnvironmentUIRoot;
global using UIElement97 = EFT.UI.VoiceSelector;
global using UIElement170 = EFT.UI.WeaponModding.DropDownMenu;
global using MonoBehaviour362 = EFT.UI.WeaponModding.ModdingItem;
global using UIElement171 = EFT.UI.WeaponModding.ModdingScreenSlotView;
global using GetWeaponPreview = EFT.UI.WeaponModding.WeaponPreview;
global using MonoBehaviour234 = EFT.Utilities.AutoCameraController;
global using AimObject = EFT.Utilities.AutoCameraController.EAction;
global using HideIfNotFound = EFT.Utilities.EMissingEventActionType;
global using MonoBehaviour235 = EFT.Utilities.EventObject;
global using MonoBehaviour233 = EFT.Utilities.XCoordRotation;
global using MonoBehaviour240 = EFT.Vaulting.Debug.VaultingDebugTool;
global using MonoBehaviour241 = EFT.Vaulting.Debug.View.EditorApproximationView;
global using MonoBehaviour242 = EFT.Vaulting.Debug.View.EditorGridView;
global using MonoBehaviour243 = EFT.Vaulting.Debug.View.EditorView;
global using MonoBehaviour244 = EFT.Vaulting.Debug.View.PageViewer;
global using MonoBehaviour245 = EFT.Vaulting.Debug.View.VaultingDebugToolView;
global using None46 = EFT.Vaulting.Enums.SurfaceType;
global using Start1 = EFT.Vaulting.EVaultingSoundState;
global using None45 = EFT.Vaulting.EVaultingSoundType;
global using GetVaultingStrategy = EFT.Vaulting.EVaultingStrategy;
global using IVaultingRestrictions2 = EFT.Vaulting.IAutoMoveRestrictions;
global using IBaseMoveSettings2 = EFT.Vaulting.IClimbSettings;
global using IVaultingRestrictions1 = EFT.Vaulting.IMoveRestrictions;
global using IBaseMoveSettings1 = EFT.Vaulting.IVaultSettings;
global using MonoBehaviour256 = EFT.Vehicle.BTRSide;
global using MonoBehaviour260 = EFT.Vehicle.BTRTurretServer;
global using MonoBehaviour261 = EFT.Vehicle.BTRTurretView;
global using VehicleBase1 = EFT.Vehicle.BTRVehicle;
global using MonoBehaviour257 = EFT.Vehicle.BTRView;
global using Confirmed1 = EFT.Vehicle.EBtrInteractionStatus;
global using MonoBehaviour258 = EFT.Vehicle.MapPathConfig;
global using AddNewPathDestination = EFT.Vehicle.PathDestination;
global using GetPartPathByID = EFT.Vehicle.PathPartBase;
global using GetNext = EFT.Vehicle.PathReversePart;
global using CreateNewPathSpline = EFT.Vehicle.PathSpline;
global using Forward1 = EFT.Vehicle.ReverseMoveType;
global using MonoBehaviour262 = EFT.Vehicle.Vehicles.VehicleSuspensionSpring;
global using MonoBehaviour263 = EFT.Vehicle.Vehicles.VehicleWheelsBase;
global using ProfileDataContainer1 = EFT.VictimStats;
global using Dress1 = EFT.Visual.ArmBandView;
global using CustomSkin1 = EFT.Visual.BackpackSkin;
global using MonoBehaviour186 = EFT.Visual.Dress;
global using Flicker5 = EFT.Visual.EmissionFlicker;
global using Thin = EFT.Visual.EWidth;
global using MonoBehaviour196 = EFT.Visual.Flicker;
global using SelectTypeForGenerate = EFT.Visual.Flicker.ECurveType;
global using MonoBehaviour187 = EFT.Visual.FoldableStockView;
global using MonoBehaviour197 = EFT.Visual.GunShadowDisabler;
global using MonoBehaviour188 = EFT.Visual.HelmetDress;
global using MonoBehaviour198 = EFT.Visual.IkLight;
global using Dress2 = EFT.Visual.JackOLantern;
global using MonoBehaviour189 = EFT.Visual.LegsView;
global using GetFlicker = EFT.Visual.LightFlicker;
global using MonoBehaviour190 = EFT.Visual.LoddedSkin;
global using MonoBehaviour191 = EFT.Visual.NightVisionDevice;
global using MonoBehaviour192 = EFT.Visual.NightVisionMount;
global using MonoBehaviour193 = EFT.Visual.RetractableStockView;
global using Dress3 = EFT.Visual.SkinDress;
global using MonoBehaviour194 = EFT.Visual.ThermalVisionDevice;
global using AbstractSkin1 = EFT.Visual.TorsoSkin;
global using MonoBehaviour195 = EFT.Visual.VestlikeArmor;
global using MonoBehaviour145 = EFT.WavesSpawnScenario;
global using None41 = EFT.Weapons.Data.ESoundWeaponType;
global using ScriptableObject34 = EFT.WeaponSounds;
global using Clear1 = EFT.Weather.ECloudinessType;
global using NoFog = EFT.Weather.EFogType;
global using NoRain = EFT.Weather.ERainType;
global using ClearDay = EFT.Weather.EWeatherType;
global using Light = EFT.Weather.EWindSpeed;
global using ScriptableObject38 = EFT.Weather.FogRemapData;
global using ScriptableObject39 = EFT.Weather.FogRemapDataV2;
global using GetRecord = EFT.Weather.FogRemapRecord;
global using CalculateSphericalHarmonics = EFT.Weather.ToDController.GStruct255;
global using MonoBehaviour231 = EFT.Weather.WeatherController;
global using WeatherCurve1 = EFT.Weather.WeatherCurve;
global using CachedWeather = EFT.Weather.WeatherDebug;
global using North = EFT.Weather.WeatherDebug.Direction;
global using MonoBehaviour232 = EFT.Weather.WindController;
global using Marksman = EFT.WildSpawnType;
global using Copy = EFT.WildSpawnWave;
global using AbstractMonoBehaviour19 = EFT.World;
global using GScriptableObject5 = EFTBackendSettings;
global using Production = EFTBackendSettings.EBackendLabel;
global using ScriptableObject = EFTHardSettings;
global using ThatDirection = EGesture;
global using GInventory1 = EItemType;
global using SurgialKit = EMedsType;
global using Developer = EMemberCategory;
global using Functional1 = EModClass;
global using Bipod = EModSubclass;
global using NoCover = ENavGraphFindRemoveCause;
global using GDoor1 = ENavMeshObstacleType;
global using FindDangerEnemy = EnemyInfo;
global using Hight = EnemyPriority;
global using WebSocket1 = ENotificationTransportType;
global using GMonoBehaviour87 = EnvironmentManagerBase;
global using Outdoor = EnvironmentType;
global using GRegular3 = EOcclusionTest;
global using CalculatePathFull = EPathCalcResult;
global using PhraseNone = EPhraseTrigger;
global using GIdle3 = EPlayerState;
global using GDeserialize8 = EquipmentClass;
global using LeaveGroup = ERaidPlayerButton;
global using GEndInvoke = ERequestErrorHandlingResult;
global using AbortOnFail = ERequestHandlingMode;
global using InitOperationError = ErrorCode;
global using NavGraphSimple = ESearchCoverEngine;
global using GSummer = ESeason;
global using GSummer1 = ESeasonStatus;
global using GRegular2 = ESessionMode;
global using ShotNotApproved = ESkirmishLogType;
global using Obstruction = ESoundOcclusionType;
global using NoValidTriggerCollider = ESpatialAudioRoomError;
global using GetGroupStatus = ETagStatus;
global using GItemTemplates = ETemplateIds;
global using HTTPS = ETransportProtocolType;
global using GBackward = EVehicleMoveDirection;
global using OnRoute = EVehicleRouteState;
global using GWarn = EWarnBehaviour;
global using FollowerComeToTarget = EWarnMode;
global using MainWeaponSingle = EWeaponAIPresetType;
global using GMonoBehaviour8 = ExampleSceneController;
global using NotImplementedException1 = Exception0;
global using Exception21 = Exception3;
global using Exception22 = Exception4;
global using GMonoBehaviour = ExtendedFlycam;
global using GMonoBehaviour116 = ExternalTerrainCollider;
global using GMonoBehaviour311 = EyeBurn;
global using AllSteps = EZigZAgType;
global using GMonoBehaviour312 = FakeCharacterGI;
global using GMonoBehaviour198 = FakeInteriorTODController;
global using None7 = FastAnimatorSystem.ETransitionInterruptionSource;
global using MonoBehaviour112 = FastAnimatorSystem.PlayableAnimator;
global using MonoBehaviour113 = FastAnimatorSystem.TestAnimatorEnvironment.TestAnimatorBenchmarkMover;
global using MonoBehaviour114 = FastAnimatorSystem.TestAnimatorEnvironment.TestAnimatorMover;
global using MonoBehaviour115 = FastAnimatorSystem.TestAnimatorEnvironment.TestAnimatorSkeleton;
global using MonoBehaviour116 = FastAnimatorSystem.TestAnimatorEnvironment.TestWeaponAnimatorSkeleton;
global using GMonoBehaviour313 = FastBlur;
global using GMonoBehaviour314 = FastBlurTest;
global using ObjectInHandsAnimator1 = FirearmsAnimator;
global using GIdle = FirearmsAnimator.EGrenadeFire;
global using GMonoBehaviour212 = FirearmsEffects;
global using OnRenderObjectConnector4 = FlareForEffects;
global using GridLayoutGroup1 = FlexibleGridLayoutGroup;
global using GMonoBehaviour162 = FlickeringLights;
global using PrevPoint = FloatContainer;
global using BulletSoundPlayer2 = FlyingBulletSoundPlayer;
global using MonoBehaviour139 = FlyingWormConsole3.ConsoleProRemoteServer;
global using None11 = FlyingWormConsole3.LiteNetLib.ConnectionRequestResult;
global using Outgoing = FlyingWormConsole3.LiteNetLib.ConnectionState;
global using None12 = FlyingWormConsole3.LiteNetLib.ConnectRequestResult;
global using Unreliable = FlyingWormConsole3.LiteNetLib.DeliveryMethod;
global using ConnectionFailed = FlyingWormConsole3.LiteNetLib.DisconnectReason;
global using None13 = FlyingWormConsole3.LiteNetLib.DisconnectResult;
global using Disabled2 = FlyingWormConsole3.LiteNetLib.IPv6Mode;
global using IPv4 = FlyingWormConsole3.LiteNetLib.LocalAddrType;
global using Internal = FlyingWormConsole3.LiteNetLib.NatAddressType;
global using Warning = FlyingWormConsole3.LiteNetLib.NetLogLevel;
global using Unreliable1 = FlyingWormConsole3.LiteNetLib.PacketProperty;
global using None14 = FlyingWormConsole3.LiteNetLib.ShutdownResult;
global using BasicMessage = FlyingWormConsole3.LiteNetLib.UnconnectedMessageType;
global using NoWarning = FlyingWormConsole3.LiteNetLib.Utils.NtpLeapIndicator;
global using Client1 = FlyingWormConsole3.LiteNetLib.Utils.NtpMode;
global using GMonoBehaviour285 = FogEllipsoid;
global using LightOverride1 = FogLight;
global using GMonoBehaviour158 = Follow;
global using CullingObject4 = FollowerCullingObject;
global using Remove = FollowerStatusChange;
global using GItem5 = FoodClass;
global using GEffector = ForceEffector;
global using GMonoBehaviour64 = ForestAIData;
global using GMonoBehaviour1 = ForestMaker;
global using GMonoBehaviour151 = FPSLimit;
global using GMonoBehaviour385 = FracturePointsPlacer;
global using GMonoBehaviour386 = FractureTester;
global using GMonoBehaviour422 = FreeCamera;
global using Button1 = FriendsListContentButton;
global using GMonoBehaviour95 = GameObjectsToggleByDistance;
global using GStarted = GameTimerClass.EGameTimerStatus;
global using GMonoBehaviour434 = GarbageEmitter;
global using ButtonAttribute1 = GAttribute3;
global using AddPoint = GClass0;
global using MarksmanTarget = GClass100;
global using BakeInformation = GClass1007;
global using Panic = GClass101;
global using YieldInstruction = GClass1011;
global using Indices = GClass1013;
global using AllocateExchangeBuffer = GClass1014;
global using GYieldInstruction = GClass1017;
global using GYieldInstruction1 = GClass1018;
global using Utilitypeace = GClass102;
global using SamplingTask = GClass1024;
global using PatrolAssault = GClass103;
global using InitializeSpatialTreeFromGridData = GClass1036;
global using StayAtPos = GClass104;
global using Wireframe = GClass1040.RenderMode;
global using GJobParallelFor4 = GClass1041.Struct174;
global using GJobParallelFor5 = GClass1041.Struct176;
global using Sampler = GClass1042;
global using PackedCullingGridData = GClass1054;
global using AllocateDecompressor = GClass1054.GClass1055;
global using GetCellBounds = GClass1054.GStruct79;
global using AbstractSpCell = GClass1061;
global using RuntimeData = GClass1073;
global using CreateClient = GClass1079;
global using Followerbully = GClass108;
global using CreateServer = GClass1080;
global using StorageDeviceProperty = GClass1084.StoragePropertyId;
global using PropertyStandardQuery = GClass1084.StorageQueryType;
global using BSGNetworkReader = GClass1085;
global using BSGNetworkReaderExtensions = GClass1088;
global using SecurityGluhar = GClass109;
global using BSGNetworkWriter = GClass1090;
global using BSGNetworkWriterExtensions = GClass1093;
global using BSGNetworkConversionHelpers = GClass1098;
global using BossSanitarFight = GClass111;
global using Between = GClass1110.ERangeType;
global using AbstractState = GClass1117;
global using FastAnimatorController = GClass1119;
global using FlSanFight = GClass112;
global using AbstractStateMachine = GClass1120;
global using LayerStateMachine = GClass1121;
global using ChildInnerStateMachine = GClass1122;
global using TriggeredTransition = GClass1123;
global using AbstractAnimatorState = GClass1124;
global using GControllerState = GClass1126;
global using ControllerState = GClass1127;
global using Threshold = GClass1129;
global using Undefined = GClass1129.EAnimatorValueType;
global using SanitarGoal = GClass113;
global using AnimatorParameter = GClass1130;
global using AbstractClipInfo = GClass1131;
global using GCreate1 = GClass1132;
global using Behavior1 = GClass1133;
global using InternalCreate = GClass1134;
global using GInternalCreate = GClass1135;
global using GInternalCreate1 = GClass1136;
global using FastAnimatorProcessor = GClass1146;
global using FastControllerInfo = GClass1148;
global using LayerInfo = GClass1149;
global using GrenSuicide = GClass115;
global using GCondition1 = GClass1150;
global using EqualInt = GClass1150.EConditionDelegateType;
global using NotEqual = GClass1150.EConditionModes;
global using DeserializeToFlat = GClass1151.GClass1152;
global using ControllerEntity = GClass1151.GClass1153;
global using EventsState = GClass1151.GClass1153.BehType;
global using Motion1 = GClass1151.GClass1154;
global using FlatAnimatorControllerTransition = GClass1151.GClass1155;
global using FlatTranstionCondition = GClass1151.GClass1156;
global using FlatAnimatorParameter = GClass1151.GClass1157;
global using CreateAvgMeasurer = GClass1159;
global using NetworkQuality = GClass1161;
global using FrameMeasurer = GClass1162;
global using Config3 = GClass1162.GClass620.GClass1163;
global using CreateDiagnosticsCounter = GClass1164;
global using CreateMaxMeasurer = GClass1165;
global using CreateMeasureTimer = GClass1166;
global using CreateValueChangeMeasurer = GClass1167;
global using RunStrike = GClass118;
global using GServer = GClass1188;
global using FlatItem = GClass1198;
global using BackendUrls = GClass1200;
global using LoginDataResponse = GClass1202;
global using PreinsuredItem = GClass1204;
global using GLootItem = GClass1209;
global using TagillaAmbush = GClass121;
global using Serializer1 = GClass1210;
global using LootItems = GClass1211;
global using Preset2 = GClass1212;
global using ItemTemplates = GClass1215;
global using CreateRaidPlayerInfo = GClass1217;
global using SquadPlayer = GClass1218;
global using GPlayer = GClass1219;
global using TagillaFollower = GClass122;
global using GProfile = GClass1220;
global using Invite = GClass1222;
global using TagillaMain = GClass123;
global using Ambush = GClass123.ETagillaBattleLogic;
global using TestLayer = GClass124;
global using BackEndConfig = GClass1240;
global using BotPreset = GClass1242;
global using CutPiece = GClass1245;
global using GCreate2 = GClass1247;
global using GCreate25 = GClass1248;
global using AbstractComputedNode = GClass1249;
global using Clip = GClass1249.EComputedNodeType;
global using GTestLayer = GClass125;
global using CustomBlendTree = GClass1253;
global using Simple1D = GClass1253.EBlendType;
global using CompletedQuest = GClass1258;
global using DailyQuest = GClass1259;
global using BytesSegment = GClass1264;
global using GClass1268SwitchingOff = GClass1268.State;
global using GCenter1 = GClass1274.BoneSide;
global using Unassigned = GClass1274.BoneType;
global using CloseZrFight = GClass128;
global using GIKSolverTrigonometric = GClass1280;
global using ConnectionRequest = GClass1284;
global using ZryachiyFight = GClass129;
global using NetManager = GClass1290;
global using ExcludePeer = GClass1291;
global using NetDataReader = GClass1296;
global using DataWriter = GClass1298;
global using GetCallbackFromData = GClass1299.SubscribeDelegate;
global using FlZryachFight = GClass130;
global using Array1 = GClass1300.CallType;
global using GPacket = GClass1301;
global using AbstractExtraPacketLayer = GClass1302;
global using GCreate22 = GClass1309;
global using LayingPatrol = GClass131;
global using Config2 = GClass1312;
global using GClass1312FramerateLimit = GClass1312.GClass1314;
global using ClientSettingsNetworkStateView = GClass1312.GClass1315;
global using CheckZryachiy = GClass132;
global using GStandBy = GClass133;
global using AbstractCreateNode = GClass134;
global using AbstractGetAiming = GClass136;
global using ResourceBundleConstants = GClass1399;
global using Loop = GClass14.DetectType;
global using GInventory = GClass14.EPauseReason;
global using GetSearchableInfo = GClass1406;
global using Kill = GClass1412.EQuestZoneType;
global using Version1 = GClass1417;
global using AbstractClone = GClass1418;
global using FilterCustomizationClass = GClass1456;
global using FilterCustomizationClass1 = GClass1457;
global using GBotSpawner = GClass1483;
global using GBotSpawner1 = GClass1484;
global using TrafficData = GClass1491;
global using WeatherSettings = GClass1493;
global using GetField = GClass1496.Class959;
global using Registry1 = GClass1498;
global using InventoryDescriptor = GClass1500;
global using FastAccessDescriptor = GClass1501;
global using DiscardLimitsDescriptor = GClass1502;
global using SlotDescriptor = GClass1503;
global using ShellTemplateDescriptor = GClass1504;
global using MalfunctionDescriptor = GClass1505;
global using ItemInGridDescriptor = GClass1506;
global using GridDescriptor = GClass1507;
global using StackSlotDescriptor = GClass1508;
global using NestedItemDescriptor = GClass1509;
global using ItemDescriptor = GClass1510;
global using AbstractSerializeComponent = GClass1511;
global using FoodDrinkComponentDescriptor = GClass1512;
global using PoisonComponentDescriptor = GClass1513;
global using ResourceItemComponentDescriptor = GClass1514;
global using LightComponentDescriptor = GClass1515;
global using LockableComponentDescriptor = GClass1516;
global using MapComponentDescriptor = GClass1517;
global using MedKitComponentDescriptor = GClass1518;
global using RepairableComponentDescriptor = GClass1519;
global using SightComponentDescriptor = GClass1520;
global using TogglableComponentDescriptor = GClass1521;
global using FaceShieldComponentDescriptor = GClass1522;
global using FoldableComponentDescriptor = GClass1523;
global using FireModeComponentDescriptor = GClass1524;
global using DogTagComponentDescriptor = GClass1525;
global using TagComponentDescriptor = GClass1526;
global using KeyComponentDescriptor = GClass1527;
global using RepairKitComponentDescriptor = GClass1528;
global using RepairEnhancementComponentDescriptor = GClass1529;
global using RecodableComponentDescriptor = GClass1530;
global using CultistAmuletComponentDescriptor = GClass1531;
global using JsonLootItemDescriptor = GClass1532;
global using JsonCorpseDescriptor = GClass1533;
global using LootDataDescriptor = GClass1534;
global using InventorySerializationHelpers = GClass1535;
global using AbstractDescriptor = GClass1536;
global using SlotItemAddressDescriptor = GClass1537;
global using StackSlotItemAddressDescriptor = GClass1538;
global using GridItemAddressDescriptor = GClass1539;
global using OwnerItselfDescriptor = GClass1540;
global using ContainerDescriptor = GClass1541;
global using GTarget39 = GClass1542;
global using AbstractDescriptor1 = GClass1543;
global using AddOperationDescriptor = GClass1544;
global using MagOperationDescriptor = GClass1545;
global using LoadMagOperationDescriptor = GClass1546;
global using UnloadMagOperationDescriptor = GClass1547;
global using RemoveOperationDescriptor = GClass1548;
global using ExamineOperationDescriptor = GClass1549;
global using ExamineMalfunctionOperationDescriptor = GClass1550;
global using ExamineMalfTypeOperationDescriptor = GClass1551;
global using CheckMagazineOperationDescriptor = GClass1552;
global using BindItemOperationDescriptor = GClass1553;
global using UnbindItemOperationDescriptor = GClass1554;
global using InsureItemsOperationDescriptor = GClass1555;
global using MoveOperationDescriptor = GClass1556;
global using MoveAllOperationDescriptor = GClass1557;
global using SplitOperationDescriptor = GClass1558;
global using MergeOperationDescriptor = GClass1559;
global using TransferOperationDescriptor = GClass1560;
global using SwapOperationDescriptor = GClass1561;
global using ThrowOperationDescriptor = GClass1562;
global using ToggleOperationDescriptor = GClass1563;
global using FoldOperationDescriptor = GClass1564;
global using ShotOperationDescriptor = GClass1565;
global using SetupItemOperationDescriptor = GClass1566;
global using ApplyOperationDescriptor = GClass1567;
global using ApplyHealthOperationDescriptor = GClass1568;
global using CreateMapMarkerOperationDescriptor = GClass1569;
global using EditMapMarkerOperationDescriptor = GClass1570;
global using DeleteMapMarkerOperationDescriptor = GClass1571;
global using AddNoteOperationDescriptor = GClass1572;
global using EditNoteOperationDescriptor = GClass1573;
global using DeleteNoteOperationDescriptor = GClass1574;
global using TagOperationDescriptor = GClass1575;
global using OperateStationaryWeaponOperationDescriptor = GClass1576;
global using WeaponRechamberOperationDescriptor = GClass1577;
global using ObservedSyncItemsOperationDescriptor = GClass1578;
global using QuestActionDescriptor = GClass1579;
global using QuestAcceptDescriptor = GClass1580;
global using QuestFinishDescriptor = GClass1581;
global using QuestHandoverDescriptor = GClass1582;
global using InventoryLogicOperationsCreateItemsDescriptor = GClass1583;
global using InventoryLogicOperationsPurchaseTraderServiceOperationDescriptor = GClass1584;
global using OperationToDescriptorHelpers = GClass1643;
global using ChannelCombined = GClass1649;
global using Channels1 = GClass1650;
global using DataBegin = GClass1652.EIncomeMessageType;
global using NetworkQualityParams = GClass1655;
global using NetworkQualityParam = GClass1656;
global using AbstractPacketEncryptor = GClass1658;
global using DeferredData = GClass1664;
global using BSGDirectionalHelpers = GClass1668;
global using WeaponEffectsManager = GClass1679;
global using AbstractMagazineInHandsVisual = GClass1680;
global using ApplyShot = GClass1687;
global using PlayerAnimatorEvents = GClass1688;
global using VaultingSoundsEvents = GClass1690;
global using GVaultingSoundsEvents = GClass1691;
global using GVaultingSoundsEvents1 = GClass1692;
global using GetNextState = GClass1693;
global using GCreate32 = GClass1696;
global using ApproachState = GClass1697;
global using GMovementState1 = GClass1699;
global using BaseState = GClass1701;
global using GMovementState3 = GClass1703;
global using GMovementState4 = GClass1712;
global using GMovementState5 = GClass1714;
global using PushingFromTheGround = GClass1714.EJumpState;
global using GMovementState7 = GClass1716;
global using GMovementState8 = GClass1720;
global using GMovementState9 = GClass1721;
global using GMovementState10 = GClass1722;
global using GMovementState11 = GClass1723;
global using AbstractMovementState = GClass1724;
global using AbstractBaseMovementState = GClass1727;
global using SpeedLimiterBuilder = GClass1749;
global using FavoriteItems = GClass1756;
global using Status1 = GClass1758;
global using VictimSettings = GClass1759;
global using Customization = GClass1766;
global using GetBan = GClass1770;
global using CommonPacket = GClass1776;
global using AbstractBaseSkill = GClass1777;
global using GetSkill = GClass1779;
global using SkillInfo = GClass1794.GClass1795;
global using StatisticsManager = GClass1799;
global using StartDiff = GClass18.GClass19;
global using StatisticsManagerForPlayer = GClass1800;
global using AStatisticsManagerForPlayer = GClass1801;
global using ServiceData1 = GClass1805;
global using VoipSettings = GClass1806;
global using Config1 = GClass1811;
global using LoadScenesFromPreset = GClass1813;
global using SceneToken = GClass1814.GClass1815;
global using AddNewGroup = GClass1817;
global using GExecute = GClass1828;
global using AbstractOperation1 = GClass1829;
global using ProfileData = GClass1829.GClass1831;
global using GExecute1 = GClass1833;
global using BackEnd = GClass1843;
global using GClass1843Session = GClass1843.GClass1844;
global using Changes = GClass1847;
global using Social1 = GClass1855;
global using StashChanges = GClass1859;
global using NewLocale = GClass1865;
global using AsItemReference = GClass1876;
global using GCopy = GClass1880;
global using Commodities = GClass1881;
global using LoggerFactory = GClass1885;
global using Frustum = GClass1887;
global using GetSphereIntersection = GClass1887.IntersectionType;
global using Preset5 = GClass1895;
global using Stored = GClass1896;
global using GetUpdater = GClass1903;
global using GetAxis = GClass1906;
global using AbstractCombination = GClass1907;
global using AxisCombination = GClass1908;
global using JustAxis = GClass1908.EAxisState;
global using Positive = GClass1908.EUseSide;
global using GKeyCombination = GClass1909;
global using AbstractKeyCombinationState = GClass1909.Class1595;
global using GAbstractKeyCombinationState = GClass1909.Class1598;
global using KeyCombinationState1 = GClass1909.Class1603;
global using KeyCombinationState4 = GClass1909.Class1606;
global using KeyCombinationState5 = GClass1909.Class1607;
global using KeyCombinationState6 = GClass1909.Class1608;
global using KeyCombinationState7 = GClass1909.Class1609;
global using KeyCombinationState8 = GClass1909.Class1610;
global using KeyCombinationState2 = GClass1909.ContinuousIdlingState;
global using KeyCombinationState3 = GClass1909.ContinuousPressedState;
global using ClickIdling = GClass1909.EKeyState;
global using GKeyCombination1 = GClass1910;
global using ContinuousIdlingState1 = GClass1910.Class1604;
global using ContinuousPressedState1 = GClass1910.Class1605;
global using GetKey = GClass1911;
global using GGetUpdater = GClass1913;
global using Supply = GClass1919;
global using Improvement = GClass1925;
global using GImprovement = GClass1927;
global using AbstractProducer = GClass1929;
global using PermanentProducer = GClass1931;
global using ProducingItem = GClass1935;
global using AbstractScheme = GClass1936;
global using Scheme = GClass1937;
global using GScheme = GClass1938;
global using DetailsData = GClass1942;
global using GMonoBehaviour442 = GClass1945.ItemModel;
global using ItemModel1 = GClass1945.WeaponItemModel;
global using GRelatedData = GClass1947;
global using AbstractRequirement = GClass1948;
global using GQteResult = GClass1951;
global using TargetScenario = GClass1953;
global using TargetControl = GClass1965;
global using AsyncCommand = GClass1972;
global using GAsyncCommand = GClass1973;
global using NewFriend = GClass2011;
global using FriendRequestCanceled = GClass2012;
global using NotificationMatchRaidSettings = GClass2019;
global using NotificationGroupMatchRaidReady = GClass2020;
global using NotificationGroupMatchRaidNotReady = GClass2021;
global using AbstractNotification = GClass2051;
global using LocalizedNotification = GClass2054;
global using Requisite = GClass2062;
global using AbstractDialogController = GClass2065;
global using History1 = GClass2069;
global using AbstractGetAcceptServiceLine = GClass2070;
global using AbstractCreateDialogList = GClass2086;
global using TokenStarter = GClass21;
global using StartWithToken = GClass21.GStruct3;
global using RepairController = GClass2104;
global using GError19 = GClass2105.Class3175;
global using Preset1 = GClass2106;
global using GInventoryError = GClass2106.Class3176;
global using GInventoryError1 = GClass2106.Class3177;
global using PresetItem = GClass2106.GClass2107;
global using MetricsCollector = GClass2140;
global using MetricsConfig = GClass2142;
global using MetricsEvents = GClass2151;
global using GVaultingRestrictions1 = GClass2166;
global using GVaultingRestrictions2 = GClass2167;
global using VaultingParameters = GClass2168;
global using VaultingComponentDebug = GClass2169;
global using VaultingGameplayRestrictions = GClass2170;
global using GridOptionsPageView = GClass2177;
global using MainInfoPageView = GClass2178;
global using StartPageView = GClass2180;
global using AutomaticVaultingModelDebug = GClass2195;
global using GridSettingsModelDebug = GClass2196;
global using VaultingRestrictionsModelDebug = GClass2197;
global using SurfaceApproximatorModelDebug = GClass2198;
global using GridPointsModelDebug = GClass2199;
global using SimpleProfiler = GClass22;
global using BeginSampleWithToken = GClass22.GStruct4;
global using GridRootMoverModelDebug = GClass2200;
global using ObstacleCalculatorModelDebug = GClass2201;
global using VaultingStateModelDebug = GClass2204;
global using WeightCalculatorModelDebug = GClass2205;
global using VaultingModelDebug = GClass2206;
global using ObstacleCollisionFacade = GClass2217;
global using AutoSender = GClass2226;
global using GCreateInstance3 = GClass2231;
global using GCreateInstance4 = GClass2232;
global using GCreateInstance5 = GClass2233;
global using GCreateInstance6 = GClass2234;
global using GCreateInstance7 = GClass2235;
global using GCreateInstance8 = GClass2236;
global using GCommandMessage3 = GClass2237;
global using DeathCommand = GClass2238;
global using GCreateInstance10 = GClass2239;
global using GCreateInstance11 = GClass2240;
global using EffectOnPlayerStatusCommandMessage = GClass2242;
global using HeavyBleeding1 = GClass2242.EHealthEffectType;
global using GCreateInstance13 = GClass2244;
global using GCreateInstance14 = GClass2245;
global using FaceShield = GClass2245.EHeadDeviceType;
global using HealthStatusCommandMessage = GClass2246;
global using GCommandMessage2 = GClass2247;
global using GCreateInstance16 = GClass2249;
global using MedEffectStatusCommandMessage = GClass2250;
global using GCreateInstance18 = GClass2251;
global using PhysicalParametersCommandMessage = GClass2252;
global using GCreateInstance20 = GClass2253;
global using GCreateInstance21 = GClass2254;
global using SetAnimatorLayerWeightCommand = GClass2255;
global using EmptyHandsCommand = GClass2256;
global using SetLeftStanceCommandMessage = GClass2257;
global using CommandMessage = GClass2258;
global using UnderRoofStatusMessage = GClass2259;
global using VoiceMuffledStatusMessage = GClass2260;
global using SkillsParamsCommandMessage = GClass2262;
global using ContentMessage = GClass2263;
global using GCommandMessage = GClass2265;
global using GCommandMessage1 = GClass2266;
global using GCreateInstance23 = GClass2267;
global using GCreateInstance24 = GClass2268;
global using TemperatureCommandMessage = GClass2269;
global using GCommandMessage5 = GClass2270;
global using GCreateInstance26 = GClass2272;
global using GCreateInstance27 = GClass2273;
global using GCreateInstance28 = GClass2277;
global using GCreateInstance29 = GClass2306;
global using CreateInstanceValue = GClass2320;
global using ArmorInfo = GClass2323;
global using GCreateInstance32 = GClass2326;
global using GCreateInstance33 = GClass2327;
global using GCreateInstance34 = GClass2328;
global using GCreateInstance35 = GClass2329;
global using GCreateInstance43 = GClass2330;
global using GCreateInstance44 = GClass2331;
global using GCreateInstance45 = GClass2332;
global using GCreateInstance46 = GClass2333;
global using GCreateInstance47 = GClass2334;
global using GCreateInstance48 = GClass2335;
global using GCreateInstance49 = GClass2336;
global using GCreateInstance50 = GClass2337;
global using GCreateInstance51 = GClass2338;
global using GCreateInstance52 = GClass2339;
global using GCreateInstance53 = GClass2340;
global using GCreateInstance54 = GClass2341;
global using GCreateInstance55 = GClass2343;
global using GCreateInstance56 = GClass2345;
global using GCreateInstance57 = GClass2346;
global using GCreateInstance58 = GClass2347;
global using GCreateInstance59 = GClass2348;
global using GCreateInstance60 = GClass2349;
global using GCreateInstance61 = GClass2350;
global using GCreateInstance62 = GClass2351;
global using GCreateInstance63 = GClass2352;
global using GCreateInstance64 = GClass2353;
global using GCreateInstance65 = GClass2354;
global using GCreateInstance66 = GClass2355;
global using GCreateInstance67 = GClass2356;
global using GCreateInstance68 = GClass2357;
global using GCreateInstance69 = GClass2358;
global using GCreateInstance70 = GClass2359;
global using GCreateInstance71 = GClass2360;
global using GCreateInstance72 = GClass2361;
global using GCreateInstance73 = GClass2362;
global using GCreateInstance74 = GClass2363;
global using GCreateInstance75 = GClass2364;
global using GCreateInstance76 = GClass2365;
global using GCreateInstance77 = GClass2366;
global using GCreateInstance78 = GClass2367;
global using GCreateInstance79 = GClass2368;
global using GCreateInstance80 = GClass2369;
global using AnimationStateHashDictionary = GClass2370;
global using BundleAnimationBones = GClass2371;
global using CreateInstance = GClass2374;
global using ObservedPlayerControllers = GClass2375;
global using AbstractCreateInstance = GClass2380;
global using GCreateInstance36 = GClass2381;
global using GCreateInstance37 = GClass2382;
global using GCreateInstance38 = GClass2383;
global using GCreateInstance39 = GClass2384;
global using GCreateInstance40 = GClass2385;
global using GCreateInstance41 = GClass2386;
global using GCreateInstance42 = GClass2387;
global using HandsController = GClass2388;
global using PlayerInfoContainer = GClass2391;
global using GProfile2 = GClass2392;
global using GInventoryProfileSkillInfo = GClass2392.GClass2393;
global using PlayerCullingController = GClass2401;
global using GDisabled1 = GClass2401.EMode;
global using WithCompleteByTimeout = GClass2402;
global using AHealthController = GClass2428<IEffect>;
global using AbstractHealth = GClass2429;
global using AbstractCreate = GClass2429.GClass2432;
global using BuffSettings = GClass2436.GClass2461.GClass2462;
global using GetMildMusclePainSettings = GClass2436.GClass2467;
global using GDescription = GClass2472;
global using Effect1 = GClass2473;
global using GHealthValue = GClass2479;
global using NetworkTransport1 = GClass2480;
global using RemoteEndPoint = GClass2481;
global using Configuration1 = GClass2483;
global using Connection1 = GClass2484;
global using GMessage1 = GClass2496;
global using AbstractAiCoreAgentM = GClass25;
global using Socket1 = GClass2504;
global using GTarget80 = GClass2505;
global using NotesManager = GClass2506;
global using AmmoPack = GClass2507;
global using ReadonlyItemComponent1 = GClass2508;
global using StashGrid = GClass2511;
global using GInventoryError3 = GClass2511.GClass3305;
global using GInventoryError4 = GClass2511.GClass3306;
global using GInventoryError5 = GClass2511.GClass3307;
global using GInventoryError6 = GClass2511.GClass3308;
global using GInventoryError7 = GClass2511.GClass3309;
global using GInventoryError8 = GClass2511.GClass3310;
global using GridContainer = GClass2514;
global using GridItemCollection1 = GClass2516;
global using Result1 = GClass2521;
global using ArmorSlot = GClass2523;
global using BaseBrain1 = GClass253;
global using FastAccess = GClass2531;
global using GItemTemplate = GClass2533;
global using BaseBrain2 = GClass254;
global using GItemTemplate1 = GClass2544;
global using ParentTemplate = GClass2545;
global using BaseBrain3 = GClass255;
global using GModTemplate = GClass2557;
global using GModTemplate1 = GClass2558;
global using BaseBrain4 = GClass256;
global using BaseBrain5 = GClass257;
global using GModTemplate2 = GClass2581;
global using BaseBrain7 = GClass259;
global using GModTemplate3 = GClass2590;
global using BaseBrain8 = GClass260;
global using GWeaponTemplate = GClass2604;
global using GWeaponTemplate1 = GClass2605;
global using GWeaponTemplate2 = GClass2606;
global using GWeaponTemplate3 = GClass2607;
global using GWeaponTemplate4 = GClass2608;
global using GWeaponTemplate5 = GClass2609;
global using BaseBrain9 = GClass261;
global using GWeaponTemplate6 = GClass2610;
global using GWeaponTemplate7 = GClass2611;
global using GWeaponTemplate8 = GClass2612;
global using GWeaponTemplate9 = GClass2613;
global using GWeaponTemplate10 = GClass2614;
global using GItemTemplate3 = GClass2618;
global using BaseBrain10 = GClass262;
global using GItemTemplate4 = GClass2621;
global using GItemTemplate5 = GClass2623;
global using GItemTemplate6 = GClass2624;
global using BaseBrain11 = GClass263;
global using GItemTemplate9 = GClass2631;
global using GItemTemplate10 = GClass2637;
global using GItemTemplate11 = GClass2639;
global using AbstractBaseBrain = GClass264;
global using GItemTemplate13 = GClass2641;
global using ArmorPlate = GClass2646;
global using BaseBrain12 = GClass267;
global using BaseBrain13 = GClass268;
global using UnderbarrelWeapon = GClass2681;
global using BaseBrain14 = GClass269;
global using BaseBrain15 = GClass270;
global using GWeapon4 = GClass2702;
global using GWeapon5 = GClass2705;
global using GWeapon6 = GClass2706;
global using GWeapon7 = GClass2707;
global using GWeapon8 = GClass2708;
global using GWeapon9 = GClass2709;
global using BaseBrain16 = GClass271;
global using GWeapon10 = GClass2710;
global using GWeapon11 = GClass2711;
global using GWeapon12 = GClass2712;
global using GWeapon13 = GClass2713;
global using Installed = GClass2717;
global using BaseBrain17 = GClass272;
global using GItem3 = GClass2728;
global using FindCultistAmulet = GClass2729;
global using BaseBrain18 = GClass273;
global using GItem6 = GClass2733;
global using GItem7 = GClass2736;
global using GItem8 = GClass2737;
global using BaseBrain19 = GClass274;
global using RepairKit = GClass2743;
global using GItem11 = GClass2744;
global using MarkOfUnknown = GClass2746;
global using MergeableItem = GClass2749;
global using GAbstractBaseBrain = GClass275;
global using GItem13 = GClass2752;
global using GItem15 = GClass2754;
global using Component1 = GClass2768;
global using GInventoryController1 = GClass2776;
global using GInventoryController = GClass2777;
global using InventoryController = GClass2778;
global using GLocation = GClass2780;
global using SlotItemAddress = GClass2781;
global using StackSlotItemAddress = GClass2782;
global using GridItemAddress = GClass2783;
global using FromGridLocationAndSize = GClass2787;
global using AddResult = GClass2796;
global using DiscardResult = GClass2797;
global using ChangeVersionResult = GClass2798;
global using RemoveOldAmmoResult = GClass2799;
global using BaseBrain20 = GClass280;
global using GReward = GClass2800;
global using ResizeResult = GClass2801;
global using LoadMegResult = GClass2804;
global using BaseBrain21 = GClass281;
global using TransferResult = GClass2810;
global using BaseBrain22 = GClass282;
global using AbstractItemContext = GClass2827;
global using BaseBrain23 = GClass283;
global using CreateChildFrom = GClass2831;
global using Context1 = GClass2834;
global using IRealSelector = GClass2834.GInterface351;
global using GSourceContext = GClass2835;
global using IGISelectionContext = GClass2835.GInterface350;
global using GItemContext1 = GClass2837;
global using RepairItemContext = GClass2838;
global using ItemContext = GClass2839;
global using BaseBrain24 = GClass284;
global using GSourceContext1 = GClass2840;
global using GSourceContext3 = GClass2841;
global using GItemContext3 = GClass2842;
global using AbstractCreateBuildManipulation = GClass2843;
global using CreateOtherManipulation = GClass2844;
global using ToBaseInventoryCommand = GClass2847;
global using BaseBrain25 = GClass285;
global using AbstractInventoryOperation = GClass2851;
global using AbstractInventoryOperation2 = GClass2852;
global using MoveInternalOperation = GClass2853;
global using BaseBrain26 = GClass286;
global using BaseBrain27 = GClass287;
global using ExamineOperation = GClass2871;
global using FoldOperation = GClass2872;
global using AbstractAmmoManipulationOperation = GClass2875;
global using BaseBrain28 = GClass288;
global using ToggleItem = GClass2889;
global using BaseBrain29 = GClass289;
global using Handbook = GClass2899;
global using BaseBrain30 = GClass290;
global using ChildNode = GClass2902;
global using AbstractPassedEvent = GClass2903;
global using GBaseSyncEvent = GClass2904;
global using GoInEvent = GClass2905;
global using ZoneEvent = GClass2906;
global using KickSoon = GClass2906.EZoneState;
global using InvokedEvent = GClass2907;
global using GTpEvent = GClass2909;
global using GAbstractBaseBrain1 = GClass291;
global using GInvokedEvent1 = GClass2913;
global using PlayerEnteredZone = GClass2913.EZoneEventType;
global using FlareEvent = GClass2914;
global using HeadphonesUpdateEvent = GClass2915;
global using GInvokedEvent3 = GClass2916;
global using IsEntering = GClass2916.EInteractState;
global using GInvokedEvent2 = GClass2917;
global using GInvokedEvent6 = GClass2918;
global using GInvokedEvent = GClass2919;
global using GRaisedEvent2 = GClass2920;
global using GRaisedEvent1 = GClass2921;
global using GInvokedEvent4 = GClass2922;
global using TpEvent = GClass2925;
global using FiredEvent = GClass2926;
global using GCalledEvent = GClass2927;
global using RaisedEvent = GClass2928;
global using News1 = GClass2928.EBtrNewsDialogState;
global using NoQuests = GClass2928.EDialogState;
global using StateEvent = GClass2929;
global using FollowerLogic = GClass293;
global using SeasonChangedEvent = GClass2930;
global using BlendEvent = GClass2931;
global using RoomChangedEvent = GClass2932;
global using SpawnPoints = GClass2946;
global using SpawnSystemFactory = GClass2947;
global using GFollowerLogic = GClass295;
global using Bool1 = GClass2952.Struct793.EValueType;
global using GetAnyCustomizationItem = GClass2954;
global using Clothing = GClass2955;
global using GetSuite = GClass2956;
global using GetVoice = GClass2959;
global using GGetIcon = GClass2960;
global using GAbstractInvoke = GClass2963;
global using GExfiltrationRequirement = GClass2971;
global using GExfiltrationRequirement1 = GClass2972;
global using GExfiltrationRequirement2 = GClass2973;
global using GExfiltrationRequirement3 = GClass2974;
global using GExfiltrationRequirement4 = GClass2975;
global using GExfiltrationRequirement5 = GClass2976;
global using GExfiltrationRequirement6 = GClass2977;
global using KeyInteractionResult = GClass2982;
global using AbstractCreateReferenceTree = GClass2984;
global using BetterPoint = GClass299;
global using GAbstractCreateReferenceTree = GClass2991;
global using SetupInfo = GClass2995;
global using ShotResults = GClass3006;
global using Flying = GClass3006.EBulletState;
global using Calculator = GClass3007;
global using PrimaryManifest = GClass3009;
global using Manager1 = GClass3010;
global using LoadScene = GClass3017;
global using Action1 = GClass3025;
global using InteractionStates = GClass3026;
global using Segment1 = GClass306;
global using NoCompatibleAmmo = GClass3061.EMagInteraction;
global using PresetManager = GClass3062.EMagPresetInteraction;
global using GetContextInteractions = GClass3064;
global using CopyId = GClass3068.EOfferIdContextInteraction;
global using Interaction5 = GClass3069;
global using GInit = GClass3070;
global using GetNextPoint = GClass308;
global using NewOfferContext = GClass3087;
global using AssaultBuilding = GClass31;
global using CustomYieldInstruction = GClass3101;
global using GCustomYieldInstruction = GClass3102;
global using GShow = GClass3103;
global using Show = GClass3105;
global using GShow2 = GClass3106;
global using ShowEditBuildNameWindow = GClass3107;
global using RowInfo = GClass3110;
global using QuestChangePriceInfos = GClass3111;
global using KeyBinding = GClass3113;
global using EffectObserver = GClass3118;
global using TreatmentWrapper = GClass3119;
global using Section1 = GClass3123;
global using CoverSearchData1 = GClass316;
global using CoverSearchDefenceData = GClass317;
global using PositionPoint = GClass318;
global using MatchmakerPlayersController = GClass3185;
global using BannerWithToggle = GClass3187;
global using Dialog = GClass3190;
global using MessageData = GClass3192;
global using GesturesStorage = GClass3193;
global using GesturesCommands = GClass3194;
global using GetInsurePrice = GClass3195;
global using EnemyBuilding = GClass32;
global using EquipmentBuild = GClass3200;
global using BuildsStorage = GClass3201;
global using FindByName = GClass3202;
global using Ragfair = GClass3209;
global using GAvailable1 = GClass3209.ERagFairStatus;
global using FilterWindow = GClass3209.ESetFilterSource;
global using DoNotUpdate = GClass3209.EUpdatePagesStatus;
global using DataDebug = GClass321;
global using Filter1 = GClass3211;
global using RagfairSearch = GClass3214;
global using AbstractOfferData = GClass3215;
global using ReadOnlyDictionary1 = GClass3219;
global using QuestController = GClass3224;
global using QuestControllerSIT = GClass3225;
global using GCondition = GClass3233;
global using TaskConditionCounter = GClass3237;
global using GAICorePointLink1 = GClass325;
global using ConditionProgressChecker = GClass3250;
global using Reward = GClass3264;
global using NewQuest = GClass3267;
global using ExistingTemplate = GClass3275;
global using GBeginSampleWithToken = GClass3276.GStruct409;
global using ReleaseBeginSampleWithToken = GClass3276.GStruct410;
global using BundleLoaderProgress = GClass3281<GStruct119>;
global using GoalBuilding = GClass33;
global using AbstractError = GClass3303;
global using GInventoryError9 = GClass3311;
global using GInventoryError10 = GClass3312;
global using GInventoryError11 = GClass3313;
global using GInventoryError12 = GClass3314;
global using GInventoryError13 = GClass3315;
global using GInventoryError14 = GClass3316;
global using GInventoryError15 = GClass3317;
global using GInventoryError16 = GClass3318;
global using GInventoryError17 = GClass3319;
global using GInventoryError18 = GClass3320;
global using GInventoryError19 = GClass3321;
global using GInventoryError20 = GClass3322;
global using GInventoryError21 = GClass3323;
global using GInventoryError22 = GClass3324;
global using GInventoryError23 = GClass3325;
global using GInventoryError37 = GClass3339;
global using GInventoryError38 = GClass3340;
global using GInventoryError39 = GClass3341;
global using GInventoryError40 = GClass3342;
global using GInventoryError41 = GClass3343;
global using BotController = GClass336;
global using GError20 = GClass3364;
global using GError21 = GClass3365;
global using GError22 = GClass3366;
global using JobYield = GClass3371;
global using Begin = GClass3371.GStruct417;
global using FilteredNodes = GClass3376;
global using ResultCache = GClass338;
global using Quests = GClass3381;
global using Offers = GClass3383;
global using Conditions = GClass3387;
global using AssaultHaveEnemy = GClass34;
global using ToDoubleVector4 = GClass3414;
global using GetConnector = GClass344;
global using PairData = GClass345;
global using AvoidDanger = GClass35;
global using AbstractBaseReachablEditor = GClass350;
global using WayStarCalc = GClass352;
global using GCreate6 = GClass357;
global using BoarGrenadeDanger = GClass36;
global using DataWarn = GClass360;
global using ABossLogic1 = GClass362;
global using ABossLogic2 = GClass363;
global using ABossLogic3 = GClass364;
global using Gluhar = GClass366;
global using ABossLogic5 = GClass367;
global using BaseBTR = GClass37;
global using GBossData = GClass370;
global using ABossLogic7 = GClass371;
global using BossData = GClass372;
global using ABossLogic9 = GClass373;
global using BossKojaniy = GClass375;
global using SectantPriest = GClass376;
global using ABossLogic10 = GClass377;
global using ABossLogic11 = GClass378;
global using ABossLogic12 = GClass379;
global using SuppressBTR = GClass38;
global using ABossLogic13 = GClass380;
global using BossWarnData1 = GClass382;
global using BotFollower1 = GClass383;
global using BotFollower2 = GClass384;
global using GoalTarget = GClass388;
global using GCreate8 = GClass389;
global using BotReload2 = GClass391;
global using BotReload3 = GClass392;
global using BotReload4 = GClass393;
global using BotReload5 = GClass394;
global using BotWeaponSelector1 = GClass396;
global using BotSearchData1 = GClass398;
global using BotSearchData2 = GClass399;
global using BotEnemyChooser1 = GClass400;
global using BotEnemyChooser2 = GClass401;
global using BotEnemyChooser3 = GClass402;
global using BotEnemyChooser4 = GClass403;
global using BotEnemyChooser5 = GClass404;
global using BotEnemyChooser6 = GClass405;
global using BotEnemyChooser7 = GClass406;
global using BotEnemyChooser8 = GClass407;
global using FindPlaceToShoot = GClass408;
global using BoarClPatrol = GClass41;
global using BotMover1 = GClass417;
global using BotMover2 = GClass418;
global using BotMover3 = GClass419;
global using BoarPatrol = GClass42;
global using PathController = GClass421;
global using BotObserveData = GClass423;
global using BsBoarPatrol = GClass43;
global using BossPatrolMoveSimple = GClass431;
global using BossStayAtPlace = GClass434;
global using AbstractSuppressStationary1 = GClass437;
global using AbstractSuppressStationary2 = GClass438;
global using AbstractSuppressStationary3 = GClass439;
global using BotSubTactic1 = GClass441;
global using BotSubTactic2 = GClass442;
global using BotSubTactic3 = GClass443;
global using BotSubTactic4 = GClass444;
global using BotSubTactic5 = GClass445;
global using BotSubTactic6 = GClass446;
global using BotRandomPlanItemDropper1 = GClass448;
global using BossBoarFight = GClass45;
global using GBotAiming = GClass451;
global using TryToTalk = GClass456;
global using NextDecision = GClass458;
global using AIActionNodeAssigner = GClass459;
global using BoarSnEn = GClass46;
global using BotSearchPoint1 = GClass460;
global using EnemyInfo1 = GClass461;
global using EnemyInfo2 = GClass462;
global using CombineBotPath = GClass466;
global using GPositionPoint4 = GClass469;
global using FBoarFght = GClass47;
global using GPositionPoint5 = GClass470;
global using PatrolPointChooserBasic1 = GClass471;
global using PatrolPointChooserBasic2 = GClass473;
global using PatrolPointChooserBasic3 = GClass474;
global using PatrolPointChooserBasic4 = GClass475;
global using PatrolPointChooserBasic5 = GClass476;
global using PatrolPointChooserBasic6 = GClass477;
global using PatrolPointChooserBasic7 = GClass478;
global using Boarsntg = GClass48;
global using BullyLayer = GClass49;
global using GrenadeDangerPoint = GClass497;
global using GetLastSound = GClass498;
global using Killlogic = GClass50;
global using BotRequest1 = GClass504;
global using BotRequest3 = GClass505;
global using BotRequest4 = GClass506;
global using BotRequest5 = GClass507;
global using DoorOpenRequest = GClass508;
global using BotRequest7 = GClass509;
global using AbstractBotRequest = GClass510;
global using WarnPlayerRequest = GClass514;
global using BotAiming = GClass517;
global using GluharKilla = GClass52;
global using CheckVisibilityPart = GClass520;
global using LookAll = GClass521;
global using ScatteringSettingSettings = GClass527;
global using GCreate13 = GClass530;
global using GGetSettings = GClass532;
global using BossGlFight = GClass54;
global using BackendConfigManager = GClass548;
global using GluhAssKilla = GClass55;
global using IMakeTimer = GClass552.GInterface13;
global using Download = GClass554;
global using BackResponse = GClass557;
global using HttpConnection1 = GClass558.EConnectionType;
global using FlGlScout = GClass56;
global using ReqToSend = GClass561;
global using NonInitialized = GClass561.WsRequestStatus;
global using RequestJson = GClass562;
global using ResponseJson = GClass564;
global using PlayerLoopSystemHelpers = GClass567;
global using Last = GClass567.EOrderType;
global using Debug1 = GClass57;
global using EventsPriority = GClass578;
global using BossWaveManager = GClass579;
global using GFollowPlayer = GClass58;
global using TrySpawnFreeInner = GClass583;
global using Khorovod = GClass59;
global using Position1 = GClass590;
global using CreationData = GClass591;
global using GetProfileData = GClass592;
global using GGetProfileData1 = GClass595;
global using GGetProfileData2 = GClass596;
global using ObdPtrl = GClass60;
global using DebugCollector = GClass606;
global using AbstractLogger = GClass614;
global using LogHandler = GClass614.Class361;
global using Logger1 = GClass619;
global using GEndInvoke1 = GClass627;
global using PlayerSpawned = GClass627.ActionId;
global using BirdHold = GClass63;
global using AbstractCreateLogConfigurator = GClass638;
global using GCreate30 = GClass639;
global using PtrlBirdEye = GClass64;
global using GCreate31 = GClass640;
global using Container1 = GClass642.GClass643;
global using GScheduled = GClass648.GStruct30;
global using GMonoBehaviour123 = GClass649.ColliderSync;
global using FixedUpdate = GClass649.GClass650.UpdateModeType;
global using GClass649VolumePropagationAndEnvironmentSwitcherTriggers = GClass649.GClass653.EWorldType;
global using AsyncData = GClass649.GClass653.GClass658;
global using KnightFight = GClass65;
global using ObjectInHandsAnimator2 = GClass662;
global using PlayerFrame = GClass667;
global using ReadObservedPlayerFrame = GClass668;
global using BoarStationary = GClass67;
global using ReadPlayerStateInfo = GClass672;
global using ContainerCollectionView = GClass674;
global using GetViewForSlot = GClass674.GClass675;
global using CreateGrenadeFactory = GClass676;
global using ExURequest = GClass68;
global using Physical = GClass681;
global using PhysicalStamina = GClass681.GStruct36;
global using Base1 = GClass682.EConsumptionTarget;
global using OverweightIdle = GClass682.EConsumptionType;
global using GProne1 = GClass682.EPose;
global using PatrolFollower = GClass70;
global using LoadFromAsset = GClass701;
global using Help1 = GClass71;
global using GroupForce = GClass72;
global using Fullmappatrol = GClass73;
global using GetCounters = GClass733.GStruct45;
global using GetVisibilityChecker = GClass739;
global using Distance = GClass739.CheckType;
global using Gifter = GClass74;
global using GlGoal = GClass75;
global using WebClient1 = GClass751;
global using UnparsedData = GClass752;
global using HoldNearBoss = GClass76;
global using GLeft = GClass760.SideTurn;
global using GLeft1 = GClass761.ESideTurn;
global using BindTwoWaySettingDropDown = GClass767;
global using PeaceZrchPrtl = GClass77;
global using BSGUnityHelper = GClass772;
global using BSGMemoryGC = GClass773;
global using ABSTweenPlugin = GClass775;
global using RavangeZryachiy = GClass78;
global using TriangleFill = GClass782.GStruct54.NativeMeshRenderMode;
global using BackendConfigManagerConfig = GClass786;
global using BorrowWeaponAudioQueue = GClass793;
global using DebugOcclusionRayInfo = GClass799;
global using PrstSummon = GClass80;
global using GRepairKit = GClass803;
global using PriestPatrol = GClass81;
global using CreateConcaveBorder = GClass813;
global using BotCreator = GClass814;
global using GHealthController = GClass815;
global using GHoldOrCover = GClass82;
global using GetItemIcon = GClass822;
global using IconRequest = GClass825;
global using GLeft3 = GClass831.HintAlignment;
global using IQueueItem = GClass840.GInterface44;
global using AmpDiffAmpSpecFresnel = GClass842.LUTType;
global using Quadrant = GClass850;
global using DrawInstance = GClass855;
global using FolKojEnemy = GClass86;
global using KojaniyTarget = GClass87;
global using KsPartol = GClass88;
global using CullingObject1 = GClass887;
global using Sqrt = GClass893;
global using Random1 = GClass894;
global using PositiveDefinite = GClass894.DefinitenessType;
global using CreateLightStruct = GClass905.Class646;
global using FPS4 = GClass906.PerfRating;
global using KolontayFight = GClass91;
global using ProjectorHelper = GClass911;
global using GetDecalMesh = GClass913;
global using KlnSolo = GClass92;
global using GIdle2 = GClass920.ActionState;
global using Stay = GClass920.PoseState;
global using GSprint2 = GClass920.SpeedState;
global using GetInstance = GClass921;
global using Animation1 = GClass922.ESyncTime;
global using GCreate17 = GClass927;
global using GCreate18 = GClass928;
global using GCreate19 = GClass929;
global using SecurityKln = GClass93;
global using GInvitation = GClass931;
global using GChatRoomMember = GClass933;
global using RoomInformation = GClass934;
global using KolontayAP = GClass94;
global using GMessage = GClass941;
global using Dialogue = GClass944;
global using Invitation = GClass945;
global using SoundSettings = GClass957;
global using GSettingsGroupFactory1 = GClass958;
global using SettingsGroupFactory = GClass959;
global using KlnForceAtk = GClass96;
global using GSettingsGroupFactory2 = GClass960;
global using Automatic = GClass960.EAutoVaultingUseMode;
global using GDisabled = GClass960.EItemQuickUseMode;
global using GSettingsGroupFactory3 = GClass961;
global using ISerializer = GClass962.GInterface57;
global using JsonConverter1 = GClass966;
global using KlnTrg = GClass97;
global using AbstractObstructionCalculator = GClass978;
global using Malfunction = GClass98;
global using SourceContainer = GClass989;
global using MarksmanEnemy = GClass99;
global using BotEnemiesController1 = GControl0;
global using BotEnemiesController2 = GControl1;
global using GLeftStanceController = GControl2;
global using MulticastDelegate1 = GDelegate0;
global using GetYieldDelegate = GDelegate78;
global using GMonoBehaviour96 = GenericEventTranslator;
global using EventArgs1 = GEventArgs0;
global using TriggerEnter = GEventArgs0.ETriggerEventType;
global using GEventArgs118 = GEventArgs10;
global using GEventArgs119 = GEventArgs11;
global using GEventArgs120 = GEventArgs12;
global using GEventArgs121 = GEventArgs13;
global using GEventArgs122 = GEventArgs14;
global using GEventArgs123 = GEventArgs15;
global using GEventArgs124 = GEventArgs16;
global using GEventArgs125 = GEventArgs17;
global using GEventArgs126 = GEventArgs18;
global using GEventArgs127 = GEventArgs19;
global using GEventArgs110 = GEventArgs2;
global using GEventArgs128 = GEventArgs20;
global using GEventArgs111 = GEventArgs3;
global using GEventArgs112 = GEventArgs4;
global using GEventArgs113 = GEventArgs5;
global using GEventArgs114 = GEventArgs6;
global using GEventArgs115 = GEventArgs7;
global using GEventArgs116 = GEventArgs8;
global using GEventArgs117 = GEventArgs9;
global using GException01 = GException1;
global using InvalidMaxSize = GException11;
global using ArgumentException1 = GException12;
global using GException121 = GException13;
global using OperationCanceledException1 = GException17;
global using GException110 = GException2;
global using GException111 = GException3;
global using GException31 = GException4;
global using GException32 = GException5;
global using GException02 = GException6;
global using GException61 = GException7;
global using GetGiftTarget = GiftTarget;
global using IUpdatable = GInterface10;
global using IGIListener = GInterface100;
global using IListener = GInterface103;
global using IGIPlayer = GInterface106;
global using IMetrics = GInterface109;
global using IFilterCustomization = GInterface111;
global using IFrameIndexer1 = GInterface113;
global using IInteractive = GInterface114;
global using IGIHandler = GInterface117;
global using IGIHandler1 = GInterface118;
global using IGIHandler2 = GInterface119;
global using IKillable = GInterface12;
global using IGIHandler3 = GInterface120;
global using IGIHandler4 = GInterface121;
global using IGIHandler5 = GInterface122;
global using IGIHandler6 = GInterface123;
global using IGIHandler7 = GInterface124;
global using IGIHandler8 = GInterface125;
global using IGIHandler9 = GInterface126;
global using IGIHandler10 = GInterface127;
global using IGIHandler11 = GInterface128;
global using IGIHandler12 = GInterface129;
global using IGIHandler13 = GInterface130;
global using IGIHandler14 = GInterface131;
global using IHandsController = GInterface135;
global using IFirearms = GInterface139;
global using IUsableItemController = GInterface141;
global using IMedsController = GInterface142;
global using IGrenadeQuickUseController = GInterface145;
global using IQuickKnifeKickController = GInterface146;
global using IQuickUseController = GInterface147;
global using IInControl = GInterface154;
global using IProfileUpdater = GInterface155;
global using ICaptchaHandler = GInterface156;
global using ISession1 = GInterface157;
global using ISession4 = GInterface16;
global using ISession3 = GInterface161;
global using IPlayerInputTranslatorFactory = GInterface164;
global using IGrenadeInputTranslatorFactory = GInterface165;
global using IExchangeable = GInterface166;
global using IInputTree1 = GInterface170;
global using IGetAxisUpdater = GInterface172;
global using IRegisteredGenerator = GInterface175;
global using IEventSystemHandler1 = GInterface177;
global using IProfileCreator = GInterface18;
global using ISender = GInterface180;
global using IGIUIView = GInterface187;
global using IGIUIView1 = GInterface188;
global using ITarget = GInterface192;
global using ITrading = GInterface194;
global using IStateStorage = GInterface195;
global using IAnimationController = GInterface196;
global using IRepairer = GInterface198;
global using IPositionPoint1 = GInterface2;
global using IBotCreator = GInterface20;
global using IMetricsCollector = GInterface200;
global using IRaidCounter = GInterface201;
global using IExistingValue = GInterface202;
global using IGetSyncObjectStrategyByType = GInterface203;
global using IMovementContext = GInterface206;
global using IMovesModel = GInterface224;
global using IKinematicModel = GInterface229;
global using IObstacleCalculatorModel = GInterface230;
global using ICloneCommand = GInterface234;
global using IContext = GInterface236;
global using IStart = GInterface237;
global using IEventsConsumer = GInterface24;
global using IStimulatorBuff = GInterface242;
global using IEffect2 = GInterface243;
global using IEffect3 = GInterface244;
global using IEffect4 = GInterface255;
global using IEffect5 = GInterface256;
global using IEffect6 = GInterface257;
global using IEffect7 = GInterface258;
global using IEffect8 = GInterface259;
global using ISeasonsController = GInterface26;
global using IEffect9 = GInterface260;
global using IEffect10 = GInterface261;
global using IEffect11 = GInterface262;
global using IEffect12 = GInterface263;
global using IEffect13 = GInterface264;
global using IEffect14 = GInterface265;
global using IEffect15 = GInterface266;
global using IEffect16 = GInterface267;
global using IEffect17 = GInterface268;
global using IEffect18 = GInterface269;
global using IStaticLootSpawns = GInterface27;
global using IEffect19 = GInterface270;
global using IEffect20 = GInterface271;
global using IEffect21 = GInterface272;
global using IEffect22 = GInterface273;
global using IEffect23 = GInterface274;
global using IEffect24 = GInterface275;
global using IEffect25 = GInterface276;
global using IEffect26 = GInterface277;
global using IEffect27 = GInterface278;
global using IEffect28 = GInterface279;
global using IEffect29 = GInterface280;
global using IEffect30 = GInterface281;
global using IEffect31 = GInterface282;
global using IEffect32 = GInterface283;
global using IEffect33 = GInterface284;
global using IEffect34 = GInterface285;
global using IEffect35 = GInterface286;
global using IEffect36 = GInterface287;
global using IEffect37 = GInterface288;
global using IEffect38 = GInterface289;
global using IEffect39 = GInterface290;
global using IEffect40 = GInterface291;
global using IEffect1 = GInterface292;
global using IEffect41 = GInterface293;
global using IEffect42 = GInterface294;
global using IEffect43 = GInterface295;
global using IExplosiveItemTemplate = GInterface299;
global using IApplicable = GInterface320;
global using IItemComponent1 = GInterface325;
global using IGIInventoryController = GInterface327;
global using IProfile = GInterface328;
global using IItemController = GInterface329;
global using IIdGenerator = GInterface335;
global using IWeapon = GInterface336;
global using IOperationResult = GInterface337;
global using IPopNewAmmoResult = GInterface338;
global using IRepairStrategy = GInterface34;
global using IDestroyResult = GInterface340;
global using IGIOperationResult = GInterface346;
global using IFavoriteComponent = GInterface349;
global using IStrategy = GInterface35;
global using IAbstractOperation = GInterface352;
global using IOneItemOperation = GInterface353;
global using IEventObject = GInterface357;
global using IDataContainer = GInterface364;
global using IMapEditable = GInterface368;
global using IRandoms = GInterface370;
global using IBallisticsCalculator = GInterface371;
global using IAssetsManager = GInterface372;
global using IAssetPool = GInterface373;
global using IRoleModel = GInterface374;
global using IGetSideSelectionScreenController = GInterface378;
global using IGetSetNicknameScreenController = GInterface379;
global using IGetWelcomeScreenController = GInterface380;
global using IGetLoginScreenController = GInterface383;
global using IModdingScreen = GInterface384;
global using IViewFactory = GInterface386;
global using IGIGetLoginScreenController = GInterface392;
global using IHealthObserver = GInterface393;
global using IFactorObserver = GInterface394;
global using IMatchmakerPlayersController = GInterface398;
global using IGIContainer = GInterface399;
global using IMaterial = GInterface40;
global using IBundleLoader = GInterface402;
global using IConditional = GInterface404;
global using IGIUIView2 = GInterface405;
global using IInvoke = GInterface407;
global using IGetAwaiter = GInterface408;
global using IHandler = GInterface412;
global using IEasyAssets = GInterface417;
global using IInternalUpdateAxis = GInterface421;
global using IVisual = GInterface45;
global using IRenderer = GInterface47;
global using ICullableObject = GInterface50;
global using ITextureMaskHolder = GInterface52;
global using IProvider = GInterface55;
global using IPositionPoint2 = GInterface6;
global using ISuspensionController = GInterface61;
global using ISpeaker = GInterface64;
global using ICreateSampleSet = GInterface72;
global using ISampleSetFactory = GInterface73;
global using ICreateSamplingTaskResult = GInterface74;
global using ISamplingProvider = GInterface75;
global using IExtension = GInterface77;
global using IBossLogic = GInterface8;
global using IGetConverter = GInterface82;
global using IPlayableAnimator = GInterface83;
global using ICuller = GInterface84;
global using ILayerProcessor = GInterface85;
global using IMeasureStatistics = GInterface86;
global using IBitReader = GInterface87;
global using IReader = GInterface88;
global using IStream1 = GInterface89;
global using IWriterStream = GInterface91;
global using IOriginalNode = GInterface93;
global using IParametersCache = GInterface94;
global using IBlendParamsKeeper = GInterface95;
global using IGIStateBehaviour = GInterface97;
global using GMonoBehaviour164 = GizmoDrawer;
global using GMonoBehaviour316 = Glitch;
global using GMonoBehaviour47 = GlobalColliderBoundsZone;
global using GMonoBehaviour17 = GpuGraphTest;
global using MonoBehaviour69 = GPUInstancer.AddRemoveInstances;
global using MonoBehaviour70 = GPUInstancer.AddRuntimeCreatedGameObjects;
global using MonoBehaviour73 = GPUInstancer.AstroidGenerator;
global using GetBillboardAtlasBinding = GPUInstancer.BillboardAtlasBinding;
global using High3 = GPUInstancer.BillboardQuality;
global using MonoBehaviour78 = GPUInstancer.ColorPicker;
global using MonoBehaviour71 = GPUInstancer.ColorVariations;
global using MonoBehaviour72 = GPUInstancer.DetailDemoSceneController;
global using FPMode = GPUInstancer.DetailDemoSceneController.CameraModes;
global using GHigh4 = GPUInstancer.DetailDemoSceneController.QualityMode;
global using MonoBehaviour81 = GPUInstancer.FlyCamera;
global using MonoBehaviour79 = GPUInstancer.FPController;
global using MonoBehaviour80 = GPUInstancer.FPS;
global using X128 = GPUInstancer.GPUIComputeThreadCount;
global using MatrixAppend = GPUInstancer.GPUIMatrixHandlingType;
global using GetDefaultGPUInstancerBillboardAtlasBindings = GPUInstancer.GPUInstancerBillboardAtlasBindings;
global using MonoBehaviour86 = GPUInstancer.GPUInstancerCameraHandler;
global using GPUInstancerTerrainManager1 = GPUInstancer.GPUInstancerDetailManager;
global using GPUInstancerPrototype1 = GPUInstancer.GPUInstancerDetailPrototype;
global using MonoBehaviour87 = GPUInstancer.GPUInstancerDrawCallColorDebugger;
global using DetailInitializationFinished = GPUInstancer.GPUInstancerEventType;
global using MonoBehaviour88 = GPUInstancer.GPUInstancerFloatingOriginHandler;
global using MonoBehaviour89 = GPUInstancer.GPUInstancerGUIInfo;
global using MonoBehaviour90 = GPUInstancer.GPUInstancerHiZOcclusionGenerator;
global using MonoBehaviour91 = GPUInstancer.GPUInstancerInstanceRemover;
global using MonoBehaviour92 = GPUInstancer.GPUInstancerLODColorDebugger;
global using AbstractMonoBehaviour8 = GPUInstancer.GPUInstancerManager;
global using MonoBehaviour100 = GPUInstancer.GPUInstancerMapMagicIntegration;
global using MonoBehaviour93 = GPUInstancer.GPUInstancerModificationCollider;
global using MonoBehaviour94 = GPUInstancer.GPUInstancerPrefab;
global using MonoBehaviour95 = GPUInstancer.GPUInstancerPrefabListRuntimeHandler;
global using GPUInstancerManager1 = GPUInstancer.GPUInstancerPrefabManager;
global using DefineGameObjectAsPrefabPrototypeAtRuntime = GPUInstancer.GPUInstancerPrefabPrototype;
global using MonoBehaviour96 = GPUInstancer.GPUInstancerPrefabRuntimeHandler;
global using AbstractScriptableObject1 = GPUInstancer.GPUInstancerPrototype;
global using GetDefaultGPUInstancerSettings = GPUInstancer.GPUInstancerSettings;
global using ScriptableObject22 = GPUInstancer.GPUInstancerSettingsExtension;
global using GetDefaultGPUInstancerShaderBindings = GPUInstancer.GPUInstancerShaderBindings;
global using AbstractGPUInstancerManager = GPUInstancer.GPUInstancerTerrainManager;
global using AddProxyToTerrain = GPUInstancer.GPUInstancerTerrainProxy;
global using ScriptableObject24 = GPUInstancer.GPUInstancerTerrainSettings;
global using GPUInstancerTerrainManager2 = GPUInstancer.GPUInstancerTreeManager;
global using GPUInstancerPrototype3 = GPUInstancer.GPUInstancerTreePrototype;
global using None5 = GPUInstancer.GPUInstancerTreeType;
global using CopyTexture = GPUInstancer.GPUIOcclusionCullingType;
global using OpenGLCore = GPUInstancer.GPUIPlatform;
global using MonoBehaviour98 = GPUInstancer.GrassInitialization;
global using MonoBehaviour82 = GPUInstancer.GrassMowerController;
global using MonoBehaviour99 = GPUInstancer.GrassPrefabVariant;
global using None6 = GPUInstancer.PrefabInstancingState;
global using MonoBehaviour76 = GPUInstancer.PrefabsWithoutGameObjects;
global using MonoBehaviour83 = GPUInstancer.ShieldImpact;
global using MonoBehaviour84 = GPUInstancer.SpaceshipCameraRig;
global using MonoBehaviour85 = GPUInstancer.SpaceshipController;
global using MonoBehaviour74 = GPUInstancer.SpaceshipMobileController;
global using MonoBehaviour75 = GPUInstancer.SpaceshipMobileJoystick;
global using MonoBehaviour68 = GPUInstancer.TerrainGenerator;
global using MonoBehaviour77 = GPUInstancer.TreeDemoSceneController;
global using GMonoBehaviour318 = GradingPostFX;
global using Deuteranopia = GradingPostFX.ColorBlindMode;
global using GMonoBehaviour191 = Gramophone;
global using GMonoBehaviour13 = GraphAnimation;
global using GMonoBehaviour14 = GraphChartFeed;
global using GMonoBehaviour16 = GraphManager;
global using Retrieve = GraphManager.GClass10;
global using DataPair = GraphManager.GStruct1;
global using GMonoBehaviour319 = GrassTrampler;
global using GImageEffectBase = GrayscaleEffect;
global using GReady = GrenadeActionType;
global using GMonoBehaviour131 = GrenadeCartridgeSettings;
global using GItem14 = GrenadeClass;
global using GetEmissionEffect = GrenadeEmission;
global using GMonoBehaviour320 = GrenadeFlashScreenEffect;
global using WeaponPrefab1 = GrenadePrefab;
global using ThrowableSettings1 = GrenadeSettings;
global using Frag = GrenadeSettings.CollisionSounds;
global using GMonoBehaviour266 = GridCellResizer;
global using GetClosestGrip = GripPose;
global using Common1 = GripPose.EGripType;
global using Left = GripPose.EHand;
global using GItemLabelsBase = GroupLabels;
global using GetClosest = GroupPoint;
global using FloatQuantizer = GStruct101;
global using ItemToComponentialItem = GStruct105;
global using TransformSync = GStruct106;
global using GResourceType = GStruct107;
global using DebugSpawnsData = GStruct11;
global using DisconnectInfo = GStruct115;
global using DisconnectionReason = GStruct117;
global using BundleLoaderProgressStruct = GStruct119;
global using GPacket3 = GStruct120;
global using PreviousPacket = GStruct126;
global using GPreviousPacket = GStruct127;
global using GPreviousPacket1 = GStruct128;
global using GPacket7 = GStruct129;
global using HeathsData = GStruct14;
global using ActorDataStruct = GStruct16;
global using Client2ServerPacket = GStruct163;
global using LightsStates = GStruct164;
global using ScopeStates = GStruct165;
global using MovementInfoPacket = GStruct166;
global using FromSnapshot = GStruct167;
global using PacketItemInteraction = GStruct168;
global using InteractWithBtrPacket = GStruct169;
global using SwPacket = GStruct170;
global using Occupy = GStruct170.EStationaryCommand;
global using PlantItemPacket = GStruct171;
global using VaultingPacket = GStruct172;
global using LootInteractionPacket = GStruct174;
global using GDeserialize = GStruct176;
global using GDeserialize1 = GStruct177;
global using GDeserialize2 = GStruct178;
global using HandsChangePacket = GStruct179;
global using FastDrop = GStruct179.EOperationType;
global using GetDebugData = GStruct18;
global using FiredShotInfo = GStruct180;
global using FireModePacket = GStruct181;
global using GPacket11 = GStruct183;
global using GTacticalComboStatus = GStruct184;
global using GPacket12 = GStruct185;
global using GPacket13 = GStruct186;
global using GTacticalComboStatus1 = GStruct187;
global using FirearmPacket = GStruct188;
global using GPacket14 = GStruct189;
global using InfoStruct = GStruct19;
global using ReloadMagPacket = GStruct190;
global using QuickReloadMagPacket = GStruct191;
global using GPacket15 = GStruct192;
global using RollCylinderPacket = GStruct193;
global using MagStatus = GStruct194;
global using ReloadWithAmmoPacket = GStruct195;
global using StartReload = GStruct195.EReloadWithAmmoStatus;
global using InventoryCommandPacket = GStruct197;
global using GFootprint = GStruct200;
global using GCreate3 = GStruct201;
global using GCreate27 = GStruct202;
global using Footprint = GStruct203;
global using SelfPlayerInfo = GStruct204;
global using SkillPacket = GStruct209;
global using PatrolTarget = GStruct21;
global using GPrevFrame2 = GStruct216;
global using ConditionalData = GStruct223;
global using GCondition2 = GStruct224;
global using ArmorResistanceData = GStruct23;
global using Preset3 = GStruct231;
global using DisplaySettings = GStruct237;
global using GGetPreset = GStruct238;
global using Extend = GStruct240;
global using OldData = GStruct241;
global using Reference1 = GStruct243;
global using DialogData = GStruct245;
global using DialogContext = GStruct246;
global using LineConstructor = GStruct247;
global using QuestionMark = GStruct248.EDialogLiteIconType;
global using GProfile1 = GStruct248.ESaveStateType;
global using SaveData = GStruct248.GStruct249;
global using NewSize = GStruct25;
global using InterpolatedParameters = GStruct254;
global using NewModel = GStruct260;
global using DataModel = GStruct265;
global using GFromSnapshot = GStruct276;
global using GMessage2 = GStruct277;
global using ProcessCommand = GStruct278;
global using CompletedInstance = GStruct280;
global using GJobParallelFor8 = GStruct283;
global using ObservedUsableItemUpdatedData = GStruct284;
global using GJobParallelFor9 = GStruct285;
global using GNextModel1 = GStruct288;
global using NextModel = GStruct289;
global using JobParallelFor = GStruct29;
global using GJobParallelFor10 = GStruct290;
global using ArmorUpdate = GStruct314;
global using GPacket4 = GStruct315;
global using DeathPacket = GStruct316;
global using DHitInfo = GStruct318;
global using EmptyHandPacket = GStruct319;
global using GPacket17 = GStruct320;
global using ToEquipmentItemInfo = GStruct321;
global using ToInventorySyncPacket = GStruct322;
global using FlareShotInfo = GStruct323;
global using GrenadePacket = GStruct324;
global using GPacket19 = GStruct325;
global using GPacket18 = GStruct326;
global using HitInfo = GStruct327;
global using OperationStatus1 = GStruct328;
global using KnifeHitInfo = GStruct329;
global using KnifePacket = GStruct330;
global using GetShotInfo = GStruct334;
global using ShotTrajectoryPart = GStruct335;
global using GUpdate = GStruct336;
global using GPacket5 = GStruct338;
global using CreateDetailedInventoryHashSum = GStruct340;
global using UsableItemPacket = GStruct342;
global using HealthSyncPacket = GStruct347;
global using AddEffect = GStruct347.ESyncType;
global using MedEffect1 = GStruct347.GStruct348.EExtraDataType;
global using GetStatistics = GStruct367;
global using ContainerId = GStruct368;
global using ItemsCount = GStruct370;
global using FromItemAndSize = GStruct372;
global using GPacket8 = GStruct38;
global using SpawnSystemSettings = GStruct380;
global using WatchBundleInfo = GStruct381;
global using GetRelationByPosition = GStruct387;
global using GetBrokenWindowPiece = GStruct388;
global using GPacket9 = GStruct39;
global using ShotId = GStruct390;
global using ManagerSettings = GStruct394;
global using GetMoneyTuple = GStruct396;
global using Article = GStruct398;
global using GPacket10 = GStruct40;
global using OffersData = GStruct403;
global using GTest = GStruct404;
global using ChangeRequirement = GStruct405;
global using QuestChangeCost = GStruct406;
global using Packet = GStruct41;
global using SOperationResult = GStruct411;
global using Execute = GStruct413;
global using SetName = GStruct415;
global using ToPoint = GStruct418;
global using ToDoubleVector3 = GStruct419;
global using ChangeValue = GStruct51;
global using GetBodyRenderer = GStruct55;
global using Margins1 = GStruct57;
global using GJobParallelFor = GStruct69.Struct146;
global using GJobParallelFor1 = GStruct70.Struct149;
global using GCreate20 = GStruct74;
global using Emitter1 = GStruct75.ENodeType;
global using GetSample = GStruct76;
global using BakeParameters = GStruct77;
global using Query1 = GStruct78;
global using Destination = GStruct84;
global using ScaleToVector2Byte = GStruct87;
global using ScaleToVector2Short = GStruct88;
global using ScaleToVector3Byte = GStruct89;
global using ScaleToVector3Short = GStruct90;
global using DriftEma = GStruct91;
global using Quantized = GStruct93;
global using StartTimeInfo = GStruct96;
global using ResultStartBound = GStruct97;
global using MeasurementData = GStruct99;
global using GMonoBehaviour387 = GUIController;
global using GMonoBehaviour167 = GuidComponent;
global using GSerializationCallbackReceiver = GuidReference;
global using GMonoBehaviour85 = GUILabelDebugger;
global using GMonoBehaviour423 = HairRenderer;
global using GAbstractMonoBehaviour3 = HalloweenEffect;
global using GPoser = HandPoser;
global using Disabled = HBAO_Core.Deinterleaving;
global using AOOnly = HBAO_Core.DisplayMode;
global using BeforeImageEffectsOpaque = HBAO_Core.IntegrationStage;
global using PseudoPerlin = HBAO_Core.NoiseType;
global using GBuffer = HBAO_Core.PerPixelNormals;
global using FastestPerformance = HBAO_Core.Preset;
global using Lowest = HBAO_Core.Quality;
global using Quarter = HBAO_Core.Resolution;
global using GMonoBehaviour326 = HBAOControl;
global using GMonoBehaviour397 = HdrModeSwitcher;
global using GAbstractEffect = HealthControllerClass.GClass2433;
global using GMonoBehaviour321 = HeatEmitter;
global using GMonoBehaviour322 = HeatHazeEmitter;
global using ClientLocalGameWorld1 = HideoutGameWorld;
global using GMonoBehaviour323 = HighLightMesh;
global using GMonoBehaviour324 = HitCameraShaker;
global using GMonoBehaviour325 = HitCameraShakerTest;
global using GMonoBehaviour373 = HotObject;
global using GMonoBehaviour214 = HysteresisFilter;
global using ICreate = IBotAiming;
global using ISpawn = ICharacterController;
global using GMonoBehaviour177 = IconShadow;
global using IDoMedEffect = IEffect;
global using Authority2 = IKAuthority;
global using NothingToInsure = InsuranceCompanyClass.EInsuranceError;
global using PriceData = InsuranceCompanyClass.GStruct402;
global using GMonoBehaviour424 = InteractionReciver;
global using TryMerge = InteractionsHandlerClass.EMoveItemOrder;
global using GInventoryError45 = InteractionsHandlerClass.GClass3347;
global using GInventoryError46 = InteractionsHandlerClass.GClass3348;
global using GInventoryError47 = InteractionsHandlerClass.GClass3349;
global using GInventoryError48 = InteractionsHandlerClass.GClass3350;
global using GInventoryError49 = InteractionsHandlerClass.GClass3351;
global using GInventoryError50 = InteractionsHandlerClass.GClass3352;
global using GInventoryError51 = InteractionsHandlerClass.GClass3353;
global using GInventoryError52 = InteractionsHandlerClass.GClass3354;
global using GInventoryError53 = InteractionsHandlerClass.GClass3355;
global using GInventoryError54 = InteractionsHandlerClass.GClass3356;
global using GInventoryError55 = InteractionsHandlerClass.GClass3357;
global using GInventoryError56 = InteractionsHandlerClass.GClass3358;
global using GInventoryError57 = InteractionsHandlerClass.GClass3359;
global using LimitError = InteractionsHandlerClass.GClass3360;
global using GInventoryError59 = InteractionsHandlerClass.GClass3361;
global using GInventoryError60 = InteractionsHandlerClass.GClass3362;
global using Removal = InteractionsHandlerClass.ResizeAction;
global using GMonoBehaviour101 = InteractiveProxy;
global using GMonoBehaviour215 = InteractiveSubscriber;
global using Unknown = Interpolation.EBoundType;
global using GMonoBehaviour315 = InventoryBlur;
global using ItemOwner = InventoryControllerClass;
global using IPhysicsTrigger1 = IPhysicsTriggerWithStay;
global using IStateBehaviour = IPlayerStateContainerBehaviour;
global using IReadOnlyCollection1 = ISpawnPoints;
global using ICreateSpawnSystem = ISpawnSystem;
global using GParent2 = ItemClass;
global using GError12 = ItemFactory.GClass3295;
global using GError13 = ItemFactory.GClass3296;
global using FlatItemsToTree = ItemFactory.GStruct135;
global using GHorizontal2 = ItemRotation;
global using GMonoBehaviour260 = ItemSelectionDropdown;
global using GScriptableObject46 = ItemSounds;
global using GMonoBehaviour258 = ItemViewStats;
global using GAbstractMonoBehaviour1 = JointSpawner;
global using CURR = JsonType.EDateTime;
global using None8 = JsonType.EItemDropSoundType;
global using Rare1 = JsonType.ELootRarity;
global using CreateDefault = JsonType.LocationWeatherTime;
global using Blue1 = JsonType.TaxonomyColor;
global using Transport1 = kcp2k.KcpTransport;
global using AbstractActiveTransport = kcp2k.Transport;
global using DnsResolve = kcp2k.TransportError;
global using GMonoBehaviour202 = KibaIK;
global using StateMachineBehaviour1 = KillMultiThreadingStateMachineBehaviour;
global using MonoBehaviour50 = Koenigz.PerfectCulling.EFT.AdaptiveGridGenerationParams;
global using MonoBehaviour60 = Koenigz.PerfectCulling.EFT.AdaptiveGridProbe;
global using AutocullAutomated1 = Koenigz.PerfectCulling.EFT.AutocullLODGroupCell;
global using MonoBehaviour66 = Koenigz.PerfectCulling.EFT.Autotest.PerfectCullingAutoTestCamera;
global using MonoBehaviour67 = Koenigz.PerfectCulling.EFT.Autotest.PerfectCullingAutoTestController;
global using PerfectCullingCrossSceneContent1 = Koenigz.PerfectCulling.EFT.BakedLodContent;
global using PerfectCullingCrossSceneGroupPreProcess1 = Koenigz.PerfectCulling.EFT.BakedLodPreProcess;
global using PerfectCullingCrossSceneContent2 = Koenigz.PerfectCulling.EFT.CrossSceneContentPortals;
global using PerfectCullingCrossSceneGroupPreProcess2 = Koenigz.PerfectCulling.EFT.CrossSceneCullingGroupPreProcess;
global using PerfectCullingCrossSceneGroupPreProcess3 = Koenigz.PerfectCulling.EFT.CrossSceneCullingTreePreProcess;
global using BinarySerializable = Koenigz.PerfectCulling.EFT.CullingCellData;
global using MonoBehaviour52 = Koenigz.PerfectCulling.EFT.CullingGridContent;
global using PerfectCullingCrossSceneGroupPreProcess4 = Koenigz.PerfectCulling.EFT.CullingGridPreProcess;
global using BinarySerializable1 = Koenigz.PerfectCulling.EFT.CullingGroupData;
global using OccludeEverywhere = Koenigz.PerfectCulling.EFT.EOccludeBehaviour;
global using SharedOccluder1 = Koenigz.PerfectCulling.EFT.EOccludeMode;
global using Pick = Koenigz.PerfectCulling.EFT.EPickBehaviour;
global using EnableAlways = Koenigz.PerfectCulling.EFT.EShadowMode;
global using Last1 = Koenigz.PerfectCulling.EFT.ESharedOccluderLODMode;
global using TransparentAsOpaque = Koenigz.PerfectCulling.EFT.ETransparencyMode;
global using SamplingProviderBase3 = Koenigz.PerfectCulling.EFT.ExcludeBorderSamplingProvider;
global using MonoBehaviour61 = Koenigz.PerfectCulling.EFT.ExpandingBoxProbe;
global using Medium3 = Koenigz.PerfectCulling.EFT.LightMeshQuality;
global using MonoBehaviour53 = Koenigz.PerfectCulling.EFT.LightVolumeSettings;
global using GetLightSettings = Koenigz.PerfectCulling.EFT.LightVolumeSettings.LightSettings;
global using MonoBehaviour54 = Koenigz.PerfectCulling.EFT.MultisceneSharedOccluder;
global using BinarySerializable2 = Koenigz.PerfectCulling.EFT.OrientedBounds;
global using MonoBehaviour62 = Koenigz.PerfectCulling.EFT.PerfectCullingAdaptiveGrid;
global using ScriptableObject19 = Koenigz.PerfectCulling.EFT.PerfectCullingAdaptiveGridData;
global using MonoBehaviour51 = Koenigz.PerfectCulling.EFT.PerfectCullingAutoTestPreview;
global using AbstractMonoBehaviour6 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneContent;
global using PerfectCullingCrossSceneContent3 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneContentDoors;
global using PerfectCullingCrossSceneContent4 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneContentMeshes;
global using PerfectCullingCrossSceneContent5 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneContentTrees;
global using MonoBehaviour63 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneGroup;
global using AbstractMonoBehaviour7 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneGroupPreProcess;
global using MonoBehaviour64 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneSampler;
global using GJobParallelFor6 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneSampler.Class740.Struct181;
global using GJobParallelFor7 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneSampler.Class740.Struct182;
global using PerfectCullingBakingBehaviour1 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneVolume;
global using Stream1 = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneVolume.BakeDescriptor.LoadMode;
global using OutOfBounds = Koenigz.PerfectCulling.EFT.PerfectCullingCrossSceneVolume.GClass1058.EUpdateResult;
global using PerfectCullingCrossSceneGroupPreProcess5 = Koenigz.PerfectCulling.EFT.PerfectCullingDoorPreProcess;
global using PerfectCullingCrossSceneGroupPreProcess6 = Koenigz.PerfectCulling.EFT.PerfectCullingLightGroupPreProcess;
global using MonoBehaviour55 = Koenigz.PerfectCulling.EFT.PerfectCullingMaterialSettings;
global using MonoBehaviour56 = Koenigz.PerfectCulling.EFT.PerfectCullingPostProcess;
global using Create5 = Koenigz.PerfectCulling.EFT.PerfectCullingSuperSamplingVolume;
global using MonoBehaviour57 = Koenigz.PerfectCulling.EFT.PerfectCullingTerrain;
global using PerfectCullingCrossSceneGroupPreProcess7 = Koenigz.PerfectCulling.EFT.PerfectCullingTreePreProcess;
global using PerfectCullingCrossSceneGroupPreProcess8 = Koenigz.PerfectCulling.EFT.PortalsPreProcess;
global using MonoBehaviour58 = Koenigz.PerfectCulling.EFT.ScreenDistanceSwitcher;
global using Convert1 = Koenigz.PerfectCulling.EFT.StreamingVolumeBakeDataIndex;
global using AbstractScriptableObject = Koenigz.PerfectCulling.PerfectCullingBakeData;
global using GOther = Koenigz.PerfectCulling.PerfectCullingBakeGroup.GroupType;
global using AbstractMonoBehaviour4 = Koenigz.PerfectCulling.PerfectCullingBakingBehaviour;
global using MonoBehaviour47 = Koenigz.PerfectCulling.PerfectCullingCamera;
global using ScriptableObject15 = Koenigz.PerfectCulling.PerfectCullingColorTable;
global using MonoBehaviour49 = Koenigz.PerfectCulling.PerfectCullingExcludeVolume;
global using ScriptableObject16 = Koenigz.PerfectCulling.PerfectCullingResourcesLocator;
global using ScriptableObject17 = Koenigz.PerfectCulling.PerfectCullingSettings;
global using PerfectCullingBakeData1 = Koenigz.PerfectCulling.PerfectCullingVolumeBakeData;
global using AbstractMonoBehaviour5 = Koenigz.PerfectCulling.SamplingProviderBase;
global using SamplingProviderBase1 = Koenigz.PerfectCulling.SamplingProviders.ExcludeFloatingSamplingProvider;
global using SamplingProviderBase2 = Koenigz.PerfectCulling.SamplingProviders.ExcludeInnerVolumeSamplingProvider;
global using MonoBehaviour48 = Koenigz.PerfectCulling.TerrainToMeshUtility;
global using GMonoBehaviour53 = KojaniyTargetLoot;
global using GStateBehaviour1 = LActionState;
global using GMonoBehaviour332 = LaserBeam;
global using GMonoBehaviour133 = LauncherViauslController;
global using GMonoBehaviour216 = LevelBorder;
global using GMonoBehaviour117 = LevelPhysicsSettings;
global using GMonoBehaviour209 = LevelSettings;
global using GImageEffectBase1 = LightenEffect;
global using GMonoBehaviour218 = LightKeeperEyesBlinking;
global using GMonoBehaviour217 = LightKeeperEyeTargetFollower;
global using GLeft2 = LightKeeperEyeTargetFollower.EEditorToggleEye;
global using GMonoBehaviour284 = LightManager;
global using LightManager1 = LightManagerFogEllipsoids;
global using GMonoBehaviour398 = LightningController;
global using GAbstractMonoBehaviour5 = LightOverride;
global using HalloweenEffect2 = LightPillarEffect;
global using GMonoBehaviour168 = LightShadowCasterDistance;
global using CameraLightSwitcher1 = LightSwitcherOverkill;
global using GMonoBehaviour308 = LocalDustParticles;
global using GMonoBehaviour309 = LocalDustParticlesParent;
global using FindFreeSpace = LocationInGrid;
global using GMonoBehaviour108 = LocationScene;
global using Banner = LocationSettingsClass.Location.GClass1231;
global using Normal1 = LocationSettingsClass.Location.LocationRules;
global using GScriptableObject6 = LogConfigurationScriptableObject;
global using GScriptableObject7 = LoggingSettings;
global using GMonoBehaviour65 = LookDirections;
global using GGrass = LookObjectTypeAI;
global using GMonoBehaviour128 = LootableContainerDebug;
global using GContainerCollection = LootItemClass;
global using SerializeLootItem = LootItemPositionClass;
global using GMonoBehaviour109 = LootPointsGroup;
global using GClientApplication = LootTestApplication;
global using GMonoBehaviour400 = LowerRightAnchor;
global using GMonoBehaviour169 = LowpollicolliderFinder;
global using GImageEffectBase2 = LuminosityEffect;
global using GetCurrentMagazine = MagazineClass;
global using GInventoryError42 = MagazineClass.GClass3344;
global using GInventoryError43 = MagazineClass.GClass3345;
global using GInventoryError44 = MagazineClass.GClass3346;
global using GWeaponModPoolObject = MagVisualController;
global using GMonoBehaviour129 = MalfunctionDebug;
global using GMonoBehaviour335 = MaskAndShadow;
global using MasterNewWeapon = MasterSkillClass;
global using GUIElement1 = MatchmakerRaidSettingsSummaryView;
global using GMonoBehaviour159 = Materials;
global using GMonoBehaviour300 = MaterialStencilReplacer;
global using GItemTemplate7 = Meds2Class;
global using GItem9 = MedsClass;
global using GMonoBehaviour261 = MenuCameraResolutionFixer;
global using GMonoBehaviour254 = MenuPlayerPoser;
global using GIdle1 = MenuPlayerPoser.EMenuPlayerAnimationType;
global using GMonoBehaviour211 = MeshCombiner;
global using GMonoBehaviour441 = MeshProjector;
global using GMonoBehaviour213 = MgBelt;
global using GMonoBehaviour102 = MineDirectional;
global using ExplosiveItem = MineDirectional.MineSettings;
global using GMonoBehaviour103 = MineDirectionalColliders;
global using GMonoBehaviour110 = MirrorTransformChanges;
global using ParticleAffector1 = MirzaBeig.Scripting.Effects.AttractionParticleAffector;
global using ParticleForceField1 = MirzaBeig.Scripting.Effects.AttractionParticleForceField;
global using AbstractMonoBehaviour9 = MirzaBeig.Scripting.Effects.ParticleAffector;
global using MonoBehaviour102 = MirzaBeig.Scripting.Effects.ParticleAffectorMT;
global using MonoBehaviour104 = MirzaBeig.Scripting.Effects.ParticleFlocking;
global using AbstractMonoBehaviour10 = MirzaBeig.Scripting.Effects.ParticleForceField;
global using MonoBehaviour105 = MirzaBeig.Scripting.Effects.ParticleLights;
global using MonoBehaviour106 = MirzaBeig.Scripting.Effects.ParticlePlexus;
global using ParticleAffector2 = MirzaBeig.Scripting.Effects.TurbulenceParticleAffector;
global using MonoBehaviour103 = MirzaBeig.Scripting.Effects.TurbulenceParticleAffectorMT;
global using ParticleForceField2 = MirzaBeig.Scripting.Effects.TurbulenceParticleForceField;
global using ParticleAffector3 = MirzaBeig.Scripting.Effects.VortexParticleAffector;
global using ParticleForceField3 = MirzaBeig.Scripting.Effects.VortexParticleForceField;
global using MonoBehaviour101 = MirzaBeig.Shaders.ImageEffects.IEBase;
global using IEBase1 = MirzaBeig.Shaders.ImageEffects.Sharpen;
global using GMonoBehaviour111 = ModPlacer;
global using GEffector1 = MotionEffector;
global using GScriptableObject14 = MotionEffectorParameters;
global using GMonoBehaviour203 = MouseLook;
global using Once = MoveByPathType;
global using GMonoBehaviour81 = MoveObjectsToAdditionalPhysSceneMarker;
global using GMonoBehaviour338 = MultiFlare;
global using OffScreen = MultiFlare.EFlareType;
global using Inverse = MultiFlare.ERotationType;
global using Screen1 = MultiFlare.GClass863;
global using GMonoBehaviour339 = MultiFlareLight;
global using GMonoBehaviour340 = MultiFlareLightHelper;
global using GMonoBehaviour395 = MultiplicitySetter;
global using GMonoBehaviour342 = MuzzleEffect;
global using GMonoBehaviour352 = MuzzleFlash;
global using MuzzleEffect1 = MuzzleFume;
global using MuzzleEffect2 = MuzzleJet;
global using CurveDriven = MuzzleJet.EditorType;
global using GMonoBehaviour343 = MuzzleLight;
global using BaseSystemComponent1 = MuzzleManager;
global using GMonoBehaviour368 = MuzzleSmoke;
global using GMonoBehaviour344 = MuzzleSparks;
global using GMonoBehaviour353 = MyParticleSystem;
global using Pair1 = NavEdge;
global using GMonoBehaviour48 = NavGraphClosestPointTester;
global using GetNavGraphContainer = NavGraphContainer;
global using GCreate5 = NavGraphEditorPath;
global using NodeFrom = NavGraphEditorPoint;
global using GetWay = NavGraphEditorPointWay;
global using GetVoxelEditor = NavGraphVoxel;
global using GMonoBehaviour50 = NavGraphVoxelAffectorTester;
global using GMonoBehaviour51 = NavGraphVoxelCreatorTester;
global using GMonoBehaviour67 = NavMeshCutElement;
global using GMonoBehaviour68 = NavMeshCutGroup;
global using GetNearestDoor = NavMeshDoorLink;
global using GMonoBehaviour69 = NavMeshObstacleWrap;
global using GMonoBehaviour180 = NavMeshPathTester;
global using GMonoBehaviour27 = NavMeshSimplifierSuperParent;
global using GetOther = NavPoint;
global using GMonoBehaviour435 = NormalsRegenerator;
global using AbstractParseNotificationByType = NotificationClass;
global using GDeserialize4 = NotificationManagerClass;
global using ParseError = NotificationManagerClass.EProcessError;
global using Idle = ObjectInHandsAnimator.PlayerState;
global using GMonoBehaviour428 = ObservedCullingManager;
global using GGrenade8 = ObservedGrenade;
global using SmokeGrenade1 = ObservedSmokeGrenade;
global using StunGrenade1 = ObservedStunGrenade;
global using DisablerCullingObjectBase3 = OcclusionCullingSwitcher;
global using GMonoBehaviour345 = OnRenderObjectConnector;
global using GMonoBehaviour346 = OnRenderObjectManager;
global using GMonoBehaviour348 = OpticCameraData;
global using GMonoBehaviour361 = PainScreen;
global using GMonoBehaviour9 = PaintingTarget;
global using GMonoBehaviour152 = ParticleForceFieldsDemo;
global using GMonoBehaviour436 = ParticleGroup;
global using GMonoBehaviour354 = ParticlePoolItem;
global using Emitter2 = ParticleSystemAdapter;
global using GMonoBehaviour160 = Paths;
global using Close = PatrolFollowerType;
global using BossRoundProtect = PatrolMode;
global using GetPatrolPosByIndex = PatrolPoint;
global using GetPointChooser = PatrolPointChooserBasic;
global using GMonoBehaviour72 = PatrolPoints;
global using CheckPoint = PatrolPointType;
global using Pause = PatrolStatus;
global using Patrolling = PatrolType;
global using GMonoBehaviour73 = PatrolWay;
global using PatrolWay1 = PatrolWayWithConditions;
global using PatrolWay2 = PatrolWayWithName;
global using GMonoBehaviour437 = PhotoCamera;
global using GetSpeaker = PhraseSpeakerClass;
global using GMonoBehaviour118 = PhysicsCustomOverlapBoxSimulationTest;
global using GMonoBehaviour119 = PhysicsCustomOverlapBoxSimulationTest.BoxColliderGizmoDrawer;
global using GMonoBehaviour120 = PhysicsCustomOverlapBoxSystem;
global using GMonoBehaviour122 = PhysicsCustomOverlapBoxSystem.PhysicsCustomOverlapBoxSystemHandleResult;
global using GMonoBehaviour121 = PhysicsCustomOverlapBoxSystem.PhysicsCustomOverlapBoxSystemScheduler;
global using GMonoBehaviour104 = PhysicsTriggerHandler;
global using GMonoBehaviour362 = Pixelation;
global using GMonoBehaviour196 = PlaceAndScreenObject;
global using YoungestFastPlace = PlaceForCheck;
global using Danger = PlaceForCheckType;
global using GMonoBehaviour10 = PlayerAction;
global using GMonoBehaviour183 = PlayerAnimationTest;
global using GMonoBehaviour176 = PlayerAnimatorDebug;
global using GMonoBehaviour138 = PlayerBones;
global using LeftShoulder = PlayerBoneType;
global using Helmet = PlayerIcons.MeshType;
global using ScriptableObject5 = PlayerIcons.PlayerIconCreatorSettings;
global using GMonoBehaviour130 = PlayerMotor;
global using GMonoBehaviour137 = PlayerOverlapManager;
global using GProne2 = PlayerOverlapManager.EExtrusionCollider;
global using GMonoBehaviour140 = PlayerSpiritAura;
global using GMonoBehaviour141 = PlayerSpiritBonesCreator;
global using PlayerStateContainerBehaviour = PlayerStateContainer;
global using GMonoBehaviour262 = PointerEventsProxy;
global using ByShootType = PointsArrayType;
global using GMonoBehaviour74 = PointWithLookSides;
global using GAmbush1 = PointWithNeighborType;
global using Online = PoolManager.AssemblyType;
global using GResourceKey = PoolManager.GStruct230;
global using Raid = PoolManager.PoolsCategory;
global using GMonoBehaviour363 = Posteffect;
global using MonoBehaviour16 = PostEffects.ContactShadows;
global using ScriptableObject4 = PostEffects.NoiseTextureSet;
global using Posteffect2 = PostprocessGrayscale;
global using GMonoBehaviour440 = PreviewFilter;
global using GMonoBehaviour220 = PreviewMaterialSetter;
global using GMonoBehaviour148 = PreviewPivot;
global using GMonoBehaviour271 = PrimitiveBillboard;
global using MonoBehaviour44 = Prism.Demo.PrismLerpPresetExample;
global using MonoBehaviour45 = Prism.Demo.PrismLightFlicker;
global using Vignette1 = Prism.Utils.AberrationType;
global using Fast = Prism.Utils.AOBlurType;
global using Simple = Prism.Utils.BloomType;
global using Medium2 = Prism.Utils.DoFSamples;
global using MonoBehaviour46 = Prism.Utils.PrismAnimCurveCreator;
global using ScriptableObject14 = Prism.Utils.PrismPreset;
global using Full = Prism.Utils.PrismPresetType;
global using Medium1 = Prism.Utils.SampleCount;
global using Filmic = Prism.Utils.TonemapType;
global using GMonoBehaviour171 = PrismAmbientObscurance;
global using GMonoBehaviour172 = PrismEffects;
global using GMonoBehaviour170 = PrismSetDofFocusPointToCameraRay;
global using GMonoBehaviour173 = PrismSSAO;
global using GGetProfileData = ProfileDataClass;
global using GMonoBehaviour84 = ProfilerControl;
global using DateTime1 = ProfileStats.EStatType;
global using Neutralizer = ProfileStats.ESurvivorClass;
global using StatItem = ProfileStats.GClass694;
global using GMonoBehaviour336 = ProFlareAtlas;
global using GMonoBehaviour222 = QueuePlayer;
global using LayoutGroup1 = RadialLayoutGroup;
global using GMonoBehaviour401 = RainCondensator;
global using GMonoBehaviour402 = RainController;
global using Summer = RainController.ERainControllerStatus;
global using GHigh3 = RainController.ERainIntensity;
global using GMonoBehaviour405 = RainControllerOld;
global using GMonoBehaviour403 = RainFallDrops;
global using GMonoBehaviour406 = RainFollow;
global using GMonoBehaviour409 = RainScreenDrops;
global using GMonoBehaviour404 = RainSplashController;
global using GPickUp = RawQuestClass.EQuestType;
global using BringItemToTrader = RawQuestClass.EStatQuestType;
global using GMonoBehaviour28 = RaycastTester;
global using GMonoBehaviour427 = RendererSelectorTest;
global using GMonoBehaviour272 = RenderQueue;
global using Background1 = RenderQueue.Queues;
global using GItemTemplate8 = RepairKitClass;
global using Front = ReverseDirection;
global using GMonoBehaviour82 = RigidbodySpawner;
global using GMonoBehaviour408 = RippleController;
global using GMonoBehaviour224 = RoadMarksGenerator;
global using GMonoBehaviour227 = RoadsGeneratorFixed;
global using GMonoBehaviour225 = RoadSolidMarkGenerator;
global using GMonoBehaviour226 = RoadSplineGenerator;
global using GMonoBehaviour228 = RoadsTerrainAligner;
global using GMonoBehaviour153 = Rotate;
global using GMonoBehaviour327 = RotateObject;
global using GMonoBehaviour273 = Rotator;
global using MonoBehaviour2 = RuntimeInspector.Debugger;
global using GSingleton = ScatteringSettingsClass;
global using GMonoBehaviour229 = SceneLights;
global using GMonoBehaviour365 = ScopeMaskRenderer;
global using GMonoBehaviour221 = ScopePrefabCache;
global using GetScopeModeInfo = ScopePrefabCache.ScopeModeInfo;
global using GImageEffectBase3 = ScreenEffect;
global using GMonoBehaviour274 = Screenshot360;
global using GMonoBehaviour439 = ScreenshotCreator;
global using Hotkey1 = ScreenshotCreator.CameraObject.Hotkey;
global using CaptureScreenshot = ScreenshotCreator.CaptureMethod;
global using GMonoBehaviour407 = ScreenWater;
global using GMonoBehaviour267 = ScrollBarButtons;
global using GScriptableObject28 = SeasonsGrass;
global using SerializedScriptableObject1 = SeasonsMaterial;
global using GScriptableObject29 = SeasonsMaterialsGrass;
global using GMonoBehaviour230 = SeasonsMaterialsGrassInitialization;
global using SeasonsMaterialsGrass1 = SeasonsMaterialsGrassStub;
global using GCreate16 = SeasonsMaterialsGroup;
global using GScriptableObject30 = SeasonsMaterialsMap;
global using SerializedMonoBehaviour1 = SeasonsMaterialsSlice;
global using DisablerCullingObject1 = SelectiveCullingTrigger;
global using GMonoBehaviour161 = Sequences;
global using GetSupersetCounters = SessionCountersClass;
global using GetCounter = SessionCountersClass.GClass1798;
global using GMonoBehaviour255 = SessionResultPanel;
global using GMonoBehaviour210 = ShaderDataReplacer;
global using GMonoBehaviour418 = ShadowDepthMapToGlobal;
global using GMonoBehaviour411 = ShadowMaskExtractor;
global using GMonoBehaviour388 = Shard;
global using GMonoBehaviour389 = ShardPool;
global using Covered = ShootCoverStatus;
global using ToPlayer = ShootFromCoverType;
global using GetShootPoint = ShootPointClass;
global using AReserveWayAction3 = ShootReservWay;
global using GMonoBehaviour256 = ShortStatsPanel;
global using GEffector2 = ShotEffector;
global using GMonoBehaviour415 = ShowDepth;
global using GMonoBehaviour223 = ShowTextureStreamingSummary;
global using GMonoBehaviour19 = ShuttleMoveDebugObject;
global using GMonoBehaviour232 = SightingCartridge;
global using GMonoBehaviour134 = SightModVisualControllers;
global using GMonoBehaviour231 = SightView;
global using GMonoBehaviour124 = SimpleCharacterController;
global using NeighboursColliders = SimpleCharacterController.GClass661;
global using GMonoBehaviour125 = SimpleCharacterControllerTest;
global using BetterSource1 = SimpleSource;
global using Emitter3 = SimpleSparksAdapter;
global using GMonoBehaviour357 = SimpleSparksRenderer;
global using GMonoBehaviour358 = SimpleSparksTest;
global using GMonoBehaviour341 = SingleFlareController;
global using AReserveWayAction4 = SitReservWay;
global using GMonoBehaviour275 = SkirmishResultDebug;
global using GMonoBehaviour276 = SkirmishResultsDebugContainer;
global using GMonoBehaviour105 = SmallPhysicsObject;
global using Books = SmallPhysicsObject.EPhysicsObjectType;
global using GMonoBehaviour106 = SmallPhysicsSystem;
global using GripPose1 = SmartGrip;
global using CreateStillSmokeGrenade = SmokeGrenade;
global using GMonoBehaviour56 = SmokeGrenadePlace;
global using GrenadeSettings1 = SmokeGrenadeSettings;
global using GMonoBehaviour233 = SmoothLookAt;
global using GMonoBehaviour420 = SnowFlakes;
global using RippleController1 = SnowRippleController;
global using GMonoBehaviour412 = SnowWetRenderer;
global using BulletSoundPlayer3 = SonicBulletSoundPlayer;
global using Sonic9 = SonicBulletSoundPlayer.SonicType;
global using GMonoBehaviour187 = SourceOccluder;
global using GetOtherPlayerCurrentRoom = SpatialAudioRoom;
global using GCreate = SpawnMarker;
global using GMonoBehaviour277 = SpawnResultDebug;
global using GMonoBehaviour278 = SpawnResultsLogParserContainer;
global using GMonoBehaviour252 = SpawnsFieldData;
global using InteractObject = SpawnTriggerType;
global using GMonoBehaviour292 = SpecialBlur;
global using GMonoBehaviour97 = SpecificDoorStateChangeEventGenerator;
global using GMonoBehaviour369 = SpeedTreeTerrainProcessor;
global using SpeedTree = SpeedTreeTerrainProcessor.ObjType;
global using GMonoBehaviour370 = SpeedTreeTest;
global using GMonoBehaviour396 = SpotLightFakeGI;
global using GScriptableObject31 = SpringMaterialBD2S;
global using AbstractMaterialBumpedSpecularSMap2 = SpringMaterialBumpedSpecularSMap;
global using GScriptableObject32 = SpringMaterialFoliage;
global using GScriptableObject33 = SpringMaterialRavine01;
global using GScriptableObject34 = SpringMaterialRavine02;
global using GScriptableObject35 = SpringMaterialRavine08;
global using GScriptableObject36 = SpringMaterialSpeedTree8;
global using GScriptableObject37 = SpringMaterialSpeedTreeEft;
global using AbstractMaterialSpeedVertPaintShaderSolid2 = SpringMaterialSpeedVertPaintShaderSolid;
global using GScriptableObject38 = SpringMaterialSwamp;
global using GMonoBehaviour364 = SSAOMask;
global using CertificateHandler1 = SslCertPatchClass;
global using GMonoBehaviour366 = SSRReplacement;
global using GMonoBehaviour142 = StaminaDebug;
global using GMonoBehaviour24 = StartCoverFinderTester;
global using CreateFakeStash = StashClass;
global using GoTo = StateWarnPlayerRequest;
global using GMonoBehaviour301 = StaticDeferredDecal;
global using GMonoBehaviour302 = StaticDeferredDecalRenderer;
global using GMonoBehaviour149 = StaticLoot;
global using CheckWantTakeStationary = StationaryWeaponLink;
global using GMonoBehaviour257 = StatsList;
global using GMonoBehaviour330 = StencilShadow;
global using GMonoBehaviour430 = Streamer;
global using Loading = Streamer.LoadingState;
global using Vector21 = Struct448.EParams;
global using GMonoBehaviour371 = StuckFPS;
global using AddStunGrenade = StunGrenade;
global using GrenadeSettings2 = StunGrenadeSettings;
global using GScriptableObject39 = SummerMaterialStub;
global using GMonoBehaviour372 = SunOnGlass;
global using BetterSource2 = SuperSource;
global using BetterSource3 = SuperSourceDistant;
global using DisablerCullingObject2 = SwitcherCullingObject;
global using GMonoBehaviour234 = SwitchFilter;
global using GMonoBehaviour166 = SwitchOfCameraEffects;
global using MonoBehaviour5 = Systems.Effects.Effects;
global using MonoBehaviour6 = Systems.Effects.EffectsCommutator;
global using MonoBehaviour7 = Systems.Effects.FlareShotEffectAnimator;
global using MonoBehaviour8 = Systems.Effects.FlareShotEffectSelector;
global using MonoBehaviour9 = Systems.Effects.ScreenColorBlender;
global using MonoBehaviour10 = Systems.Effects.TreePlaneLod;
global using GMonoBehaviour263 = Tab;
global using GMonoBehaviour135 = TacticalComboVisualController;
global using GScriptableObject9 = TagBank;
global using Match1 = TaggedClip;
global using BaseBallistic1 = TerrainBallistic;
global using GMonoBehaviour279 = TerrainCopyist;
global using GMonoBehaviour431 = TerrainLod;
global using GMonoBehaviour280 = TerrainNeighbors;
global using GMonoBehaviour432 = TerrainNeighborsForStreamer;
global using MonoBehaviour1 = TerrainStitch.TerrainNeighbours;
global using GMonoBehaviour355 = TestEffects;
global using GMonoBehaviour188 = TestOcclusion;
global using GMonoBehaviour29 = TestRandomizer;
global using GMonoBehaviour438 = TestTimeLineScript;
global using GMonoBehaviour30 = TestZigZagWay;
global using GScriptableObject48 = TexArraySO;
global using GMonoBehaviour303 = TextureDecalsPainter;
global using GMonoBehaviour374 = ThermalVision;
global using GMonoBehaviour62 = ThowGrenadePlaceInner;
global using GAbstractMonoBehaviour2 = Throwable;
global using GMonoBehaviour132 = ThrowableSettings;
global using GItemTemplate12 = ThrowableWeaponClass;
global using GFindPlace = ThrowGrenadePlace;
global using GMonoBehaviour259 = TimerText;
global using GMonoBehaviour197 = TimeScaler;
global using High = TOD_Rays.ResolutionType;
global using GMonoBehaviour375 = TopLight;
global using GMonoBehaviour378 = TracerController;
global using GMonoBehaviour376 = Tracers;
global using GMonoBehaviour377 = TracersLight;
global using GMonoBehaviour356 = TracerSystem;
global using GPointerEnterHandler1 = TraderCard;
global using Available = TraderCard.ETraderCardState;
global using GInterface1941 = TraderClass;
global using FindControllerById = TraderControllerClass;
global using GMonoBehaviour143 = TraderServicesDebug;
global using GMonoBehaviour193 = TraderTester;
global using GMonoBehaviour57 = TrainNavMeshCutter;
global using GMonoBehaviour181 = TrajectoryDebug;
global using GMonoBehaviour136 = TransformLinks;
global using GMonoBehaviour107 = TreeInteractivePart;
global using GMonoBehaviour390 = Trigger;
global using GetTriggerColliderSearcher = TriggerColliderSearcher;
global using BaseLight2 = TubeLight;
global using GEffector3 = TurnAwayEffector;
global using GScriptableObject15 = TurnAwayPose;
global using GMonoBehaviour204 = TwistRelax;
global using GMonoBehaviour264 = TwoValueBar;
global using GMonoBehaviour174 = UBHelper;
global using EftScreen1 = UI.Hideout.HideoutAreaTransferItemsScreen;
global using QteData1 = UI.Hideout.QteHandleData;
global using LeftPalm = UI.Hideout.QteHandleData.EPropsTarget;
global using PropsData1 = UI.Hideout.QteHandleData.PropsVariantData;
global using UIElement3 = UI.InfoWindow.StretchWindow;
global using UIElement1 = UI.LocalizedFilterButton;
global using UIElement2 = UI.Matchmaker.Group.FriendListInvitePlayerPanel;
global using GScriptableObject47 = UISoundsWrapper;
global using SoundElement1 = UISoundsWrapper.UISound;
global using GMonoBehaviour175 = UltimateBloom;
global using Horizontal = UltimateBloom.AnamorphicDirection;
global using SCREEN = UltimateBloom.BlendMode;
global using FilmicCurve = UltimateBloom.BloomIntensityManagement;
global using Optimized = UltimateBloom.BloomQualityPreset;
global using VerySmallKernel = UltimateBloom.BloomSamplingQuality;
global using Nine = UltimateBloom.BlurSampleCount;
global using Medium = UltimateBloom.BokehFlareQuality;
global using GHigh1 = UltimateBloom.FlareBlurQuality;
global using ChoosePreset = UltimateBloom.FlarePresets;
global using Sharp = UltimateBloom.FlareRendering;
global using Anamorphic = UltimateBloom.FlareStripeType;
global using Single1 = UltimateBloom.FlareType;
global using HeightRelative = UltimateBloom.SamplingMode;
global using GNine = UltimateBloom.SimpleSampleCount;
global using GScriptableObject11 = UltimateBloomPathLocator;
global using GMonoBehaviour379 = Undithering;
global using GMonoBehaviour281 = UniqueId;
global using MonoBehaviour117 = UnityDiagnostics.CPULagSimulator;
global using ThreadSleep = UnityDiagnostics.CPULagSimulator.ELoadType;
global using Volume = UnityEngine.AI.CollectObjects;
global using MonoBehaviour378 = UnityEngine.AI.NavMeshLink;
global using MonoBehaviour379 = UnityEngine.AI.NavMeshModifier;
global using MonoBehaviour380 = UnityEngine.AI.NavMeshModifierVolume;
global using MonoBehaviour381 = UnityEngine.AI.NavMeshSurface;
global using MonoBehaviour377 = UnityEngine.UI.Extensions.SoftMask;
global using GMonoBehaviour89 = UnspawnPoint;
global using GMonoBehaviour410 = UpperLeftAnchor;
global using WeaponPrefab2 = UsableHandsPrefab;
global using AReserveWayAction5 = UseSurgeKitReservWay;
global using MouseXVel = Val.Source;
global using GMonoBehaviour92 = VehicleBase;
global using GMonoBehaviour93 = VehicleSuspension;
global using GMonoBehaviour380 = VisorEffect;
global using GScriptableObject10 = Voice;
global using GMonoBehaviour286 = VolumetricFog;
global using GMonoBehaviour381 = VolumetricLight;
global using GMonoBehaviour382 = VolumetricLightRenderer;
global using GQuarter = VolumetricLightRenderer.VolumtericResolution;
global using GMonoBehaviour331 = VoxelAmbientTest;
global using GEffector4 = WalkEffector;
global using Lame = WalkEffector.EWalkPreset;
global using GScriptableObject16 = WalkPreset;
global using AReserveWayAction6 = WalkReservWay;
global using GMonoBehaviour144 = Watch;
global using GMonoBehaviour419 = WaterController;
global using GMonoBehaviour391 = WaterForSSR;
global using GMonoBehaviour392 = WaterForSSRv2;
global using GMonoBehaviour393 = WaterRenderer;
global using GMonoBehaviour394 = WaterRendererv2;
global using MonoBehaviour3 = WaterSSR.WaterForSSRv3;
global using MonoBehaviour4 = WaterSSR.WaterRendererv3;
global using GetTypesBotWave = WaveInfo;
global using GMonoBehaviour145 = WeaponAnimEventsQueueDebug;
global using CubeMapper1 = WeaponCubeMapper;
global using GMonoBehaviour146 = WeaponDurabilityDebug;
global using GMonoBehaviour147 = WeaponOverheatDebug;
global using GAssetPoolObject = WeaponPrefab;
global using GMonoBehaviour269 = WeaponPreviewPool;
global using BaseSoundPlayer1 = WeaponSoundPlayer;
global using GMonoBehaviour150 = WeaponStorage;
global using GMonoBehaviour207 = WeaponTestController;
global using WeaponCubeMapper1 = WeaponWetDropsController;
global using GCreateDefault = WeatherClass;
global using GMonoBehaviour94 = WeatherEventController;
global using GMonoBehaviour416 = WeatherObstacle;
global using ReadWeightedLootPointSpawnPosition = WeightedLootPointSpawnPosition;
global using OnRenderObjectConnector5 = WetRenderer;
global using GMonoBehaviour91 = WheelDrive;
global using GMonoBehaviour287 = Wind;
global using GMonoBehaviour433 = WindowsManager;
global using MyKeyValuePair1 = WindowsManager.BreakerIdInstanceIdPair;
global using ScriptableObject1 = WindowsManagerUtilities.GeometryBuffers;
global using ScriptableObject2 = WindowsManagerUtilities.InstancesBuffers;
global using ScriptableObject3 = WindowsManagerUtilities.SceneDataContainer;
global using GMonoBehaviour282 = WinterEventVisual;
global using GScriptableObject40 = WinterMaterialBD2S;
global using AbstractMaterialBumpedSpecularSMap3 = WinterMaterialBumpedSpecularSMap;
global using GScriptableObject41 = WinterMaterialFoliage;
global using GScriptableObject42 = WinterMaterialSpeedTree8;
global using GScriptableObject43 = WinterMaterialSpeedTreeEft;
global using AbstractMaterialSpeedVertPaintShaderSolid3 = WinterMaterialSpeedVertPaintShaderSolid;
global using GScriptableObject44 = WinterMaterialStub;
global using GScriptableObject45 = WinterMaterialSwamp;
global using GMonoBehaviour421 = WinterScript;
global using InitialNotConnected = WsConnectionStatus;
global using GMonoBehaviour76 = WsWebSender;
global using GMonoBehaviour80 = WwwTest;
