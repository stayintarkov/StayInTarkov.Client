name: SIT Build

on:
  push:
    paths-ignore:
      - '.github/*'
      - '.github/*_TEMPLATE/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - '.github/*'
      - '.github/*_TEMPLATE/**'
      - '*.md'

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release, Debug]

    runs-on: windows-latest

    env:
      SolutionName: StayInTarkov                              
      CSProj: Source/StayInTarkov.csproj

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      - name: dotnet Restore
        run: dotnet restore

      - name: dotnet Publish
        run: |
          mkdir ${{ env.SolutionName }}-${{ matrix.configuration }}
          dotnet build ${{ env.CSProj }} -c ${{ matrix.configuration }} -o ${{ env.SolutionName }}-${{ matrix.configuration }}
          tar -cf ${{ env.SolutionName }}-${{ matrix.configuration }}.zip ${{ env.SolutionName }}-${{ matrix.configuration }}

      - name: Extract DLLs using 7zip
        run: |
          7z x ${{ env.SolutionName }}-${{ matrix.configuration }}.zip -oextracted_files
          Copy-Item -Path "extracted_files\StayInTarkov-*/Assembly-CSharp.dll" -Destination extracted_files -Force
          Copy-Item -Path "extracted_files\StayInTarkov-*/StayInTarkov.dll" -Destination extracted_files -Force

      - name: Create DLLs only ZIP file
        run: |
          7z a -tzip ${{ env.SolutionName }}-${{ matrix.configuration }}_DLLsOnly.zip extracted_files\*.dll

      - name: Upload DLLs-only artifact
        uses: actions/upload-artifact@v3
        with:
          name: StayInTarkov-Build-${{ matrix.configuration }}_DLLsOnly
          path: ${{ env.SolutionName }}-${{ matrix.configuration }}_DLLsOnly.zip
          if-no-files-found: error

      - name: Set build date
        run: echo "BUILD_DATETIME=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create Release for DLLs-only
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.master_branch)
        env:
          BUILD_DATETIME: ${{ env.BUILD_DATETIME }}
        with:
          draft: true
          generate_release_notes: true
          files: ${{ env.SolutionName }}-${{ matrix.configuration }}_DLLsOnly.zip
          tag_name: StayInTarkov.Client-${{ env.BUILD_DATETIME }}v1.${{ github.run_number }}
