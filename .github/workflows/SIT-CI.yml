name: SIT CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - GH-CI-CD # Adjust as needed
    paths-ignore:
      - '.github/**'
      - '*.md'
  workflow_dispatch:

jobs:
  Build-SIT:
    strategy:
      matrix:
        configuration: [Debug]
    runs-on: windows-latest

    env:
      SolutionName: StayInTarkov                              
      CSProj: Source/StayInTarkov.csproj
      ARTIFACT_NAME: artifact.txt

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: List files in directory
        run: |
          ls -la StayInTarkov-Debug\


      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.SolutionName }}-${{ matrix.configuration }}\
          if-no-files-found: error

      - name: Comment artifact URL on PR
        uses: actions/github-script@v5
        if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context, github } = require('@actions/github');
            const { owner, repo } = context.repo;
            
            try {
              const artifactList = await github.rest.actions.listArtifactsForRepo({
                owner: owner,
                repo: repo
              });

              const artifact = artifactList.data.artifacts.find(a => a.name === context.env.ARTIFACT_NAME);
              if (artifact) {
                const artifactURL = artifact.archive_download_url;
                const prNumber = context.payload.pull_request.number;
                const body = `
                  **Artifact Uploaded**
                  You can download the artifact [here](${artifactURL}).
                `;
                await github.rest.issues.createComment({
                  owner: owner,
                  repo: repo,
                  issue_number: prNumber,
                  body: body
                });
              }
            } catch (error) {
              console.error('Error:', error.message);
            }
