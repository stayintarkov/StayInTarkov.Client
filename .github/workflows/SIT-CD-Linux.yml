name: SIT Build Release Linux

on:
  push:
    paths-ignore:
      - '.github/*'
      - '*.md'
  pull_request:
    paths-ignore:
      - '.github/*'
      - '*.md'
  workflow_dispatch:
    paths-ignore:
      - '.github/*'
      - '*.md'

permissions:
  contents: write

jobs:
  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: ubuntu-latest

    env:
      SolutionName: StayInTarkov
      CSProj: Source/StayInTarkov.csproj

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
          cache: false

      - name: Dotnet Restore
        run: dotnet restore

      - name: Dotnet Publish
        run: |
          dotnet publish ${{ env.CSProj }} -c ${{ matrix.configuration }} -o ./publish

      - name: Get version from DLL
        id: extract-version
        run: |
          version=$(dotnet ./publish/StayInTarkov.dll --version)
          echo "::set-output name=VERSION::$version"

      - name: Zip remaining files
        run: |
          cd ./publish
          zip -r ../${{ env.SolutionName }}-${{ matrix.configuration }}.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: StayInTarkov-${{ matrix.configuration }}-${{ steps.extract-version.outputs.VERSION }}
          path: ${{ env.SolutionName }}-${{ matrix.configuration }}.zip
          if-no-files-found: error

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ matrix.configuration == 'Release' }}
        with:
          draft: true
          generate_release_notes: true
          files: ${{ env.SolutionName }}-${{ matrix.configuration }}.zip
          tag_name: StayInTarkov.Client-${{ steps.extract-version.outputs.VERSION }}
